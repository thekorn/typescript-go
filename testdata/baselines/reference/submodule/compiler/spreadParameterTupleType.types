//// [tests/cases/compiler/spreadParameterTupleType.ts] ////

=== spreadParameterTupleType.ts ===
function f1() {
>f1 : () => (s_1: string, s_2: string) => void

    type A = [s: string];
>A : A

    type C = [...A, ...A];
>C : [s: string, s: string]

    return function fn(...args: C) { }
>function fn(...args: C) { } : (s_1: string, s_2: string) => void
>fn : (s_1: string, s_2: string) => void
>args : [s: string, s: string]
}

function f2() {
>f2 : () => (a_1: string, a_2: string, b_1: string, a_3: string, b_2: string, b_3: string, a_4: string, c: string) => void

    type A = [a: string];
>A : A

    type B = [b: string];
>B : B

    type C = [c: string];
>C : C

    type D = [...A, ...A, ...B, ...A, ...B, ...B, ...A, ...C];
>D : [a: string, a: string, b: string, a: string, b: string, b: string, a: string, c: string]

    return function fn(...args: D) { }
>function fn(...args: D) { } : (a_1: string, a_2: string, b_1: string, a_3: string, b_2: string, b_3: string, a_4: string, c: string) => void
>fn : (a_1: string, a_2: string, b_1: string, a_3: string, b_2: string, b_3: string, a_4: string, c: string) => void
>args : [a: string, a: string, b: string, a: string, b: string, b: string, a: string, c: string]
}

