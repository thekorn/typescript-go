//// [tests/cases/compiler/reactHOCSpreadprops.tsx] ////

=== reactHOCSpreadprops.tsx ===
/// <reference path="react16.d.ts" />
import React = require("react");
>React : typeof React

function f<P>(App: React.ComponentClass<P> | React.StatelessComponent<P>): void {
>f : <P>(App: ComponentClass<P, any> | StatelessComponent<P>) => void
>App : ComponentClass<P, any> | StatelessComponent<P>
>React : any
>React : any

    class C extends React.Component<P & { x: number }> {
>C : C<P>
>React.Component : Component<P & { x: number; }, {}, any>
>React : typeof React
>Component : typeof Component
>x : number

        render() {
>render : () => Element

            return <App {...this.props} />;
><App {...this.props} /> : Element
>App : ComponentClass<P, any> | StatelessComponent<P>
>this.props : Readonly<{ children?: ReactNode; }> & Readonly<P & { x: number; }>
>this : this
>props : Readonly<{ children?: ReactNode; }> & Readonly<P & { x: number; }>
        }
    }
}

