--- old.moduleAugmentationDoesInterfaceMergeOfReexport.symbols
+++ new.moduleAugmentationDoesInterfaceMergeOfReexport.symbols
@@= skipped -4, +4 lines =@@
 >Foo : Symbol(Foo, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
 
     x: number;
->x : Symbol(Foo.x, Decl(file.ts, 0, 22))
+>x : Symbol(x, Decl(file.ts, 0, 22))
 }
 === reexport.ts ===
 
@@= skipped -10, +10 lines =@@
 >ns : Symbol(ns, Decl(augment.ts, 0, 6))
 
 declare module "./reexport" {
->"./reexport" : Symbol(ns, Decl(reexport.ts, 0, 0), Decl(augment.ts, 0, 33))
+>"./reexport" : Symbol("reexport", Decl(reexport.ts, 0, 0), Decl(augment.ts, 0, 33))
 
     export interface Foo {
 >Foo : Symbol(Foo, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
 
         self: Foo;
->self : Symbol(Foo.self, Decl(augment.ts, 3, 26))
+>self : Symbol(self, Decl(augment.ts, 3, 26))
 >Foo : Symbol(Foo, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
     }
 }
@@= skipped -14, +14 lines =@@
 declare const f: ns.Foo;
 >f : Symbol(f, Decl(augment.ts, 8, 13))
 >ns : Symbol(ns, Decl(augment.ts, 0, 6))
->Foo : Symbol(ns.Foo, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
+>Foo : Symbol(Foo, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
 
 f.x;
->f.x : Symbol(ns.Foo.x, Decl(file.ts, 0, 22))
+>f.x : Symbol(x, Decl(file.ts, 0, 22))
 >f : Symbol(f, Decl(augment.ts, 8, 13))
->x : Symbol(ns.Foo.x, Decl(file.ts, 0, 22))
+>x : Symbol(x, Decl(file.ts, 0, 22))
 
 f.self;
->f.self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
+>f.self : Symbol(self, Decl(augment.ts, 3, 26))
 >f : Symbol(f, Decl(augment.ts, 8, 13))
->self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
+>self : Symbol(self, Decl(augment.ts, 3, 26))
 
 f.self.x;
->f.self.x : Symbol(ns.Foo.x, Decl(file.ts, 0, 22))
->f.self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
+>f.self.x : Symbol(x, Decl(file.ts, 0, 22))
+>f.self : Symbol(self, Decl(augment.ts, 3, 26))
 >f : Symbol(f, Decl(augment.ts, 8, 13))
->self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
->x : Symbol(ns.Foo.x, Decl(file.ts, 0, 22))
+>self : Symbol(self, Decl(augment.ts, 3, 26))
+>x : Symbol(x, Decl(file.ts, 0, 22))
 
 f.self.self;
->f.self.self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
->f.self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
+>f.self.self : Symbol(self, Decl(augment.ts, 3, 26))
+>f.self : Symbol(self, Decl(augment.ts, 3, 26))
 >f : Symbol(f, Decl(augment.ts, 8, 13))
->self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
->self : Symbol(ns.Foo.self, Decl(augment.ts, 3, 26))
+>self : Symbol(self, Decl(augment.ts, 3, 26))
+>self : Symbol(self, Decl(augment.ts, 3, 26))
 
