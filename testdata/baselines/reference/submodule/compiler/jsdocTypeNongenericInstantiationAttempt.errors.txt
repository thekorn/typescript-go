index.js(2,19): error TS2315: Type 'Boolean' is not generic.
index.js(2,27): error TS2304: Cannot find name 'T'.
index2.js(2,19): error TS2304: Cannot find name 'Void'.
index2.js(2,24): error TS2304: Cannot find name 'T'.
index3.js(2,19): error TS2304: Cannot find name 'Undefined'.
index3.js(2,29): error TS2304: Cannot find name 'T'.
index4.js(2,19): error TS2315: Type 'Function' is not generic.
index4.js(2,28): error TS2304: Cannot find name 'T'.
index5.js(2,19): error TS2315: Type 'String' is not generic.
index5.js(2,26): error TS2304: Cannot find name 'T'.
index6.js(2,19): error TS2315: Type 'Number' is not generic.
index6.js(2,26): error TS2304: Cannot find name 'T'.
index7.js(2,19): error TS2315: Type 'Object' is not generic.
index7.js(2,26): error TS2304: Cannot find name 'T'.
index8.js(4,12): error TS2749: 'fn' refers to a value, but is being used as a type here. Did you mean 'typeof fn'?
index8.js(4,15): error TS2304: Cannot find name 'T'.


==== index.js (2 errors) ====
    /**
     * @param {<T>(m: Boolean<T>) => string} somebody
                      ~~~~~~~~~~
!!! error TS2315: Type 'Boolean' is not generic.
                              ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello(somebody) {
        return 'Hello ' + somebody;
    }
    
==== index2.js (2 errors) ====
    /**
     * @param {<T>(m: Void<T>) => string} somebody
                      ~~~~
!!! error TS2304: Cannot find name 'Void'.
                           ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello2(somebody) {
        return 'Hello ' + somebody;
    }
    
    
==== index3.js (2 errors) ====
    /**
     * @param {<T>(m: Undefined<T>) => string} somebody
                      ~~~~~~~~~
!!! error TS2304: Cannot find name 'Undefined'.
                                ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello3(somebody) {
        return 'Hello ' + somebody;
    }
    
    
==== index4.js (2 errors) ====
    /**
     * @param {<T>(m: Function<T>) => string} somebody
                      ~~~~~~~~~~~
!!! error TS2315: Type 'Function' is not generic.
                               ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello4(somebody) {
        return 'Hello ' + somebody;
    }
    
    
==== index5.js (2 errors) ====
    /**
     * @param {<T>(m: String<T>) => string} somebody
                      ~~~~~~~~~
!!! error TS2315: Type 'String' is not generic.
                             ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello5(somebody) {
        return 'Hello ' + somebody;
    }
    
    
==== index6.js (2 errors) ====
    /**
     * @param {<T>(m: Number<T>) => string} somebody
                      ~~~~~~~~~
!!! error TS2315: Type 'Number' is not generic.
                             ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello6(somebody) {
        return 'Hello ' + somebody;
    }
    
    
==== index7.js (2 errors) ====
    /**
     * @param {<T>(m: Object<T>) => string} somebody
                      ~~~~~~~~~
!!! error TS2315: Type 'Object' is not generic.
                             ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello7(somebody) {
        return 'Hello ' + somebody;
    }
    
==== index8.js (2 errors) ====
    function fn() {}
    
    /**
     * @param {fn<T>} somebody
               ~~
!!! error TS2749: 'fn' refers to a value, but is being used as a type here. Did you mean 'typeof fn'?
                  ~
!!! error TS2304: Cannot find name 'T'.
     */
    function sayHello8(somebody) { }