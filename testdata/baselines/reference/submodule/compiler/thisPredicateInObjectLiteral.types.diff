--- old.thisPredicateInObjectLiteral.types
+++ new.thisPredicateInObjectLiteral.types
@@= skipped -2, +2 lines =@@
 === thisPredicateInObjectLiteral.ts ===
 // Should be OK
 const foo2 = {
->foo2 : { isNumber(): this is { b: string; }; }
->{    isNumber(): this is { b: string } {        return true;    },} : { isNumber(): this is { b: string; }; }
+>foo2 : { isNumber: () => this is { b: string; }; }
+>{    isNumber(): this is { b: string } {        return true;    },} : { isNumber: () => this is { b: string; }; }
 
     isNumber(): this is { b: string } {
 >isNumber : () => this is { b: string; }
@@= skipped -15, +15 lines =@@
 
 // Still an error
 const foo3 = {
->foo3 : { isNumber(x: any): x is this; }
->{    isNumber(x: any): x is this {        return true;    },} : { isNumber(x: any): x is this; }
+>foo3 : { isNumber: (x: any) => x is any; }
+>{    isNumber(x: any): x is this {        return true;    },} : { isNumber: (x: any) => x is any; }
 
     isNumber(x: any): x is this {
->isNumber : (x: any) => x is this
+>isNumber : (x: any) => x is any
 >x : any
 
         return true;
