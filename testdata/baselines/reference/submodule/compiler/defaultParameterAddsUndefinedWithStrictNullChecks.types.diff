--- old.defaultParameterAddsUndefinedWithStrictNullChecks.types
+++ new.defaultParameterAddsUndefinedWithStrictNullChecks.types
@@= skipped -1, +1 lines =@@
 
 === defaultParameterAddsUndefinedWithStrictNullChecks.ts ===
 function f(addUndefined1 = "J", addUndefined2?: number) {
->f : (addUndefined1?: string, addUndefined2?: number) => number
+>f : (addUndefined1?: string, addUndefined2?: number | undefined) => number
 >addUndefined1 : string
 >"J" : "J"
 >addUndefined2 : number | undefined
@@= skipped -16, +16 lines =@@
 >0 : 0
 }
 function g(addUndefined = "J", addDefined: number) {
->g : (addUndefined: string | undefined, addDefined: number) => number
+>g : (addUndefined: string, addDefined: number) => number
 >addUndefined : string
 >"J" : "J"
 >addDefined : number
@@= skipped -18, +18 lines =@@
 >f() + f('a', 1) + f('b') : number
 >f() + f('a', 1) : number
 >f() : number
->f : (addUndefined1?: string, addUndefined2?: number) => number
+>f : (addUndefined1?: string, addUndefined2?: number | undefined) => number
 >f('a', 1) : number
->f : (addUndefined1?: string, addUndefined2?: number) => number
+>f : (addUndefined1?: string, addUndefined2?: number | undefined) => number
 >'a' : "a"
 >1 : 1
 >f('b') : number
->f : (addUndefined1?: string, addUndefined2?: number) => number
+>f : (addUndefined1?: string, addUndefined2?: number | undefined) => number
 >'b' : "b"
 >f(undefined, 2) : number
->f : (addUndefined1?: string, addUndefined2?: number) => number
+>f : (addUndefined1?: string, addUndefined2?: number | undefined) => number
 >undefined : undefined
 >2 : 2
 
@@= skipped -18, +18 lines =@@
 >total : number
 >g('c', 3) + g(undefined, 4) : number
 >g('c', 3) : number
->g : (addUndefined: string | undefined, addDefined: number) => number
+>g : (addUndefined: string, addDefined: number) => number
 >'c' : "c"
 >3 : 3
 >g(undefined, 4) : number
->g : (addUndefined: string | undefined, addDefined: number) => number
+>g : (addUndefined: string, addDefined: number) => number
 >undefined : undefined
 >4 : 4
 
 function foo1(x: string = "string", b: number) {
->foo1 : (x: string | undefined, b: number) => void
+>foo1 : (x: string, b: number) => void
 >x : string
 >"string" : "string"
 >b : number
@@= skipped -21, +21 lines =@@
 }
 
 function foo2(x = "string", b: number) {
->foo2 : (x: string | undefined, b: number) => void
+>foo2 : (x: string, b: number) => void
 >x : string
 >"string" : "string"
 >b : number
@@= skipped -69, +69 lines =@@
 // .d.ts should have `string | undefined` for foo1, foo2, foo3 and foo4
 foo1(undefined, 1);
 >foo1(undefined, 1) : void
->foo1 : (x: string | undefined, b: number) => void
+>foo1 : (x: string, b: number) => void
 >undefined : undefined
 >1 : 1
 
 foo2(undefined, 1);
 >foo2(undefined, 1) : void
->foo2 : (x: string | undefined, b: number) => void
+>foo2 : (x: string, b: number) => void
 >undefined : undefined
 >1 : 1
 
