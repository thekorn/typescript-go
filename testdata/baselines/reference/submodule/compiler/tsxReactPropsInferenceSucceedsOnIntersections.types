//// [tests/cases/compiler/tsxReactPropsInferenceSucceedsOnIntersections.tsx] ////

=== tsxReactPropsInferenceSucceedsOnIntersections.tsx ===
/// <reference path="react16.d.ts" />

import React from "react";
>React : typeof React

export type ButtonProps<T = {}> = React.ButtonHTMLAttributes<HTMLButtonElement> & {
>ButtonProps : ButtonProps<T>
>React : any

    outline?: boolean;
>outline : boolean | undefined

} & T;

declare class Button<T = {}> extends React.Component<ButtonProps<T>> { }
>Button : Button<T>
>React.Component : Component<ButtonProps<T>, {}, any>
>React : typeof React
>Component : typeof Component

interface CustomButtonProps extends ButtonProps {
    customProp: string;
>customProp : string
}

const CustomButton: React.SFC<CustomButtonProps> = props => <Button {...props} />;
>CustomButton : SFC<CustomButtonProps>
>React : any
>props => <Button {...props} /> : (props: CustomButtonProps & { children?: ReactNode; }) => Element
>props : CustomButtonProps & { children?: ReactNode; }
><Button {...props} /> : Element
>Button : typeof Button
>props : CustomButtonProps & { children?: ReactNode; }

