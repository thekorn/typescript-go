--- old.jsxEmptyExpressionNotCountedAsChild(jsx=react-jsxdev).symbols
+++ new.jsxEmptyExpressionNotCountedAsChild(jsx=react-jsxdev).symbols
@@= skipped -8, +8 lines =@@
 >Props : Symbol(Props, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 1, 30))
 
     children: React.ReactElement<any>
->children : Symbol(Props.children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
+>children : Symbol(children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
 >React : Symbol(React, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 1, 6))
->ReactElement : Symbol(React.ReactElement, Decl(react16.d.ts, 135, 9))
+>ReactElement : Symbol(ReactElement, Decl(react16.d.ts, 135, 9))
 }
 
 function Wrapper(props: Props) {
@@= skipped -11, +11 lines =@@
 >Props : Symbol(Props, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 1, 30))
 
     return <div>{props.children}</div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
->props.children : Symbol(Props.children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
+>div : Symbol(div, Decl(react16.d.ts, 2546, 114))
+>props.children : Symbol(children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
 >props : Symbol(props, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 7, 17))
->children : Symbol(Props.children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
+>children : Symbol(children, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 3, 17))
+>div : Symbol(div, Decl(react16.d.ts, 2546, 114))
 }
 
 const element = (
@@= skipped -15, +15 lines =@@
 
     {/* comment */}
      <div>Hello</div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react16.d.ts, 2546, 114))
+>div : Symbol(div, Decl(react16.d.ts, 2546, 114))
+>div : Symbol(div, Decl(react16.d.ts, 2546, 114))
 
     </Wrapper>
 >Wrapper : Symbol(Wrapper, Decl(jsxEmptyExpressionNotCountedAsChild.tsx, 5, 1))
