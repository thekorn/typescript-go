--- old.typeGuardNarrowByUntypedField.types
+++ new.typeGuardNarrowByUntypedField.types
@@= skipped -6, +6 lines =@@
 >property : P
 
 declare const arrayLikeOrIterable: ArrayLike<any> | Iterable<any>;
->arrayLikeOrIterable : ArrayLike<any> | Iterable<any>
+>arrayLikeOrIterable : ArrayLike<any> | Iterable<any, any, any>
 
 if (hasOwnProperty(arrayLikeOrIterable, 'length')) {
 >hasOwnProperty(arrayLikeOrIterable, 'length') : boolean
 >hasOwnProperty : <P extends PropertyKey>(target: {}, property: P) => target is { readonly [K in P]: unknown; }
->arrayLikeOrIterable : ArrayLike<any> | Iterable<any>
+>arrayLikeOrIterable : ArrayLike<any> | Iterable<any, any, any>
 >'length' : "length"
 
     let x: number = arrayLikeOrIterable.length;
