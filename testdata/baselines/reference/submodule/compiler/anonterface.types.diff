--- old.anonterface.types
+++ new.anonterface.types
@@= skipped -7, +7 lines =@@
 >C : C
 
         m(fn:{ (n:number):string; },n2:number):string {
->m : (fn: { (n: number): string; }, n2: number) => string
+>m : (fn: (n: number) => string, n2: number) => string
 >fn : (n: number) => string
 >n : number
 >n2 : number
@@= skipped -14, +14 lines =@@
 }
 
 var c=new M.C();
->c : M.C
->new M.C() : M.C
->M.C : typeof M.C
+>c : C
+>new M.C() : C
+>M.C : typeof C
 >M : typeof M
->C : typeof M.C
+>C : typeof C
 
 c.m(function(n) { return "hello: "+n; },18);
 >c.m(function(n) { return "hello: "+n; },18) : string
->c.m : (fn: { (n: number): string; }, n2: number) => string
->c : M.C
->m : (fn: { (n: number): string; }, n2: number) => string
+>c.m : (fn: (n: number) => string, n2: number) => string
+>c : C
+>m : (fn: (n: number) => string, n2: number) => string
 >function(n) { return "hello: "+n; } : (n: number) => string
 >n : number
 >"hello: "+n : string
