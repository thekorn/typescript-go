--- old.expressionWithJSDocTypeArguments.types
+++ new.expressionWithJSDocTypeArguments.types
@@= skipped -34, +34 lines =@@
 >foo : <T>(x: T) => T
 
 type TWhatFoo = typeof foo<?>;
->TWhatFoo : typeof foo<unknown>
+>TWhatFoo : (x: any) => any
 >foo : <T>(x: T) => T
 
 type THuhFoo = typeof foo<string?>;
->THuhFoo : typeof foo<string | null>
+>THuhFoo : (x: string | null) => string | null
 >foo : <T>(x: T) => T
 
 type TNopeFoo = typeof foo<?string>;
->TNopeFoo : typeof foo<string | null>
+>TNopeFoo : (x: string | null) => string | null
 >foo : <T>(x: T) => T
 
 type TComeOnFoo = typeof foo<?string?>;
->TComeOnFoo : typeof foo<(string | null) | null>
+>TComeOnFoo : (x: string | null) => string | null
 >foo : <T>(x: T) => T
 
 const WhatBar = Bar<?>;
@@= skipped -36, +36 lines =@@
 >Bar : typeof Bar
 
 type TWhatBar = typeof Bar<?>;
->TWhatBar : typeof Bar<unknown>
+>TWhatBar : { new (x: any): Bar<any>; prototype: Bar<any>; }
 >Bar : typeof Bar
 
 type THuhBar = typeof Bar<string?>;
->THuhBar : typeof Bar<string | null>
+>THuhBar : { new (x: string | null): Bar<string | null>; prototype: Bar<any>; }
 >Bar : typeof Bar
 
 type TNopeBar = typeof Bar<?string>;
->TNopeBar : typeof Bar<string | null>
+>TNopeBar : { new (x: string | null): Bar<string | null>; prototype: Bar<any>; }
 >Bar : typeof Bar
 
 type TComeOnBar = typeof Bar<?string?>;
->TComeOnBar : typeof Bar<(string | null) | null>
+>TComeOnBar : { new (x: string | null): Bar<string | null>; prototype: Bar<any>; }
 >Bar : typeof Bar
 
