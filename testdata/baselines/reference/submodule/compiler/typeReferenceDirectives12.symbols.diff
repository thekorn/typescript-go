--- old.typeReferenceDirectives12.symbols
+++ new.typeReferenceDirectives12.symbols
@@= skipped -11, +11 lines =@@
 
 export const foo = new Cls().foo();
 >foo : Symbol(foo, Decl(mod2.ts, 4, 12))
->new Cls().foo : Symbol(Cls.foo, Decl(mod1.ts, 6, 19))
+>new Cls().foo : Symbol(foo, Decl(mod1.ts, 6, 19))
 >Cls : Symbol(Cls, Decl(mod2.ts, 0, 8))
->foo : Symbol(Cls.foo, Decl(mod1.ts, 6, 19))
+>foo : Symbol(foo, Decl(mod1.ts, 6, 19))
 
 export const bar = Cls.bar();
 >bar : Symbol(bar, Decl(mod2.ts, 5, 12))
->Cls.bar : Symbol(Cls.bar, Decl(mod1.ts, 9, 19))
+>Cls.bar : Symbol(bar, Decl(mod1.ts, 9, 19))
 >Cls : Symbol(Cls, Decl(mod2.ts, 0, 8))
->bar : Symbol(Cls.bar, Decl(mod1.ts, 9, 19))
+>bar : Symbol(bar, Decl(mod1.ts, 9, 19))
 
-=== /types/lib/index.d.ts ===
-interface Lib { x }
->Lib : Symbol(Lib, Decl(index.d.ts, 0, 0))
->x : Symbol(Lib.x, Decl(index.d.ts, 0, 15))
-
 === /main.ts ===
 export class Cls {
 >Cls : Symbol(Cls, Decl(main.ts, 0, 0), Decl(mod1.ts, 5, 25), Decl(mod1.ts, 8, 5))
 
     x
->x : Symbol(Cls.x, Decl(main.ts, 0, 18))
+>x : Symbol(x, Decl(main.ts, 0, 18))
 }
 
 === /mod1.ts ===
@@= skipped -30, +25 lines =@@
 >Cls : Symbol(Cls, Decl(mod1.ts, 2, 8))
 
 Cls.prototype.foo = function() { return undefined; }
->Cls.prototype.foo : Symbol(Cls.foo, Decl(mod1.ts, 6, 19))
->Cls.prototype : Symbol(Cls.prototype)
+>Cls.prototype.foo : Symbol(foo, Decl(mod1.ts, 6, 19))
+>Cls.prototype : Symbol(prototype)
 >Cls : Symbol(Cls, Decl(mod1.ts, 2, 8))
->prototype : Symbol(Cls.prototype)
->foo : Symbol(Cls.foo, Decl(mod1.ts, 6, 19))
+>prototype : Symbol(prototype)
+>foo : Symbol(foo, Decl(mod1.ts, 6, 19))
 >undefined : Symbol(undefined)
 
 declare module "./main" {
@@= skipped -14, +14 lines =@@
 >Cls : Symbol(Cls, Decl(main.ts, 0, 0), Decl(mod1.ts, 5, 25), Decl(mod1.ts, 8, 5))
 
         foo(): Lib;
->foo : Symbol(Cls.foo, Decl(mod1.ts, 6, 19))
->Lib : Symbol(Lib, Decl(index.d.ts, 0, 0))
+>foo : Symbol(foo, Decl(mod1.ts, 6, 19))
+>Lib : Symbol(Lib)
     }
     namespace Cls {
 >Cls : Symbol(Cls, Decl(main.ts, 0, 0), Decl(mod1.ts, 5, 25), Decl(mod1.ts, 8, 5))
 
         function bar(): Lib;
 >bar : Symbol(bar, Decl(mod1.ts, 9, 19))
->Lib : Symbol(Lib, Decl(index.d.ts, 0, 0))
+>Lib : Symbol(Lib)
     }
 }
 
