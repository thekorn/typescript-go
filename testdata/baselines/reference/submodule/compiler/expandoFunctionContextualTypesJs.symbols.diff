--- old.expandoFunctionContextualTypesJs.symbols
+++ new.expandoFunctionContextualTypesJs.symbols
@@= skipped -10, +10 lines =@@
   * @type {StatelessComponent<MyComponentProps>}
   */
 const MyComponent = () => /* @type {any} */(null);
->MyComponent : Symbol(MyComponent, Decl(input.js, 9, 5), Decl(input.js, 9, 50))
+>MyComponent : Symbol(MyComponent, Decl(input.js, 9, 5))
 
 MyComponent.defaultProps = {
 >MyComponent.defaultProps : Symbol(defaultProps, Decl(input.js, 4, 23))
->MyComponent : Symbol(MyComponent, Decl(input.js, 9, 5), Decl(input.js, 9, 50))
+>MyComponent : Symbol(MyComponent, Decl(input.js, 9, 5))
 >defaultProps : Symbol(defaultProps, Decl(input.js, 4, 23))
 
     color: "red"
@@= skipped -13, +13 lines =@@
 };
 
 const MyComponent2 = () => null;
->MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5), Decl(input.js, 15, 32))
+>MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5))
 
 /**
  * @type {MyComponentProps}
  */
 MyComponent2.defaultProps = {
->MyComponent2.defaultProps : Symbol(MyComponent2.defaultProps, Decl(input.js, 15, 32))
->MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5), Decl(input.js, 15, 32))
->defaultProps : Symbol(MyComponent2.defaultProps, Decl(input.js, 15, 32))
+>MyComponent2.defaultProps : Symbol(defaultProps, Decl(input.js, 15, 32))
+>MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5))
+>defaultProps : Symbol(defaultProps, Decl(input.js, 15, 32))
 
     color: "red"
 >color : Symbol(color, Decl(input.js, 20, 29))
@@= skipped -19, +19 lines =@@
  */
 const check = MyComponent2;
 >check : Symbol(check, Decl(input.js, 27, 5))
->MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5), Decl(input.js, 15, 32))
+>MyComponent2 : Symbol(MyComponent2, Decl(input.js, 15, 5))
 
 /**
  * 
@@= skipped -17, +17 lines =@@
      * @type {MyComponentProps}
      */
     this.props = { color: "red" };
->this.props : Symbol(foo.props, Decl(input.js, 35, 16))
->this : Symbol(foo, Decl(input.js, 33, 28))
->props : Symbol(foo.props, Decl(input.js, 35, 16))
 >color : Symbol(color, Decl(input.js, 39, 18))
 
     expectLiteral(this);
 >expectLiteral : Symbol(expectLiteral, Decl(input.js, 27, 27))
->this : Symbol(foo, Decl(input.js, 33, 28))
 }
 
 /**
  * @type {MyComponentProps}
  */
 module.exports = {
->module.exports : Symbol(module.exports, Decl(input.js, 0, 0))
->module : Symbol(export=, Decl(input.js, 42, 1))
->exports : Symbol(export=, Decl(input.js, 42, 1))
-
     color: "red"
 >color : Symbol(color, Decl(input.js, 47, 18))
 }
@@= skipped -25, +17 lines =@@
 expectLiteral({ props: module.exports });
 >expectLiteral : Symbol(expectLiteral, Decl(input.js, 27, 27))
 >props : Symbol(props, Decl(input.js, 51, 15))
->module.exports : Symbol(module.exports, Decl(input.js, 0, 0))
->module : Symbol(module, Decl(input.js, 42, 1), Decl(input.js, 51, 22))
->exports : Symbol(module.exports, Decl(input.js, 0, 0))
 
