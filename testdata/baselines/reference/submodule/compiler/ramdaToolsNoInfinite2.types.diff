--- old.ramdaToolsNoInfinite2.types
+++ new.ramdaToolsNoInfinite2.types
@@= skipped -357, +357 lines =@@
 >Keys : any
 
     export type NonNullableFlat<O> = {
->NonNullableFlat : { [K in keyof O]: UNonNullable<O[K]>; }
+>NonNullableFlat : { [K in keyof O]: NonNullable<O[K]>; }
 
         [K in keyof O]: UNonNullable<O[K]>;
     } & {};
@@= skipped -15, +15 lines =@@
 >NonNullablePart : NonNullablePart<O, depth>
 
         'flat': NonNullableFlat<O>;
->'flat' : { [K in keyof O]: import("Union/Exclude").Exclude<O[K], null | undefined>; }
+>'flat' : { [K in keyof O]: Exclude<O[K], null | undefined>; }
 
         'deep': NonNullableDeep<O>;
 >'deep' : NonNullableDeep<O>
@@= skipped -52, +52 lines =@@
 >Numbers : Numbers
 
         'string': {
->'string' : { all: Format<IterationMap[KnownIterationMapKeys], "s">; '+': Format<IterationMap[PositiveIterationKeys], "s">; '-': Format<IterationMap[NegativeIterationKeys], "s">; '0': Format<IterationMap["0"], "s">; }
+>'string' : { all: "-1" | "-10" | "-11" | "-12" | "-13" | "-14" | "-15" | "-16" | "-17" | "-18" | "-19" | "-2" | "-20" | "-21" | "-22" | "-23" | "-24" | "-25" | "-26" | "-27" | "-28" | "-29" | "-3" | "-30" | "-31" | "-32" | "-33" | "-34" | "-35" | "-36" | "-37" | "-38" | "-39" | "-4" | "-40" | "-5" | "-6" | "-7" | "-8" | "-9" | "0" | "1" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17" | "18" | "19" | "2" | "20" | "21" | "22" | "23" | "24" | "25" | "26" | "27" | "28" | "29" | "3" | "30" | "31" | "32" | "33" | "34" | "35" | "36" | "37" | "38" | "39" | "4" | "40" | "5" | "6" | "7" | "8" | "9"; '+': "1" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17" | "18" | "19" | "2" | "20" | "21" | "22" | "23" | "24" | "25" | "26" | "27" | "28" | "29" | "3" | "30" | "31" | "32" | "33" | "34" | "35" | "36" | "37" | "38" | "39" | "4" | "40" | "5" | "6" | "7" | "8" | "9"; '-': "-1" | "-10" | "-11" | "-12" | "-13" | "-14" | "-15" | "-16" | "-17" | "-18" | "-19" | "-2" | "-20" | "-21" | "-22" | "-23" | "-24" | "-25" | "-26" | "-27" | "-28" | "-29" | "-3" | "-30" | "-31" | "-32" | "-33" | "-34" | "-35" | "-36" | "-37" | "-38" | "-39" | "-4" | "-40" | "-5" | "-6" | "-7" | "-8" | "-9"; '0': "0"; }
 
             'all': Format<IterationMap[KnownIterationMapKeys], 's'>;
 >'all' : "-1" | "-10" | "-11" | "-12" | "-13" | "-14" | "-15" | "-16" | "-17" | "-18" | "-19" | "-2" | "-20" | "-21" | "-22" | "-23" | "-24" | "-25" | "-26" | "-27" | "-28" | "-29" | "-3" | "-30" | "-31" | "-32" | "-33" | "-34" | "-35" | "-36" | "-37" | "-38" | "-39" | "-4" | "-40" | "-5" | "-6" | "-7" | "-8" | "-9" | "0" | "1" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17" | "18" | "19" | "2" | "20" | "21" | "22" | "23" | "24" | "25" | "26" | "27" | "28" | "29" | "3" | "30" | "31" | "32" | "33" | "34" | "35" | "36" | "37" | "38" | "39" | "4" | "40" | "5" | "6" | "7" | "8" | "9"
@@= skipped -16, +16 lines =@@
 
         };
         'number': {
->'number' : { all: Format<IterationMap[KnownIterationMapKeys], "n">; '+': Format<IterationMap[PositiveIterationKeys], "n">; '-': Format<IterationMap[NegativeIterationKeys], "n">; '0': Format<IterationMap["0"], "n">; }
+>'number' : { all: -40 | -39 | -38 | -37 | -36 | -35 | -34 | -33 | -32 | -31 | -30 | -29 | -28 | -27 | -26 | -25 | -24 | -23 | -22 | -21 | -20 | -19 | -18 | -17 | -16 | -15 | -14 | -13 | -12 | -11 | -10 | -9 | -8 | -7 | -6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40; '+': 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40; '-': -40 | -39 | -38 | -37 | -36 | -35 | -34 | -33 | -32 | -31 | -30 | -29 | -28 | -27 | -26 | -25 | -24 | -23 | -22 | -21 | -20 | -19 | -18 | -17 | -16 | -15 | -14 | -13 | -12 | -11 | -10 | -9 | -8 | -7 | -6 | -5 | -4 | -3 | -2 | -1; '0': 0; }
 
             'all': Format<IterationMap[KnownIterationMapKeys], 'n'>;
 >'all' : -40 | -39 | -38 | -37 | -36 | -35 | -34 | -33 | -32 | -31 | -30 | -29 | -28 | -27 | -26 | -25 | -24 | -23 | -22 | -21 | -20 | -19 | -18 | -17 | -16 | -15 | -14 | -13 | -12 | -11 | -10 | -9 | -8 | -7 | -6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40
@@= skipped -54, +54 lines =@@
 >List : any
 
     export type Naked<L extends List> = Overwrite<Required<L>, L>;
->Naked : { [K in keyof Required<L>]: K extends keyof L ? L[K] : Required<L>[K]; }
+>Naked : { [K in keyof L]: K extends keyof L ? L[K] : Required<L>[K]; }
 }
 declare module "List/Tail" {
 >"List/Tail" : typeof import("List/Tail")
@@= skipped -717, +717 lines =@@
 >NonNullable : NonNullable<L, K, depth>
 
         1: Cast<ONonNullable<L, Key, depth>, List>;
->1 : Cast<ONonNullable<L, Key, depth>, List>
+>1 : Cast<NonNullable<L, Key, depth>, List>
 
         0: ListOf<ONonNullable<ObjectOf<L>, NumberOf<K>, depth>>;
->0 : ListOf<ONonNullable<ObjectOf<L>, NumberOf<K>, depth>>
+>0 : ListOf<NonNullable<ObjectOf<L>, NumberOf<K>, depth>>
 
     }[Implements<Keys<L>, K>] & {};
 }
@@= skipped -28, +28 lines =@@
 >Type : any
 
     export type x = Type<{}, 'x'>;
->x : { [symbol]: "x"; }
+>x : { (Unique symbol): "x"; }
 }
 declare module "List/List" {
 >"List/List" : typeof import("List/List")
