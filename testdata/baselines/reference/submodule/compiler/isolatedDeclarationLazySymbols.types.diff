--- old.isolatedDeclarationLazySymbols.types
+++ new.isolatedDeclarationLazySymbols.types
@@= skipped -1, +1 lines =@@
 
 === isolatedDeclarationLazySymbols.ts ===
 export function foo() {
->foo : typeof foo
+>foo : { (): void; b: string; }
 
 }
 
 const o = {
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
->{    ["prop.inner"]: "a",    prop: {        inner: "b",    }} as const : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
->{    ["prop.inner"]: "a",    prop: {        inner: "b",    }} : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
+>{    ["prop.inner"]: "a",    prop: {        inner: "b",    }} as const : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
+>{    ["prop.inner"]: "a",    prop: {        inner: "b",    }} : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 
     ["prop.inner"]: "a",
 >["prop.inner"] : "a"
@@= skipped -27, +27 lines =@@
 foo[o["prop.inner"]] ="A";
 >foo[o["prop.inner"]] ="A" : "A"
 >foo[o["prop.inner"]] : any
->foo : typeof foo
+>foo : { (): void; b: string; }
 >o["prop.inner"] : "a"
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >"prop.inner" : "prop.inner"
 >"A" : "A"
 
 foo[o.prop.inner] = "B";
 >foo[o.prop.inner] = "B" : "B"
 >foo[o.prop.inner] : string
->foo : typeof foo
+>foo : { (): void; b: string; }
 >o.prop.inner : "b"
 >o.prop : { readonly inner: "b"; }
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >prop : { readonly inner: "b"; }
 >inner : "b"
 >"B" : "B"
@@= skipped -23, +23 lines =@@
     [o["prop.inner"]] ="A"
 >[o["prop.inner"]] : string
 >o["prop.inner"] : "a"
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >"prop.inner" : "prop.inner"
 >"A"    [o.prop.inner] = "B" : "B"
 >"A"    [o.prop.inner] : any
@@= skipped -9, +9 lines =@@
     [o.prop.inner] = "B"
 >o.prop.inner : "b"
 >o.prop : { readonly inner: "b"; }
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >prop : { readonly inner: "b"; }
 >inner : "b"
 >"B" : "B"
@@= skipped -13, +13 lines =@@
     [o['prop.inner']]:"A",
 >[o['prop.inner']] : string
 >o['prop.inner'] : "a"
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >'prop.inner' : "prop.inner"
 >"A" : "A"
 
@@= skipped -8, +8 lines =@@
 >[o.prop.inner] : string
 >o.prop.inner : "b"
 >o.prop : { readonly inner: "b"; }
->o : { readonly "prop.inner": "a"; readonly prop: { readonly inner: "b"; }; }
+>o : { readonly ["prop.inner"]: "a"; readonly prop: { readonly inner: "b"; }; }
 >prop : { readonly inner: "b"; }
 >inner : "b"
 >"B" : "B"
