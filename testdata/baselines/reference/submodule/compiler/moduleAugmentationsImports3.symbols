//// [tests/cases/compiler/moduleAugmentationsImports3.ts] ////

=== main.ts ===
/// <reference path="d.d.ts"/>
import {A} from "./a";
>A : Symbol(A, Decl(main.ts, 1, 8))

import "D";
import "e";

let a: A;
>a : Symbol(a, Decl(main.ts, 5, 3))
>A : Symbol(A, Decl(main.ts, 1, 8))

let b = a.getB().x.toFixed();
>b : Symbol(b, Decl(main.ts, 6, 3))
>a : Symbol(a, Decl(main.ts, 5, 3))

let c = a.getCls().y.toLowerCase();
>c : Symbol(c, Decl(main.ts, 7, 3))
>a : Symbol(a, Decl(main.ts, 5, 3))

=== a.ts ===
export class A {}
>A : Symbol(A, Decl(a.ts, 0, 0))

=== d.d.ts ===
declare module "D" {
>"D" : Symbol("D", Decl(d.d.ts, 0, 0))

    import {A} from "a";
>A : Symbol(A, Decl(d.d.ts, 1, 12))

    import {B} from "b";
>B : Symbol(B, Decl(d.d.ts, 2, 12))

    module "a" {
>"a" : Symbol("a", Decl(d.d.ts, 2, 24))

        interface A {
>A : Symbol(A, Decl(d.d.ts, 3, 16))

            getB(): B;
>getB : Symbol(getB, Decl(d.d.ts, 4, 21))
>B : Symbol(B, Decl(d.d.ts, 2, 12))
        }
    }
}

