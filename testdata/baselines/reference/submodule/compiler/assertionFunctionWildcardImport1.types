//// [tests/cases/compiler/assertionFunctionWildcardImport1.ts] ////

=== src/core/_namespaces/ts.ts ===
import * as Debug from "../debug";
>Debug : typeof import("src/core/debug")

export { Debug };
>Debug : typeof import("src/core/debug")

=== src/core/debug.ts ===
export declare function assert(expression: unknown): asserts expression;
>assert : (expression: unknown) => asserts expression
>expression : unknown


=== src/core/foo.ts ===
import * as ts from "./_namespaces/ts";
>ts : typeof import("src/core/_namespaces/ts")

import { Debug } from "./_namespaces/ts";
>Debug : typeof import("src/core/debug")

ts.Debug.assert(true);
>ts.Debug.assert(true) : void
>ts.Debug.assert : (expression: unknown) => asserts expression
>ts.Debug : typeof import("src/core/debug")
>ts : typeof import("src/core/_namespaces/ts")
>Debug : typeof import("src/core/debug")
>assert : (expression: unknown) => asserts expression
>true : true

Debug.assert(true);
>Debug.assert(true) : void
>Debug.assert : (expression: unknown) => asserts expression
>Debug : typeof import("src/core/debug")
>assert : (expression: unknown) => asserts expression
>true : true


=== src/other/_namespaces/ts.ts ===

export * from "../../core/_namespaces/ts"


=== src/other/bar.ts ===
import * as ts from "./_namespaces/ts";
>ts : typeof import("src/other/_namespaces/ts")

import { Debug } from "./_namespaces/ts";
>Debug : typeof import("src/core/debug")

ts.Debug.assert(true);
>ts.Debug.assert(true) : void
>ts.Debug.assert : (expression: unknown) => asserts expression
>ts.Debug : typeof import("src/core/debug")
>ts : typeof import("src/other/_namespaces/ts")
>Debug : typeof import("src/core/debug")
>assert : (expression: unknown) => asserts expression
>true : true

Debug.assert(true);
>Debug.assert(true) : void
>Debug.assert : (expression: unknown) => asserts expression
>Debug : typeof import("src/core/debug")
>assert : (expression: unknown) => asserts expression
>true : true

