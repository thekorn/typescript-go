--- old.reactSFCAndFunctionResolvable.symbols
+++ new.reactSFCAndFunctionResolvable.symbols
@@= skipped -9, +9 lines =@@
 >Radio : Symbol(Radio, Decl(reactSFCAndFunctionResolvable.tsx, 4, 13))
 >props : Symbol(props, Decl(reactSFCAndFunctionResolvable.tsx, 4, 22))
 >React : Symbol(React, Decl(reactSFCAndFunctionResolvable.tsx, 2, 6))
->ReactElement : Symbol(React.ReactElement, Decl(react16.d.ts, 135, 9))
+>ReactElement : Symbol(ReactElement, Decl(react16.d.ts, 135, 9))
 
 declare const OtherRadio: () => React.ReactElement<{}>;
 >OtherRadio : Symbol(OtherRadio, Decl(reactSFCAndFunctionResolvable.tsx, 5, 13))
 >React : Symbol(React, Decl(reactSFCAndFunctionResolvable.tsx, 2, 6))
->ReactElement : Symbol(React.ReactElement, Decl(react16.d.ts, 135, 9))
+>ReactElement : Symbol(ReactElement, Decl(react16.d.ts, 135, 9))
 
 declare const Checkbox: React.SFC;
 >Checkbox : Symbol(Checkbox, Decl(reactSFCAndFunctionResolvable.tsx, 6, 13))
 >React : Symbol(React, Decl(reactSFCAndFunctionResolvable.tsx, 2, 6))
->SFC : Symbol(React.SFC, Decl(react16.d.ts, 400, 9))
+>SFC : Symbol(SFC, Decl(react16.d.ts, 400, 9))
 
 declare const condition1: boolean;
 >condition1 : Symbol(condition1, Decl(reactSFCAndFunctionResolvable.tsx, 8, 13))
@@= skipped -24, +24 lines =@@
 const RandomComponent: React.SFC = () => {
 >RandomComponent : Symbol(RandomComponent, Decl(reactSFCAndFunctionResolvable.tsx, 12, 5))
 >React : Symbol(React, Decl(reactSFCAndFunctionResolvable.tsx, 2, 6))
->SFC : Symbol(React.SFC, Decl(react16.d.ts, 400, 9))
+>SFC : Symbol(SFC, Decl(react16.d.ts, 400, 9))
 
   const Component =
 >Component : Symbol(Component, Decl(reactSFCAndFunctionResolvable.tsx, 13, 7))
