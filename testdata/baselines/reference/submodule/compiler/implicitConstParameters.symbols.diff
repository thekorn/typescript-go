--- old.implicitConstParameters.symbols
+++ new.implicitConstParameters.symbols
@@= skipped -17, +17 lines =@@
 
       doSomething(() => x.toFixed());
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>x.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 4, 12))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
   }
 }
 
@@= skipped -17, +17 lines =@@
     }
     doSomething(() => x.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 10, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 }
 
 function f2(x: string | undefined) {
@@= skipped -17, +17 lines =@@
 
             doSomething(() => x.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 17, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 
         });
     }
@@= skipped -23, +23 lines =@@
 
             doSomething(() => x.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 25, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
         }
     }
 }
@@= skipped -19, +19 lines =@@
 
         doSomething(() => x.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 34, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 }
 
@@= skipped -15, +15 lines =@@
 
         doSomething(() => x.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->x.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>x.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >x : Symbol(x, Decl(implicitConstParameters.ts, 41, 12))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
     x = "abc";  // causes x to be considered non-const
 >x : Symbol(x, Decl(implicitConstParameters.ts, 41, 12))
@@= skipped -22, +22 lines =@@
 
         doSomething(() => y.length);
 >doSomething : Symbol(doSomething, Decl(implicitConstParameters.ts, 0, 0))
->y.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>y.length : Symbol(length, Decl(lib.es5.d.ts, --, --))
 >y : Symbol(y, Decl(implicitConstParameters.ts, 50, 9))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
+>length : Symbol(length, Decl(lib.es5.d.ts, --, --))
     }
 }
