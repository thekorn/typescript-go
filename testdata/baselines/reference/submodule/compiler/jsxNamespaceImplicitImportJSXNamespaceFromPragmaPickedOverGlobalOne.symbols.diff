--- old.jsxNamespaceImplicitImportJSXNamespaceFromPragmaPickedOverGlobalOne.symbols
+++ new.jsxNamespaceImplicitImportJSXNamespaceFromPragmaPickedOverGlobalOne.symbols
@@= skipped -10, +10 lines =@@
 >React : Symbol(React, Decl(index.d.ts, 1, 26))
 
 declare global {
->global : Symbol(global, Decl(index.d.ts, 3, 27))
+>global : Symbol((Missing), Decl(index.d.ts, 3, 27))
 
     namespace JSX {
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
@@= skipped -33, +33 lines =@@
 >IntrinsicElements : Symbol(IntrinsicElements, Decl(index.d.ts, 13, 49))
 
             div: {}
->div : Symbol(IntrinsicElements.div, Decl(index.d.ts, 14, 37))
+>div : Symbol(div, Decl(index.d.ts, 14, 37))
         }
     }
 }
@@= skipped -30, +30 lines =@@
 type ReactJSXElement = JSX.Element
 >ReactJSXElement : Symbol(ReactJSXElement, Decl(jsx-namespace.d.ts, 4, 7))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->Element : Symbol(JSX.Element, Decl(index.d.ts, 6, 19))
+>Element : Symbol(Element, Decl(index.d.ts, 6, 19))
 
 type ReactJSXElementClass = JSX.ElementClass
 >ReactJSXElementClass : Symbol(ReactJSXElementClass, Decl(jsx-namespace.d.ts, 6, 34))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->ElementClass : Symbol(JSX.ElementClass, Decl(index.d.ts, 7, 29))
+>ElementClass : Symbol(ElementClass, Decl(index.d.ts, 7, 29))
 
 type ReactJSXElementAttributesProperty = JSX.ElementAttributesProperty
 >ReactJSXElementAttributesProperty : Symbol(ReactJSXElementAttributesProperty, Decl(jsx-namespace.d.ts, 7, 44))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->ElementAttributesProperty : Symbol(JSX.ElementAttributesProperty, Decl(index.d.ts, 8, 34))
+>ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(index.d.ts, 8, 34))
 
 type ReactJSXElementChildrenAttribute = JSX.ElementChildrenAttribute
 >ReactJSXElementChildrenAttribute : Symbol(ReactJSXElementChildrenAttribute, Decl(jsx-namespace.d.ts, 8, 70))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->ElementChildrenAttribute : Symbol(JSX.ElementChildrenAttribute, Decl(index.d.ts, 9, 47))
+>ElementChildrenAttribute : Symbol(ElementChildrenAttribute, Decl(index.d.ts, 9, 47))
 
 type ReactJSXLibraryManagedAttributes<C, P> = JSX.LibraryManagedAttributes<C, P>
 >ReactJSXLibraryManagedAttributes : Symbol(ReactJSXLibraryManagedAttributes, Decl(jsx-namespace.d.ts, 9, 68))
 >C : Symbol(C, Decl(jsx-namespace.d.ts, 10, 38))
 >P : Symbol(P, Decl(jsx-namespace.d.ts, 10, 40))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->LibraryManagedAttributes : Symbol(JSX.LibraryManagedAttributes, Decl(index.d.ts, 10, 46))
+>LibraryManagedAttributes : Symbol(LibraryManagedAttributes, Decl(index.d.ts, 10, 46))
 >C : Symbol(C, Decl(jsx-namespace.d.ts, 10, 38))
 >P : Symbol(P, Decl(jsx-namespace.d.ts, 10, 40))
 
 type ReactJSXIntrinsicAttributes = JSX.IntrinsicAttributes
 >ReactJSXIntrinsicAttributes : Symbol(ReactJSXIntrinsicAttributes, Decl(jsx-namespace.d.ts, 10, 80))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->IntrinsicAttributes : Symbol(JSX.IntrinsicAttributes, Decl(index.d.ts, 11, 48))
+>IntrinsicAttributes : Symbol(IntrinsicAttributes, Decl(index.d.ts, 11, 48))
 
 type ReactJSXIntrinsicClassAttributes<T> = JSX.IntrinsicClassAttributes<T>
 >ReactJSXIntrinsicClassAttributes : Symbol(ReactJSXIntrinsicClassAttributes, Decl(jsx-namespace.d.ts, 11, 58))
 >T : Symbol(T, Decl(jsx-namespace.d.ts, 12, 38))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->IntrinsicClassAttributes : Symbol(JSX.IntrinsicClassAttributes, Decl(index.d.ts, 12, 41))
+>IntrinsicClassAttributes : Symbol(IntrinsicClassAttributes, Decl(index.d.ts, 12, 41))
 >T : Symbol(T, Decl(jsx-namespace.d.ts, 12, 38))
 
 type ReactJSXIntrinsicElements = JSX.IntrinsicElements
 >ReactJSXIntrinsicElements : Symbol(ReactJSXIntrinsicElements, Decl(jsx-namespace.d.ts, 12, 74))
 >JSX : Symbol(JSX, Decl(index.d.ts, 5, 16))
->IntrinsicElements : Symbol(JSX.IntrinsicElements, Decl(index.d.ts, 13, 49))
+>IntrinsicElements : Symbol(IntrinsicElements, Decl(index.d.ts, 13, 49))
 
 export namespace EmotionJSX {
 >EmotionJSX : Symbol(EmotionJSX, Decl(jsx-namespace.d.ts, 13, 54))
