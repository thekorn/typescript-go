//// [tests/cases/compiler/reactReadonlyHOCAssignabilityReal.tsx] ////

=== reactReadonlyHOCAssignabilityReal.tsx ===
/// <reference path="react16.d.ts" />
import * as React from "react";
>React : typeof React

function myHigherOrderComponent<P>(Inner: React.ComponentClass<P & {name: string}>): React.ComponentClass<P> {
>myHigherOrderComponent : <P>(Inner: ComponentClass<P & { name: string; }, any>) => ComponentClass<P, any>
>Inner : ComponentClass<P & { name: string; }, any>
>React : any
>name : string
>React : any

    return class OuterComponent extends React.Component<P> {
>class OuterComponent extends React.Component<P> {        render() {            return <Inner {...this.props} name="Matt"/>;        }    } : typeof OuterComponent
>OuterComponent : typeof OuterComponent
>React.Component : Component<P, {}, any>
>React : typeof React
>Component : typeof Component

        render() {
>render : () => Element

            return <Inner {...this.props} name="Matt"/>;
><Inner {...this.props} name="Matt"/> : Element
>Inner : ComponentClass<P & { name: string; }, any>
>this.props : Readonly<{ children?: ReactNode; }> & Readonly<P>
>this : this
>props : Readonly<{ children?: ReactNode; }> & Readonly<P>
>name : "Matt"
        }
    };
}
