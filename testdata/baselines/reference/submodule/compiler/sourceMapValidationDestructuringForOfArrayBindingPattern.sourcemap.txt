===================================================================
JsFile: sourceMapValidationDestructuringForOfArrayBindingPattern.js
mapUrl: sourceMapValidationDestructuringForOfArrayBindingPattern.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringForOfArrayBindingPattern.ts
===================================================================
-------------------------------------------------------------------
emittedFile:sourceMapValidationDestructuringForOfArrayBindingPattern.js
sourceFile:sourceMapValidationDestructuringForOfArrayBindingPattern.ts
-------------------------------------------------------------------
>>>let robotA = [1, "mower", "mowing"];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^
9 >                        ^^
10>                          ^^^^^^^^
11>                                  ^
12>                                   ^
13>                                    ^^^^^->
1 >declare var console: {
  >    log(msg: any): void;
  >}
  >type Robot = [number, string, string];
  >type MultiSkilledRobot = [string, [string, string]];
  >
  >
2 >let 
3 >    robotA
4 >          : Robot = 
5 >             [
6 >              1
7 >               , 
8 >                 "mower"
9 >                        , 
10>                          "mowing"
11>                                  ]
12>                                   ;
1 >Emitted(1, 1) Source(7, 1) + SourceIndex(0)
2 >Emitted(1, 5) Source(7, 5) + SourceIndex(0)
3 >Emitted(1, 11) Source(7, 11) + SourceIndex(0)
4 >Emitted(1, 14) Source(7, 21) + SourceIndex(0)
5 >Emitted(1, 15) Source(7, 22) + SourceIndex(0)
6 >Emitted(1, 16) Source(7, 23) + SourceIndex(0)
7 >Emitted(1, 18) Source(7, 25) + SourceIndex(0)
8 >Emitted(1, 25) Source(7, 32) + SourceIndex(0)
9 >Emitted(1, 27) Source(7, 34) + SourceIndex(0)
10>Emitted(1, 35) Source(7, 42) + SourceIndex(0)
11>Emitted(1, 36) Source(7, 43) + SourceIndex(0)
12>Emitted(1, 37) Source(7, 44) + SourceIndex(0)
---
>>>let robotB = [2, "trimmer", "trimming"];
1->
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^^^
9 >                          ^^
10>                            ^^^^^^^^^^
11>                                      ^
12>                                       ^
1->
  >
2 >let 
3 >    robotB
4 >          : Robot = 
5 >             [
6 >              2
7 >               , 
8 >                 "trimmer"
9 >                          , 
10>                            "trimming"
11>                                      ]
12>                                       ;
1->Emitted(2, 1) Source(8, 1) + SourceIndex(0)
2 >Emitted(2, 5) Source(8, 5) + SourceIndex(0)
3 >Emitted(2, 11) Source(8, 11) + SourceIndex(0)
4 >Emitted(2, 14) Source(8, 21) + SourceIndex(0)
5 >Emitted(2, 15) Source(8, 22) + SourceIndex(0)
6 >Emitted(2, 16) Source(8, 23) + SourceIndex(0)
7 >Emitted(2, 18) Source(8, 25) + SourceIndex(0)
8 >Emitted(2, 27) Source(8, 34) + SourceIndex(0)
9 >Emitted(2, 29) Source(8, 36) + SourceIndex(0)
10>Emitted(2, 39) Source(8, 46) + SourceIndex(0)
11>Emitted(2, 40) Source(8, 47) + SourceIndex(0)
12>Emitted(2, 41) Source(8, 48) + SourceIndex(0)
---
>>>let robots = [robotA, robotB];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^^^^^^
7 >                    ^^
8 >                      ^^^^^^
9 >                            ^
10>                             ^
1 >
  >
2 >let 
3 >    robots
4 >           = 
5 >             [
6 >              robotA
7 >                    , 
8 >                      robotB
9 >                            ]
10>                             ;
1 >Emitted(3, 1) Source(9, 1) + SourceIndex(0)
2 >Emitted(3, 5) Source(9, 5) + SourceIndex(0)
3 >Emitted(3, 11) Source(9, 11) + SourceIndex(0)
4 >Emitted(3, 14) Source(9, 14) + SourceIndex(0)
5 >Emitted(3, 15) Source(9, 15) + SourceIndex(0)
6 >Emitted(3, 21) Source(9, 21) + SourceIndex(0)
7 >Emitted(3, 23) Source(9, 23) + SourceIndex(0)
8 >Emitted(3, 29) Source(9, 29) + SourceIndex(0)
9 >Emitted(3, 30) Source(9, 30) + SourceIndex(0)
10>Emitted(3, 31) Source(9, 31) + SourceIndex(0)
---
>>>function getRobots() {
1 >
2 >^^^^^^^^^
3 >         ^^^^^^^^^
4 >                  ^^^
1 >
  >
2 >function 
3 >         getRobots
4 >                  () 
1 >Emitted(4, 1) Source(10, 1) + SourceIndex(0)
2 >Emitted(4, 10) Source(10, 10) + SourceIndex(0)
3 >Emitted(4, 19) Source(10, 19) + SourceIndex(0)
4 >Emitted(4, 22) Source(10, 22) + SourceIndex(0)
---
>>>    return robots;
1 >^^^^
2 >    ^^^^^^^
3 >           ^^^^^^
4 >                 ^
1 >{
  >    
2 >    return 
3 >           robots
4 >                 ;
1 >Emitted(5, 5) Source(11, 5) + SourceIndex(0)
2 >Emitted(5, 12) Source(11, 12) + SourceIndex(0)
3 >Emitted(5, 18) Source(11, 18) + SourceIndex(0)
4 >Emitted(5, 19) Source(11, 19) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
2 >
  >}
1 >Emitted(6, 1) Source(11, 19) + SourceIndex(0)
2 >Emitted(6, 2) Source(12, 2) + SourceIndex(0)
---
>>>let multiRobotA = ["mower", ["mowing", ""]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^
7 >                          ^^
8 >                            ^
9 >                             ^^^^^^^^
10>                                     ^^
11>                                       ^^
12>                                         ^
13>                                          ^
14>                                           ^
15>                                            ^^^^^^^^^^^->
1->
  >
  >
2 >let 
3 >    multiRobotA
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "mower"
7 >                          , 
8 >                            [
9 >                             "mowing"
10>                                     , 
11>                                       ""
12>                                         ]
13>                                          ]
14>                                           ;
1->Emitted(7, 1) Source(14, 1) + SourceIndex(0)
2 >Emitted(7, 5) Source(14, 5) + SourceIndex(0)
3 >Emitted(7, 16) Source(14, 16) + SourceIndex(0)
4 >Emitted(7, 19) Source(14, 38) + SourceIndex(0)
5 >Emitted(7, 20) Source(14, 39) + SourceIndex(0)
6 >Emitted(7, 27) Source(14, 46) + SourceIndex(0)
7 >Emitted(7, 29) Source(14, 48) + SourceIndex(0)
8 >Emitted(7, 30) Source(14, 49) + SourceIndex(0)
9 >Emitted(7, 38) Source(14, 57) + SourceIndex(0)
10>Emitted(7, 40) Source(14, 59) + SourceIndex(0)
11>Emitted(7, 42) Source(14, 61) + SourceIndex(0)
12>Emitted(7, 43) Source(14, 62) + SourceIndex(0)
13>Emitted(7, 44) Source(14, 63) + SourceIndex(0)
14>Emitted(7, 45) Source(14, 64) + SourceIndex(0)
---
>>>let multiRobotB = ["trimmer", ["trimming", "edging"]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^
7 >                            ^^
8 >                              ^
9 >                               ^^^^^^^^^^
10>                                         ^^
11>                                           ^^^^^^^^
12>                                                   ^
13>                                                    ^
14>                                                     ^
1->
  >
2 >let 
3 >    multiRobotB
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "trimmer"
7 >                            , 
8 >                              [
9 >                               "trimming"
10>                                         , 
11>                                           "edging"
12>                                                   ]
13>                                                    ]
14>                                                     ;
1->Emitted(8, 1) Source(15, 1) + SourceIndex(0)
2 >Emitted(8, 5) Source(15, 5) + SourceIndex(0)
3 >Emitted(8, 16) Source(15, 16) + SourceIndex(0)
4 >Emitted(8, 19) Source(15, 38) + SourceIndex(0)
5 >Emitted(8, 20) Source(15, 39) + SourceIndex(0)
6 >Emitted(8, 29) Source(15, 48) + SourceIndex(0)
7 >Emitted(8, 31) Source(15, 50) + SourceIndex(0)
8 >Emitted(8, 32) Source(15, 51) + SourceIndex(0)
9 >Emitted(8, 42) Source(15, 61) + SourceIndex(0)
10>Emitted(8, 44) Source(15, 63) + SourceIndex(0)
11>Emitted(8, 52) Source(15, 71) + SourceIndex(0)
12>Emitted(8, 53) Source(15, 72) + SourceIndex(0)
13>Emitted(8, 54) Source(15, 73) + SourceIndex(0)
14>Emitted(8, 55) Source(15, 74) + SourceIndex(0)
---
>>>let multiRobots = [multiRobotA, multiRobotB];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^^^
7 >                              ^^
8 >                                ^^^^^^^^^^^
9 >                                           ^
10>                                            ^
1 >
  >
2 >let 
3 >    multiRobots
4 >                = 
5 >                  [
6 >                   multiRobotA
7 >                              , 
8 >                                multiRobotB
9 >                                           ]
10>                                            ;
1 >Emitted(9, 1) Source(16, 1) + SourceIndex(0)
2 >Emitted(9, 5) Source(16, 5) + SourceIndex(0)
3 >Emitted(9, 16) Source(16, 16) + SourceIndex(0)
4 >Emitted(9, 19) Source(16, 19) + SourceIndex(0)
5 >Emitted(9, 20) Source(16, 20) + SourceIndex(0)
6 >Emitted(9, 31) Source(16, 31) + SourceIndex(0)
7 >Emitted(9, 33) Source(16, 33) + SourceIndex(0)
8 >Emitted(9, 44) Source(16, 44) + SourceIndex(0)
9 >Emitted(9, 45) Source(16, 45) + SourceIndex(0)
10>Emitted(9, 46) Source(16, 46) + SourceIndex(0)
---
>>>function getMultiRobots() {
1 >
2 >^^^^^^^^^
3 >         ^^^^^^^^^^^^^^
4 >                       ^^^
1 >
  >
2 >function 
3 >         getMultiRobots
4 >                       () 
1 >Emitted(10, 1) Source(17, 1) + SourceIndex(0)
2 >Emitted(10, 10) Source(17, 10) + SourceIndex(0)
3 >Emitted(10, 24) Source(17, 24) + SourceIndex(0)
4 >Emitted(10, 27) Source(17, 27) + SourceIndex(0)
---
>>>    return multiRobots;
1 >^^^^
2 >    ^^^^^^^
3 >           ^^^^^^^^^^^
4 >                      ^
1 >{
  >    
2 >    return 
3 >           multiRobots
4 >                      ;
1 >Emitted(11, 5) Source(18, 5) + SourceIndex(0)
2 >Emitted(11, 12) Source(18, 12) + SourceIndex(0)
3 >Emitted(11, 23) Source(18, 23) + SourceIndex(0)
4 >Emitted(11, 24) Source(18, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
2 >
  >}
1 >Emitted(12, 1) Source(18, 24) + SourceIndex(0)
2 >Emitted(12, 2) Source(19, 2) + SourceIndex(0)
---
>>>for (let [, nameA] of robots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^^^^^
7 >                 ^
8 >                  ^^^^
9 >                      ^^^^^^
10>                            ^^
11>                              ^
1->
  >
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            nameA
7 >                 ]
8 >                   of 
9 >                      robots
10>                            ) 
11>                              {
1->Emitted(13, 1) Source(21, 1) + SourceIndex(0)
2 >Emitted(13, 6) Source(21, 6) + SourceIndex(0)
3 >Emitted(13, 10) Source(21, 10) + SourceIndex(0)
4 >Emitted(13, 11) Source(21, 11) + SourceIndex(0)
5 >Emitted(13, 13) Source(21, 13) + SourceIndex(0)
6 >Emitted(13, 18) Source(21, 18) + SourceIndex(0)
7 >Emitted(13, 19) Source(21, 19) + SourceIndex(0)
8 >Emitted(13, 23) Source(21, 23) + SourceIndex(0)
9 >Emitted(13, 29) Source(21, 29) + SourceIndex(0)
10>Emitted(13, 31) Source(21, 31) + SourceIndex(0)
11>Emitted(13, 32) Source(21, 32) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(14, 5) Source(22, 5) + SourceIndex(0)
2 >Emitted(14, 12) Source(22, 12) + SourceIndex(0)
3 >Emitted(14, 13) Source(22, 13) + SourceIndex(0)
4 >Emitted(14, 16) Source(22, 16) + SourceIndex(0)
5 >Emitted(14, 17) Source(22, 17) + SourceIndex(0)
6 >Emitted(14, 22) Source(22, 22) + SourceIndex(0)
7 >Emitted(14, 23) Source(22, 23) + SourceIndex(0)
8 >Emitted(14, 24) Source(22, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(15, 1) Source(23, 1) + SourceIndex(0)
2 >Emitted(15, 2) Source(23, 2) + SourceIndex(0)
---
>>>for (let [, nameA] of getRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^^^^^
7 >                 ^
8 >                  ^^^^
9 >                      ^^^^^^^^^
10>                               ^^
11>                                 ^^
12>                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            nameA
7 >                 ]
8 >                   of 
9 >                      getRobots
10>                               ()
11>                                 ) 
12>                                   {
1->Emitted(16, 1) Source(24, 1) + SourceIndex(0)
2 >Emitted(16, 6) Source(24, 6) + SourceIndex(0)
3 >Emitted(16, 10) Source(24, 10) + SourceIndex(0)
4 >Emitted(16, 11) Source(24, 11) + SourceIndex(0)
5 >Emitted(16, 13) Source(24, 13) + SourceIndex(0)
6 >Emitted(16, 18) Source(24, 18) + SourceIndex(0)
7 >Emitted(16, 19) Source(24, 19) + SourceIndex(0)
8 >Emitted(16, 23) Source(24, 23) + SourceIndex(0)
9 >Emitted(16, 32) Source(24, 32) + SourceIndex(0)
10>Emitted(16, 34) Source(24, 34) + SourceIndex(0)
11>Emitted(16, 36) Source(24, 36) + SourceIndex(0)
12>Emitted(16, 37) Source(24, 37) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(17, 5) Source(25, 5) + SourceIndex(0)
2 >Emitted(17, 12) Source(25, 12) + SourceIndex(0)
3 >Emitted(17, 13) Source(25, 13) + SourceIndex(0)
4 >Emitted(17, 16) Source(25, 16) + SourceIndex(0)
5 >Emitted(17, 17) Source(25, 17) + SourceIndex(0)
6 >Emitted(17, 22) Source(25, 22) + SourceIndex(0)
7 >Emitted(17, 23) Source(25, 23) + SourceIndex(0)
8 >Emitted(17, 24) Source(25, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(18, 1) Source(26, 1) + SourceIndex(0)
2 >Emitted(18, 2) Source(26, 2) + SourceIndex(0)
---
>>>for (let [, nameA] of [robotA, robotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^^^^^
7 >                 ^
8 >                  ^^^^
9 >                      ^
10>                       ^^^^^^
11>                             ^^
12>                               ^^^^^^
13>                                     ^
14>                                      ^^
15>                                        ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            nameA
7 >                 ]
8 >                   of 
9 >                      [
10>                       robotA
11>                             , 
12>                               robotB
13>                                     ]
14>                                      ) 
15>                                        {
1->Emitted(19, 1) Source(27, 1) + SourceIndex(0)
2 >Emitted(19, 6) Source(27, 6) + SourceIndex(0)
3 >Emitted(19, 10) Source(27, 10) + SourceIndex(0)
4 >Emitted(19, 11) Source(27, 11) + SourceIndex(0)
5 >Emitted(19, 13) Source(27, 13) + SourceIndex(0)
6 >Emitted(19, 18) Source(27, 18) + SourceIndex(0)
7 >Emitted(19, 19) Source(27, 19) + SourceIndex(0)
8 >Emitted(19, 23) Source(27, 23) + SourceIndex(0)
9 >Emitted(19, 24) Source(27, 24) + SourceIndex(0)
10>Emitted(19, 30) Source(27, 30) + SourceIndex(0)
11>Emitted(19, 32) Source(27, 32) + SourceIndex(0)
12>Emitted(19, 38) Source(27, 38) + SourceIndex(0)
13>Emitted(19, 39) Source(27, 39) + SourceIndex(0)
14>Emitted(19, 41) Source(27, 41) + SourceIndex(0)
15>Emitted(19, 42) Source(27, 42) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(20, 5) Source(28, 5) + SourceIndex(0)
2 >Emitted(20, 12) Source(28, 12) + SourceIndex(0)
3 >Emitted(20, 13) Source(28, 13) + SourceIndex(0)
4 >Emitted(20, 16) Source(28, 16) + SourceIndex(0)
5 >Emitted(20, 17) Source(28, 17) + SourceIndex(0)
6 >Emitted(20, 22) Source(28, 22) + SourceIndex(0)
7 >Emitted(20, 23) Source(28, 23) + SourceIndex(0)
8 >Emitted(20, 24) Source(28, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(21, 1) Source(29, 1) + SourceIndex(0)
2 >Emitted(21, 2) Source(29, 2) + SourceIndex(0)
---
>>>for (let [, [primarySkillA, secondarySkillA]] of multiRobots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^
7 >             ^^^^^^^^^^^^^
8 >                          ^^
9 >                            ^^^^^^^^^^^^^^^
10>                                           ^
11>                                            ^
12>                                             ^^^^
13>                                                 ^^^^^^^^^^^
14>                                                            ^^
15>                                                              ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            [
7 >             primarySkillA
8 >                          , 
9 >                            secondarySkillA
10>                                           ]
11>                                            ]
12>                                              of 
13>                                                 multiRobots
14>                                                            ) 
15>                                                              {
1->Emitted(22, 1) Source(30, 1) + SourceIndex(0)
2 >Emitted(22, 6) Source(30, 6) + SourceIndex(0)
3 >Emitted(22, 10) Source(30, 10) + SourceIndex(0)
4 >Emitted(22, 11) Source(30, 11) + SourceIndex(0)
5 >Emitted(22, 13) Source(30, 13) + SourceIndex(0)
6 >Emitted(22, 14) Source(30, 14) + SourceIndex(0)
7 >Emitted(22, 27) Source(30, 27) + SourceIndex(0)
8 >Emitted(22, 29) Source(30, 29) + SourceIndex(0)
9 >Emitted(22, 44) Source(30, 44) + SourceIndex(0)
10>Emitted(22, 45) Source(30, 45) + SourceIndex(0)
11>Emitted(22, 46) Source(30, 46) + SourceIndex(0)
12>Emitted(22, 50) Source(30, 50) + SourceIndex(0)
13>Emitted(22, 61) Source(30, 61) + SourceIndex(0)
14>Emitted(22, 63) Source(30, 63) + SourceIndex(0)
15>Emitted(22, 64) Source(30, 64) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(23, 5) Source(31, 5) + SourceIndex(0)
2 >Emitted(23, 12) Source(31, 12) + SourceIndex(0)
3 >Emitted(23, 13) Source(31, 13) + SourceIndex(0)
4 >Emitted(23, 16) Source(31, 16) + SourceIndex(0)
5 >Emitted(23, 17) Source(31, 17) + SourceIndex(0)
6 >Emitted(23, 30) Source(31, 30) + SourceIndex(0)
7 >Emitted(23, 31) Source(31, 31) + SourceIndex(0)
8 >Emitted(23, 32) Source(31, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(24, 1) Source(32, 1) + SourceIndex(0)
2 >Emitted(24, 2) Source(32, 2) + SourceIndex(0)
---
>>>for (let [, [primarySkillA, secondarySkillA]] of getMultiRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^
7 >             ^^^^^^^^^^^^^
8 >                          ^^
9 >                            ^^^^^^^^^^^^^^^
10>                                           ^
11>                                            ^
12>                                             ^^^^
13>                                                 ^^^^^^^^^^^^^^
14>                                                               ^^
15>                                                                 ^^
16>                                                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            [
7 >             primarySkillA
8 >                          , 
9 >                            secondarySkillA
10>                                           ]
11>                                            ]
12>                                              of 
13>                                                 getMultiRobots
14>                                                               ()
15>                                                                 ) 
16>                                                                   {
1->Emitted(25, 1) Source(33, 1) + SourceIndex(0)
2 >Emitted(25, 6) Source(33, 6) + SourceIndex(0)
3 >Emitted(25, 10) Source(33, 10) + SourceIndex(0)
4 >Emitted(25, 11) Source(33, 11) + SourceIndex(0)
5 >Emitted(25, 13) Source(33, 13) + SourceIndex(0)
6 >Emitted(25, 14) Source(33, 14) + SourceIndex(0)
7 >Emitted(25, 27) Source(33, 27) + SourceIndex(0)
8 >Emitted(25, 29) Source(33, 29) + SourceIndex(0)
9 >Emitted(25, 44) Source(33, 44) + SourceIndex(0)
10>Emitted(25, 45) Source(33, 45) + SourceIndex(0)
11>Emitted(25, 46) Source(33, 46) + SourceIndex(0)
12>Emitted(25, 50) Source(33, 50) + SourceIndex(0)
13>Emitted(25, 64) Source(33, 64) + SourceIndex(0)
14>Emitted(25, 66) Source(33, 66) + SourceIndex(0)
15>Emitted(25, 68) Source(33, 68) + SourceIndex(0)
16>Emitted(25, 69) Source(33, 69) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(26, 5) Source(34, 5) + SourceIndex(0)
2 >Emitted(26, 12) Source(34, 12) + SourceIndex(0)
3 >Emitted(26, 13) Source(34, 13) + SourceIndex(0)
4 >Emitted(26, 16) Source(34, 16) + SourceIndex(0)
5 >Emitted(26, 17) Source(34, 17) + SourceIndex(0)
6 >Emitted(26, 30) Source(34, 30) + SourceIndex(0)
7 >Emitted(26, 31) Source(34, 31) + SourceIndex(0)
8 >Emitted(26, 32) Source(34, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(27, 1) Source(35, 1) + SourceIndex(0)
2 >Emitted(27, 2) Source(35, 2) + SourceIndex(0)
---
>>>for (let [, [primarySkillA, secondarySkillA]] of [multiRobotA, multiRobotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^
6 >            ^
7 >             ^^^^^^^^^^^^^
8 >                          ^^
9 >                            ^^^^^^^^^^^^^^^
10>                                           ^
11>                                            ^
12>                                             ^^^^
13>                                                 ^
14>                                                  ^^^^^^^^^^^
15>                                                             ^^
16>                                                               ^^^^^^^^^^^
17>                                                                          ^
18>                                                                           ^^
19>                                                                             ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          , 
6 >            [
7 >             primarySkillA
8 >                          , 
9 >                            secondarySkillA
10>                                           ]
11>                                            ]
12>                                              of 
13>                                                 [
14>                                                  multiRobotA
15>                                                             , 
16>                                                               multiRobotB
17>                                                                          ]
18>                                                                           ) 
19>                                                                             {
1->Emitted(28, 1) Source(36, 1) + SourceIndex(0)
2 >Emitted(28, 6) Source(36, 6) + SourceIndex(0)
3 >Emitted(28, 10) Source(36, 10) + SourceIndex(0)
4 >Emitted(28, 11) Source(36, 11) + SourceIndex(0)
5 >Emitted(28, 13) Source(36, 13) + SourceIndex(0)
6 >Emitted(28, 14) Source(36, 14) + SourceIndex(0)
7 >Emitted(28, 27) Source(36, 27) + SourceIndex(0)
8 >Emitted(28, 29) Source(36, 29) + SourceIndex(0)
9 >Emitted(28, 44) Source(36, 44) + SourceIndex(0)
10>Emitted(28, 45) Source(36, 45) + SourceIndex(0)
11>Emitted(28, 46) Source(36, 46) + SourceIndex(0)
12>Emitted(28, 50) Source(36, 50) + SourceIndex(0)
13>Emitted(28, 51) Source(36, 51) + SourceIndex(0)
14>Emitted(28, 62) Source(36, 62) + SourceIndex(0)
15>Emitted(28, 64) Source(36, 64) + SourceIndex(0)
16>Emitted(28, 75) Source(36, 75) + SourceIndex(0)
17>Emitted(28, 76) Source(36, 76) + SourceIndex(0)
18>Emitted(28, 78) Source(36, 78) + SourceIndex(0)
19>Emitted(28, 79) Source(36, 79) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(29, 5) Source(37, 5) + SourceIndex(0)
2 >Emitted(29, 12) Source(37, 12) + SourceIndex(0)
3 >Emitted(29, 13) Source(37, 13) + SourceIndex(0)
4 >Emitted(29, 16) Source(37, 16) + SourceIndex(0)
5 >Emitted(29, 17) Source(37, 17) + SourceIndex(0)
6 >Emitted(29, 30) Source(37, 30) + SourceIndex(0)
7 >Emitted(29, 31) Source(37, 31) + SourceIndex(0)
8 >Emitted(29, 32) Source(37, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(30, 1) Source(38, 1) + SourceIndex(0)
2 >Emitted(30, 2) Source(38, 2) + SourceIndex(0)
---
>>>for (let [numberB] of robots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^
6 >                 ^
7 >                  ^^^^
8 >                      ^^^^^^
9 >                            ^^
10>                              ^
1->
  >
  >
2 >for (
3 >     let 
4 >         [
5 >          numberB
6 >                 ]
7 >                   of 
8 >                      robots
9 >                            ) 
10>                              {
1->Emitted(31, 1) Source(40, 1) + SourceIndex(0)
2 >Emitted(31, 6) Source(40, 6) + SourceIndex(0)
3 >Emitted(31, 10) Source(40, 10) + SourceIndex(0)
4 >Emitted(31, 11) Source(40, 11) + SourceIndex(0)
5 >Emitted(31, 18) Source(40, 18) + SourceIndex(0)
6 >Emitted(31, 19) Source(40, 19) + SourceIndex(0)
7 >Emitted(31, 23) Source(40, 23) + SourceIndex(0)
8 >Emitted(31, 29) Source(40, 29) + SourceIndex(0)
9 >Emitted(31, 31) Source(40, 31) + SourceIndex(0)
10>Emitted(31, 32) Source(40, 32) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(32, 5) Source(41, 5) + SourceIndex(0)
2 >Emitted(32, 12) Source(41, 12) + SourceIndex(0)
3 >Emitted(32, 13) Source(41, 13) + SourceIndex(0)
4 >Emitted(32, 16) Source(41, 16) + SourceIndex(0)
5 >Emitted(32, 17) Source(41, 17) + SourceIndex(0)
6 >Emitted(32, 24) Source(41, 24) + SourceIndex(0)
7 >Emitted(32, 25) Source(41, 25) + SourceIndex(0)
8 >Emitted(32, 26) Source(41, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(33, 1) Source(42, 1) + SourceIndex(0)
2 >Emitted(33, 2) Source(42, 2) + SourceIndex(0)
---
>>>for (let [numberB] of getRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^
6 >                 ^
7 >                  ^^^^
8 >                      ^^^^^^^^^
9 >                               ^^
10>                                 ^^
11>                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberB
6 >                 ]
7 >                   of 
8 >                      getRobots
9 >                               ()
10>                                 ) 
11>                                   {
1->Emitted(34, 1) Source(43, 1) + SourceIndex(0)
2 >Emitted(34, 6) Source(43, 6) + SourceIndex(0)
3 >Emitted(34, 10) Source(43, 10) + SourceIndex(0)
4 >Emitted(34, 11) Source(43, 11) + SourceIndex(0)
5 >Emitted(34, 18) Source(43, 18) + SourceIndex(0)
6 >Emitted(34, 19) Source(43, 19) + SourceIndex(0)
7 >Emitted(34, 23) Source(43, 23) + SourceIndex(0)
8 >Emitted(34, 32) Source(43, 32) + SourceIndex(0)
9 >Emitted(34, 34) Source(43, 34) + SourceIndex(0)
10>Emitted(34, 36) Source(43, 36) + SourceIndex(0)
11>Emitted(34, 37) Source(43, 37) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(35, 5) Source(44, 5) + SourceIndex(0)
2 >Emitted(35, 12) Source(44, 12) + SourceIndex(0)
3 >Emitted(35, 13) Source(44, 13) + SourceIndex(0)
4 >Emitted(35, 16) Source(44, 16) + SourceIndex(0)
5 >Emitted(35, 17) Source(44, 17) + SourceIndex(0)
6 >Emitted(35, 24) Source(44, 24) + SourceIndex(0)
7 >Emitted(35, 25) Source(44, 25) + SourceIndex(0)
8 >Emitted(35, 26) Source(44, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(36, 1) Source(45, 1) + SourceIndex(0)
2 >Emitted(36, 2) Source(45, 2) + SourceIndex(0)
---
>>>for (let [numberB] of [robotA, robotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^
6 >                 ^
7 >                  ^^^^
8 >                      ^
9 >                       ^^^^^^
10>                             ^^
11>                               ^^^^^^
12>                                     ^
13>                                      ^^
14>                                        ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberB
6 >                 ]
7 >                   of 
8 >                      [
9 >                       robotA
10>                             , 
11>                               robotB
12>                                     ]
13>                                      ) 
14>                                        {
1->Emitted(37, 1) Source(46, 1) + SourceIndex(0)
2 >Emitted(37, 6) Source(46, 6) + SourceIndex(0)
3 >Emitted(37, 10) Source(46, 10) + SourceIndex(0)
4 >Emitted(37, 11) Source(46, 11) + SourceIndex(0)
5 >Emitted(37, 18) Source(46, 18) + SourceIndex(0)
6 >Emitted(37, 19) Source(46, 19) + SourceIndex(0)
7 >Emitted(37, 23) Source(46, 23) + SourceIndex(0)
8 >Emitted(37, 24) Source(46, 24) + SourceIndex(0)
9 >Emitted(37, 30) Source(46, 30) + SourceIndex(0)
10>Emitted(37, 32) Source(46, 32) + SourceIndex(0)
11>Emitted(37, 38) Source(46, 38) + SourceIndex(0)
12>Emitted(37, 39) Source(46, 39) + SourceIndex(0)
13>Emitted(37, 41) Source(46, 41) + SourceIndex(0)
14>Emitted(37, 42) Source(46, 42) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(38, 5) Source(47, 5) + SourceIndex(0)
2 >Emitted(38, 12) Source(47, 12) + SourceIndex(0)
3 >Emitted(38, 13) Source(47, 13) + SourceIndex(0)
4 >Emitted(38, 16) Source(47, 16) + SourceIndex(0)
5 >Emitted(38, 17) Source(47, 17) + SourceIndex(0)
6 >Emitted(38, 24) Source(47, 24) + SourceIndex(0)
7 >Emitted(38, 25) Source(47, 25) + SourceIndex(0)
8 >Emitted(38, 26) Source(47, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(39, 1) Source(48, 1) + SourceIndex(0)
2 >Emitted(39, 2) Source(48, 2) + SourceIndex(0)
---
>>>for (let [nameB] of multiRobots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^
6 >               ^
7 >                ^^^^
8 >                    ^^^^^^^^^^^
9 >                               ^^
10>                                 ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameB
6 >               ]
7 >                 of 
8 >                    multiRobots
9 >                               ) 
10>                                 {
1->Emitted(40, 1) Source(49, 1) + SourceIndex(0)
2 >Emitted(40, 6) Source(49, 6) + SourceIndex(0)
3 >Emitted(40, 10) Source(49, 10) + SourceIndex(0)
4 >Emitted(40, 11) Source(49, 11) + SourceIndex(0)
5 >Emitted(40, 16) Source(49, 16) + SourceIndex(0)
6 >Emitted(40, 17) Source(49, 17) + SourceIndex(0)
7 >Emitted(40, 21) Source(49, 21) + SourceIndex(0)
8 >Emitted(40, 32) Source(49, 32) + SourceIndex(0)
9 >Emitted(40, 34) Source(49, 34) + SourceIndex(0)
10>Emitted(40, 35) Source(49, 35) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(41, 5) Source(50, 5) + SourceIndex(0)
2 >Emitted(41, 12) Source(50, 12) + SourceIndex(0)
3 >Emitted(41, 13) Source(50, 13) + SourceIndex(0)
4 >Emitted(41, 16) Source(50, 16) + SourceIndex(0)
5 >Emitted(41, 17) Source(50, 17) + SourceIndex(0)
6 >Emitted(41, 22) Source(50, 22) + SourceIndex(0)
7 >Emitted(41, 23) Source(50, 23) + SourceIndex(0)
8 >Emitted(41, 24) Source(50, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(42, 1) Source(51, 1) + SourceIndex(0)
2 >Emitted(42, 2) Source(51, 2) + SourceIndex(0)
---
>>>for (let [nameB] of getMultiRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^
6 >               ^
7 >                ^^^^
8 >                    ^^^^^^^^^^^^^^
9 >                                  ^^
10>                                    ^^
11>                                      ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameB
6 >               ]
7 >                 of 
8 >                    getMultiRobots
9 >                                  ()
10>                                    ) 
11>                                      {
1->Emitted(43, 1) Source(52, 1) + SourceIndex(0)
2 >Emitted(43, 6) Source(52, 6) + SourceIndex(0)
3 >Emitted(43, 10) Source(52, 10) + SourceIndex(0)
4 >Emitted(43, 11) Source(52, 11) + SourceIndex(0)
5 >Emitted(43, 16) Source(52, 16) + SourceIndex(0)
6 >Emitted(43, 17) Source(52, 17) + SourceIndex(0)
7 >Emitted(43, 21) Source(52, 21) + SourceIndex(0)
8 >Emitted(43, 35) Source(52, 35) + SourceIndex(0)
9 >Emitted(43, 37) Source(52, 37) + SourceIndex(0)
10>Emitted(43, 39) Source(52, 39) + SourceIndex(0)
11>Emitted(43, 40) Source(52, 40) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(44, 5) Source(53, 5) + SourceIndex(0)
2 >Emitted(44, 12) Source(53, 12) + SourceIndex(0)
3 >Emitted(44, 13) Source(53, 13) + SourceIndex(0)
4 >Emitted(44, 16) Source(53, 16) + SourceIndex(0)
5 >Emitted(44, 17) Source(53, 17) + SourceIndex(0)
6 >Emitted(44, 22) Source(53, 22) + SourceIndex(0)
7 >Emitted(44, 23) Source(53, 23) + SourceIndex(0)
8 >Emitted(44, 24) Source(53, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(45, 1) Source(54, 1) + SourceIndex(0)
2 >Emitted(45, 2) Source(54, 2) + SourceIndex(0)
---
>>>for (let [nameB] of [multiRobotA, multiRobotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^
6 >               ^
7 >                ^^^^
8 >                    ^
9 >                     ^^^^^^^^^^^
10>                                ^^
11>                                  ^^^^^^^^^^^
12>                                             ^
13>                                              ^^
14>                                                ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameB
6 >               ]
7 >                 of 
8 >                    [
9 >                     multiRobotA
10>                                , 
11>                                  multiRobotB
12>                                             ]
13>                                              ) 
14>                                                {
1->Emitted(46, 1) Source(55, 1) + SourceIndex(0)
2 >Emitted(46, 6) Source(55, 6) + SourceIndex(0)
3 >Emitted(46, 10) Source(55, 10) + SourceIndex(0)
4 >Emitted(46, 11) Source(55, 11) + SourceIndex(0)
5 >Emitted(46, 16) Source(55, 16) + SourceIndex(0)
6 >Emitted(46, 17) Source(55, 17) + SourceIndex(0)
7 >Emitted(46, 21) Source(55, 21) + SourceIndex(0)
8 >Emitted(46, 22) Source(55, 22) + SourceIndex(0)
9 >Emitted(46, 33) Source(55, 33) + SourceIndex(0)
10>Emitted(46, 35) Source(55, 35) + SourceIndex(0)
11>Emitted(46, 46) Source(55, 46) + SourceIndex(0)
12>Emitted(46, 47) Source(55, 47) + SourceIndex(0)
13>Emitted(46, 49) Source(55, 49) + SourceIndex(0)
14>Emitted(46, 50) Source(55, 50) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(47, 5) Source(56, 5) + SourceIndex(0)
2 >Emitted(47, 12) Source(56, 12) + SourceIndex(0)
3 >Emitted(47, 13) Source(56, 13) + SourceIndex(0)
4 >Emitted(47, 16) Source(56, 16) + SourceIndex(0)
5 >Emitted(47, 17) Source(56, 17) + SourceIndex(0)
6 >Emitted(47, 22) Source(56, 22) + SourceIndex(0)
7 >Emitted(47, 23) Source(56, 23) + SourceIndex(0)
8 >Emitted(47, 24) Source(56, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(48, 1) Source(57, 1) + SourceIndex(0)
2 >Emitted(48, 2) Source(57, 2) + SourceIndex(0)
---
>>>for (let [numberA2, nameA2, skillA2] of robots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^^^^
8 >                          ^^
9 >                            ^^^^^^^
10>                                   ^
11>                                    ^^^^
12>                                        ^^^^^^
13>                                              ^^
14>                                                ^
1->
  >
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA2
6 >                  , 
7 >                    nameA2
8 >                          , 
9 >                            skillA2
10>                                   ]
11>                                     of 
12>                                        robots
13>                                              ) 
14>                                                {
1->Emitted(49, 1) Source(59, 1) + SourceIndex(0)
2 >Emitted(49, 6) Source(59, 6) + SourceIndex(0)
3 >Emitted(49, 10) Source(59, 10) + SourceIndex(0)
4 >Emitted(49, 11) Source(59, 11) + SourceIndex(0)
5 >Emitted(49, 19) Source(59, 19) + SourceIndex(0)
6 >Emitted(49, 21) Source(59, 21) + SourceIndex(0)
7 >Emitted(49, 27) Source(59, 27) + SourceIndex(0)
8 >Emitted(49, 29) Source(59, 29) + SourceIndex(0)
9 >Emitted(49, 36) Source(59, 36) + SourceIndex(0)
10>Emitted(49, 37) Source(59, 37) + SourceIndex(0)
11>Emitted(49, 41) Source(59, 41) + SourceIndex(0)
12>Emitted(49, 47) Source(59, 47) + SourceIndex(0)
13>Emitted(49, 49) Source(59, 49) + SourceIndex(0)
14>Emitted(49, 50) Source(59, 50) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(50, 5) Source(60, 5) + SourceIndex(0)
2 >Emitted(50, 12) Source(60, 12) + SourceIndex(0)
3 >Emitted(50, 13) Source(60, 13) + SourceIndex(0)
4 >Emitted(50, 16) Source(60, 16) + SourceIndex(0)
5 >Emitted(50, 17) Source(60, 17) + SourceIndex(0)
6 >Emitted(50, 23) Source(60, 23) + SourceIndex(0)
7 >Emitted(50, 24) Source(60, 24) + SourceIndex(0)
8 >Emitted(50, 25) Source(60, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(51, 1) Source(61, 1) + SourceIndex(0)
2 >Emitted(51, 2) Source(61, 2) + SourceIndex(0)
---
>>>for (let [numberA2, nameA2, skillA2] of getRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^^^^
8 >                          ^^
9 >                            ^^^^^^^
10>                                   ^
11>                                    ^^^^
12>                                        ^^^^^^^^^
13>                                                 ^^
14>                                                   ^^
15>                                                     ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA2
6 >                  , 
7 >                    nameA2
8 >                          , 
9 >                            skillA2
10>                                   ]
11>                                     of 
12>                                        getRobots
13>                                                 ()
14>                                                   ) 
15>                                                     {
1->Emitted(52, 1) Source(62, 1) + SourceIndex(0)
2 >Emitted(52, 6) Source(62, 6) + SourceIndex(0)
3 >Emitted(52, 10) Source(62, 10) + SourceIndex(0)
4 >Emitted(52, 11) Source(62, 11) + SourceIndex(0)
5 >Emitted(52, 19) Source(62, 19) + SourceIndex(0)
6 >Emitted(52, 21) Source(62, 21) + SourceIndex(0)
7 >Emitted(52, 27) Source(62, 27) + SourceIndex(0)
8 >Emitted(52, 29) Source(62, 29) + SourceIndex(0)
9 >Emitted(52, 36) Source(62, 36) + SourceIndex(0)
10>Emitted(52, 37) Source(62, 37) + SourceIndex(0)
11>Emitted(52, 41) Source(62, 41) + SourceIndex(0)
12>Emitted(52, 50) Source(62, 50) + SourceIndex(0)
13>Emitted(52, 52) Source(62, 52) + SourceIndex(0)
14>Emitted(52, 54) Source(62, 54) + SourceIndex(0)
15>Emitted(52, 55) Source(62, 55) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(53, 5) Source(63, 5) + SourceIndex(0)
2 >Emitted(53, 12) Source(63, 12) + SourceIndex(0)
3 >Emitted(53, 13) Source(63, 13) + SourceIndex(0)
4 >Emitted(53, 16) Source(63, 16) + SourceIndex(0)
5 >Emitted(53, 17) Source(63, 17) + SourceIndex(0)
6 >Emitted(53, 23) Source(63, 23) + SourceIndex(0)
7 >Emitted(53, 24) Source(63, 24) + SourceIndex(0)
8 >Emitted(53, 25) Source(63, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(54, 1) Source(64, 1) + SourceIndex(0)
2 >Emitted(54, 2) Source(64, 2) + SourceIndex(0)
---
>>>for (let [numberA2, nameA2, skillA2] of [robotA, robotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^^^^
8 >                          ^^
9 >                            ^^^^^^^
10>                                   ^
11>                                    ^^^^
12>                                        ^
13>                                         ^^^^^^
14>                                               ^^
15>                                                 ^^^^^^
16>                                                       ^
17>                                                        ^^
18>                                                          ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA2
6 >                  , 
7 >                    nameA2
8 >                          , 
9 >                            skillA2
10>                                   ]
11>                                     of 
12>                                        [
13>                                         robotA
14>                                               , 
15>                                                 robotB
16>                                                       ]
17>                                                        ) 
18>                                                          {
1->Emitted(55, 1) Source(65, 1) + SourceIndex(0)
2 >Emitted(55, 6) Source(65, 6) + SourceIndex(0)
3 >Emitted(55, 10) Source(65, 10) + SourceIndex(0)
4 >Emitted(55, 11) Source(65, 11) + SourceIndex(0)
5 >Emitted(55, 19) Source(65, 19) + SourceIndex(0)
6 >Emitted(55, 21) Source(65, 21) + SourceIndex(0)
7 >Emitted(55, 27) Source(65, 27) + SourceIndex(0)
8 >Emitted(55, 29) Source(65, 29) + SourceIndex(0)
9 >Emitted(55, 36) Source(65, 36) + SourceIndex(0)
10>Emitted(55, 37) Source(65, 37) + SourceIndex(0)
11>Emitted(55, 41) Source(65, 41) + SourceIndex(0)
12>Emitted(55, 42) Source(65, 42) + SourceIndex(0)
13>Emitted(55, 48) Source(65, 48) + SourceIndex(0)
14>Emitted(55, 50) Source(65, 50) + SourceIndex(0)
15>Emitted(55, 56) Source(65, 56) + SourceIndex(0)
16>Emitted(55, 57) Source(65, 57) + SourceIndex(0)
17>Emitted(55, 59) Source(65, 59) + SourceIndex(0)
18>Emitted(55, 60) Source(65, 60) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(56, 5) Source(66, 5) + SourceIndex(0)
2 >Emitted(56, 12) Source(66, 12) + SourceIndex(0)
3 >Emitted(56, 13) Source(66, 13) + SourceIndex(0)
4 >Emitted(56, 16) Source(66, 16) + SourceIndex(0)
5 >Emitted(56, 17) Source(66, 17) + SourceIndex(0)
6 >Emitted(56, 23) Source(66, 23) + SourceIndex(0)
7 >Emitted(56, 24) Source(66, 24) + SourceIndex(0)
8 >Emitted(56, 25) Source(66, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(57, 1) Source(67, 1) + SourceIndex(0)
2 >Emitted(57, 2) Source(67, 2) + SourceIndex(0)
---
>>>for (let [nameMA, [primarySkillA, secondarySkillA]] of multiRobots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^
6 >                ^^
7 >                  ^
8 >                   ^^^^^^^^^^^^^
9 >                                ^^
10>                                  ^^^^^^^^^^^^^^^
11>                                                 ^
12>                                                  ^
13>                                                   ^^^^
14>                                                       ^^^^^^^^^^^
15>                                                                  ^^
16>                                                                    ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameMA
6 >                , 
7 >                  [
8 >                   primarySkillA
9 >                                , 
10>                                  secondarySkillA
11>                                                 ]
12>                                                  ]
13>                                                    of 
14>                                                       multiRobots
15>                                                                  ) 
16>                                                                    {
1->Emitted(58, 1) Source(68, 1) + SourceIndex(0)
2 >Emitted(58, 6) Source(68, 6) + SourceIndex(0)
3 >Emitted(58, 10) Source(68, 10) + SourceIndex(0)
4 >Emitted(58, 11) Source(68, 11) + SourceIndex(0)
5 >Emitted(58, 17) Source(68, 17) + SourceIndex(0)
6 >Emitted(58, 19) Source(68, 19) + SourceIndex(0)
7 >Emitted(58, 20) Source(68, 20) + SourceIndex(0)
8 >Emitted(58, 33) Source(68, 33) + SourceIndex(0)
9 >Emitted(58, 35) Source(68, 35) + SourceIndex(0)
10>Emitted(58, 50) Source(68, 50) + SourceIndex(0)
11>Emitted(58, 51) Source(68, 51) + SourceIndex(0)
12>Emitted(58, 52) Source(68, 52) + SourceIndex(0)
13>Emitted(58, 56) Source(68, 56) + SourceIndex(0)
14>Emitted(58, 67) Source(68, 67) + SourceIndex(0)
15>Emitted(58, 69) Source(68, 69) + SourceIndex(0)
16>Emitted(58, 70) Source(68, 70) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(59, 5) Source(69, 5) + SourceIndex(0)
2 >Emitted(59, 12) Source(69, 12) + SourceIndex(0)
3 >Emitted(59, 13) Source(69, 13) + SourceIndex(0)
4 >Emitted(59, 16) Source(69, 16) + SourceIndex(0)
5 >Emitted(59, 17) Source(69, 17) + SourceIndex(0)
6 >Emitted(59, 23) Source(69, 23) + SourceIndex(0)
7 >Emitted(59, 24) Source(69, 24) + SourceIndex(0)
8 >Emitted(59, 25) Source(69, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(60, 1) Source(70, 1) + SourceIndex(0)
2 >Emitted(60, 2) Source(70, 2) + SourceIndex(0)
---
>>>for (let [nameMA, [primarySkillA, secondarySkillA]] of getMultiRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^
6 >                ^^
7 >                  ^
8 >                   ^^^^^^^^^^^^^
9 >                                ^^
10>                                  ^^^^^^^^^^^^^^^
11>                                                 ^
12>                                                  ^
13>                                                   ^^^^
14>                                                       ^^^^^^^^^^^^^^
15>                                                                     ^^
16>                                                                       ^^
17>                                                                         ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameMA
6 >                , 
7 >                  [
8 >                   primarySkillA
9 >                                , 
10>                                  secondarySkillA
11>                                                 ]
12>                                                  ]
13>                                                    of 
14>                                                       getMultiRobots
15>                                                                     ()
16>                                                                       ) 
17>                                                                         {
1->Emitted(61, 1) Source(71, 1) + SourceIndex(0)
2 >Emitted(61, 6) Source(71, 6) + SourceIndex(0)
3 >Emitted(61, 10) Source(71, 10) + SourceIndex(0)
4 >Emitted(61, 11) Source(71, 11) + SourceIndex(0)
5 >Emitted(61, 17) Source(71, 17) + SourceIndex(0)
6 >Emitted(61, 19) Source(71, 19) + SourceIndex(0)
7 >Emitted(61, 20) Source(71, 20) + SourceIndex(0)
8 >Emitted(61, 33) Source(71, 33) + SourceIndex(0)
9 >Emitted(61, 35) Source(71, 35) + SourceIndex(0)
10>Emitted(61, 50) Source(71, 50) + SourceIndex(0)
11>Emitted(61, 51) Source(71, 51) + SourceIndex(0)
12>Emitted(61, 52) Source(71, 52) + SourceIndex(0)
13>Emitted(61, 56) Source(71, 56) + SourceIndex(0)
14>Emitted(61, 70) Source(71, 70) + SourceIndex(0)
15>Emitted(61, 72) Source(71, 72) + SourceIndex(0)
16>Emitted(61, 74) Source(71, 74) + SourceIndex(0)
17>Emitted(61, 75) Source(71, 75) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(62, 5) Source(72, 5) + SourceIndex(0)
2 >Emitted(62, 12) Source(72, 12) + SourceIndex(0)
3 >Emitted(62, 13) Source(72, 13) + SourceIndex(0)
4 >Emitted(62, 16) Source(72, 16) + SourceIndex(0)
5 >Emitted(62, 17) Source(72, 17) + SourceIndex(0)
6 >Emitted(62, 23) Source(72, 23) + SourceIndex(0)
7 >Emitted(62, 24) Source(72, 24) + SourceIndex(0)
8 >Emitted(62, 25) Source(72, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(63, 1) Source(73, 1) + SourceIndex(0)
2 >Emitted(63, 2) Source(73, 2) + SourceIndex(0)
---
>>>for (let [nameMA, [primarySkillA, secondarySkillA]] of [multiRobotA, multiRobotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^
6 >                ^^
7 >                  ^
8 >                   ^^^^^^^^^^^^^
9 >                                ^^
10>                                  ^^^^^^^^^^^^^^^
11>                                                 ^
12>                                                  ^
13>                                                   ^^^^
14>                                                       ^
15>                                                        ^^^^^^^^^^^
16>                                                                   ^^
17>                                                                     ^^^^^^^^^^^
18>                                                                                ^
19>                                                                                 ^^
20>                                                                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          nameMA
6 >                , 
7 >                  [
8 >                   primarySkillA
9 >                                , 
10>                                  secondarySkillA
11>                                                 ]
12>                                                  ]
13>                                                    of 
14>                                                       [
15>                                                        multiRobotA
16>                                                                   , 
17>                                                                     multiRobotB
18>                                                                                ]
19>                                                                                 ) 
20>                                                                                   {
1->Emitted(64, 1) Source(74, 1) + SourceIndex(0)
2 >Emitted(64, 6) Source(74, 6) + SourceIndex(0)
3 >Emitted(64, 10) Source(74, 10) + SourceIndex(0)
4 >Emitted(64, 11) Source(74, 11) + SourceIndex(0)
5 >Emitted(64, 17) Source(74, 17) + SourceIndex(0)
6 >Emitted(64, 19) Source(74, 19) + SourceIndex(0)
7 >Emitted(64, 20) Source(74, 20) + SourceIndex(0)
8 >Emitted(64, 33) Source(74, 33) + SourceIndex(0)
9 >Emitted(64, 35) Source(74, 35) + SourceIndex(0)
10>Emitted(64, 50) Source(74, 50) + SourceIndex(0)
11>Emitted(64, 51) Source(74, 51) + SourceIndex(0)
12>Emitted(64, 52) Source(74, 52) + SourceIndex(0)
13>Emitted(64, 56) Source(74, 56) + SourceIndex(0)
14>Emitted(64, 57) Source(74, 57) + SourceIndex(0)
15>Emitted(64, 68) Source(74, 68) + SourceIndex(0)
16>Emitted(64, 70) Source(74, 70) + SourceIndex(0)
17>Emitted(64, 81) Source(74, 81) + SourceIndex(0)
18>Emitted(64, 82) Source(74, 82) + SourceIndex(0)
19>Emitted(64, 84) Source(74, 84) + SourceIndex(0)
20>Emitted(64, 85) Source(74, 85) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(65, 5) Source(75, 5) + SourceIndex(0)
2 >Emitted(65, 12) Source(75, 12) + SourceIndex(0)
3 >Emitted(65, 13) Source(75, 13) + SourceIndex(0)
4 >Emitted(65, 16) Source(75, 16) + SourceIndex(0)
5 >Emitted(65, 17) Source(75, 17) + SourceIndex(0)
6 >Emitted(65, 23) Source(75, 23) + SourceIndex(0)
7 >Emitted(65, 24) Source(75, 24) + SourceIndex(0)
8 >Emitted(65, 25) Source(75, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(66, 1) Source(76, 1) + SourceIndex(0)
2 >Emitted(66, 2) Source(76, 2) + SourceIndex(0)
---
>>>for (let [numberA3, ...robotAInfo] of robots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^
8 >                       ^^^^^^^^^^
9 >                                 ^
10>                                  ^^^^
11>                                      ^^^^^^
12>                                            ^^
13>                                              ^
1->
  >
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA3
6 >                  , 
7 >                    ...
8 >                       robotAInfo
9 >                                 ]
10>                                   of 
11>                                      robots
12>                                            ) 
13>                                              {
1->Emitted(67, 1) Source(78, 1) + SourceIndex(0)
2 >Emitted(67, 6) Source(78, 6) + SourceIndex(0)
3 >Emitted(67, 10) Source(78, 10) + SourceIndex(0)
4 >Emitted(67, 11) Source(78, 11) + SourceIndex(0)
5 >Emitted(67, 19) Source(78, 19) + SourceIndex(0)
6 >Emitted(67, 21) Source(78, 21) + SourceIndex(0)
7 >Emitted(67, 24) Source(78, 24) + SourceIndex(0)
8 >Emitted(67, 34) Source(78, 34) + SourceIndex(0)
9 >Emitted(67, 35) Source(78, 35) + SourceIndex(0)
10>Emitted(67, 39) Source(78, 39) + SourceIndex(0)
11>Emitted(67, 45) Source(78, 45) + SourceIndex(0)
12>Emitted(67, 47) Source(78, 47) + SourceIndex(0)
13>Emitted(67, 48) Source(78, 48) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(68, 5) Source(79, 5) + SourceIndex(0)
2 >Emitted(68, 12) Source(79, 12) + SourceIndex(0)
3 >Emitted(68, 13) Source(79, 13) + SourceIndex(0)
4 >Emitted(68, 16) Source(79, 16) + SourceIndex(0)
5 >Emitted(68, 17) Source(79, 17) + SourceIndex(0)
6 >Emitted(68, 25) Source(79, 25) + SourceIndex(0)
7 >Emitted(68, 26) Source(79, 26) + SourceIndex(0)
8 >Emitted(68, 27) Source(79, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(69, 1) Source(80, 1) + SourceIndex(0)
2 >Emitted(69, 2) Source(80, 2) + SourceIndex(0)
---
>>>for (let [numberA3, ...robotAInfo] of getRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^
8 >                       ^^^^^^^^^^
9 >                                 ^
10>                                  ^^^^
11>                                      ^^^^^^^^^
12>                                               ^^
13>                                                 ^^
14>                                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA3
6 >                  , 
7 >                    ...
8 >                       robotAInfo
9 >                                 ]
10>                                   of 
11>                                      getRobots
12>                                               ()
13>                                                 ) 
14>                                                   {
1->Emitted(70, 1) Source(81, 1) + SourceIndex(0)
2 >Emitted(70, 6) Source(81, 6) + SourceIndex(0)
3 >Emitted(70, 10) Source(81, 10) + SourceIndex(0)
4 >Emitted(70, 11) Source(81, 11) + SourceIndex(0)
5 >Emitted(70, 19) Source(81, 19) + SourceIndex(0)
6 >Emitted(70, 21) Source(81, 21) + SourceIndex(0)
7 >Emitted(70, 24) Source(81, 24) + SourceIndex(0)
8 >Emitted(70, 34) Source(81, 34) + SourceIndex(0)
9 >Emitted(70, 35) Source(81, 35) + SourceIndex(0)
10>Emitted(70, 39) Source(81, 39) + SourceIndex(0)
11>Emitted(70, 48) Source(81, 48) + SourceIndex(0)
12>Emitted(70, 50) Source(81, 50) + SourceIndex(0)
13>Emitted(70, 52) Source(81, 52) + SourceIndex(0)
14>Emitted(70, 53) Source(81, 53) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(71, 5) Source(82, 5) + SourceIndex(0)
2 >Emitted(71, 12) Source(82, 12) + SourceIndex(0)
3 >Emitted(71, 13) Source(82, 13) + SourceIndex(0)
4 >Emitted(71, 16) Source(82, 16) + SourceIndex(0)
5 >Emitted(71, 17) Source(82, 17) + SourceIndex(0)
6 >Emitted(71, 25) Source(82, 25) + SourceIndex(0)
7 >Emitted(71, 26) Source(82, 26) + SourceIndex(0)
8 >Emitted(71, 27) Source(82, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(72, 1) Source(83, 1) + SourceIndex(0)
2 >Emitted(72, 2) Source(83, 2) + SourceIndex(0)
---
>>>for (let [numberA3, ...robotAInfo] of [robotA, robotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^^^^^^
6 >                  ^^
7 >                    ^^^
8 >                       ^^^^^^^^^^
9 >                                 ^
10>                                  ^^^^
11>                                      ^
12>                                       ^^^^^^
13>                                             ^^
14>                                               ^^^^^^
15>                                                     ^
16>                                                      ^^
17>                                                        ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          numberA3
6 >                  , 
7 >                    ...
8 >                       robotAInfo
9 >                                 ]
10>                                   of 
11>                                      [
12>                                       robotA
13>                                             , 
14>                                               robotB
15>                                                     ]
16>                                                      ) 
17>                                                        {
1->Emitted(73, 1) Source(84, 1) + SourceIndex(0)
2 >Emitted(73, 6) Source(84, 6) + SourceIndex(0)
3 >Emitted(73, 10) Source(84, 10) + SourceIndex(0)
4 >Emitted(73, 11) Source(84, 11) + SourceIndex(0)
5 >Emitted(73, 19) Source(84, 19) + SourceIndex(0)
6 >Emitted(73, 21) Source(84, 21) + SourceIndex(0)
7 >Emitted(73, 24) Source(84, 24) + SourceIndex(0)
8 >Emitted(73, 34) Source(84, 34) + SourceIndex(0)
9 >Emitted(73, 35) Source(84, 35) + SourceIndex(0)
10>Emitted(73, 39) Source(84, 39) + SourceIndex(0)
11>Emitted(73, 40) Source(84, 40) + SourceIndex(0)
12>Emitted(73, 46) Source(84, 46) + SourceIndex(0)
13>Emitted(73, 48) Source(84, 48) + SourceIndex(0)
14>Emitted(73, 54) Source(84, 54) + SourceIndex(0)
15>Emitted(73, 55) Source(84, 55) + SourceIndex(0)
16>Emitted(73, 57) Source(84, 57) + SourceIndex(0)
17>Emitted(73, 58) Source(84, 58) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(74, 5) Source(85, 5) + SourceIndex(0)
2 >Emitted(74, 12) Source(85, 12) + SourceIndex(0)
3 >Emitted(74, 13) Source(85, 13) + SourceIndex(0)
4 >Emitted(74, 16) Source(85, 16) + SourceIndex(0)
5 >Emitted(74, 17) Source(85, 17) + SourceIndex(0)
6 >Emitted(74, 25) Source(85, 25) + SourceIndex(0)
7 >Emitted(74, 26) Source(85, 26) + SourceIndex(0)
8 >Emitted(74, 27) Source(85, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(75, 1) Source(86, 1) + SourceIndex(0)
2 >Emitted(75, 2) Source(86, 2) + SourceIndex(0)
---
>>>for (let [...multiRobotAInfo] of multiRobots) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^
6 >             ^^^^^^^^^^^^^^^
7 >                            ^
8 >                             ^^^^
9 >                                 ^^^^^^^^^^^
10>                                            ^^
11>                                              ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          ...
6 >             multiRobotAInfo
7 >                            ]
8 >                              of 
9 >                                 multiRobots
10>                                            ) 
11>                                              {
1->Emitted(76, 1) Source(87, 1) + SourceIndex(0)
2 >Emitted(76, 6) Source(87, 6) + SourceIndex(0)
3 >Emitted(76, 10) Source(87, 10) + SourceIndex(0)
4 >Emitted(76, 11) Source(87, 11) + SourceIndex(0)
5 >Emitted(76, 14) Source(87, 14) + SourceIndex(0)
6 >Emitted(76, 29) Source(87, 29) + SourceIndex(0)
7 >Emitted(76, 30) Source(87, 30) + SourceIndex(0)
8 >Emitted(76, 34) Source(87, 34) + SourceIndex(0)
9 >Emitted(76, 45) Source(87, 45) + SourceIndex(0)
10>Emitted(76, 47) Source(87, 47) + SourceIndex(0)
11>Emitted(76, 48) Source(87, 48) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(77, 5) Source(88, 5) + SourceIndex(0)
2 >Emitted(77, 12) Source(88, 12) + SourceIndex(0)
3 >Emitted(77, 13) Source(88, 13) + SourceIndex(0)
4 >Emitted(77, 16) Source(88, 16) + SourceIndex(0)
5 >Emitted(77, 17) Source(88, 17) + SourceIndex(0)
6 >Emitted(77, 32) Source(88, 32) + SourceIndex(0)
7 >Emitted(77, 33) Source(88, 33) + SourceIndex(0)
8 >Emitted(77, 34) Source(88, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(78, 1) Source(89, 1) + SourceIndex(0)
2 >Emitted(78, 2) Source(89, 2) + SourceIndex(0)
---
>>>for (let [...multiRobotAInfo] of getMultiRobots()) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^
6 >             ^^^^^^^^^^^^^^^
7 >                            ^
8 >                             ^^^^
9 >                                 ^^^^^^^^^^^^^^
10>                                               ^^
11>                                                 ^^
12>                                                   ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          ...
6 >             multiRobotAInfo
7 >                            ]
8 >                              of 
9 >                                 getMultiRobots
10>                                               ()
11>                                                 ) 
12>                                                   {
1->Emitted(79, 1) Source(90, 1) + SourceIndex(0)
2 >Emitted(79, 6) Source(90, 6) + SourceIndex(0)
3 >Emitted(79, 10) Source(90, 10) + SourceIndex(0)
4 >Emitted(79, 11) Source(90, 11) + SourceIndex(0)
5 >Emitted(79, 14) Source(90, 14) + SourceIndex(0)
6 >Emitted(79, 29) Source(90, 29) + SourceIndex(0)
7 >Emitted(79, 30) Source(90, 30) + SourceIndex(0)
8 >Emitted(79, 34) Source(90, 34) + SourceIndex(0)
9 >Emitted(79, 48) Source(90, 48) + SourceIndex(0)
10>Emitted(79, 50) Source(90, 50) + SourceIndex(0)
11>Emitted(79, 52) Source(90, 52) + SourceIndex(0)
12>Emitted(79, 53) Source(90, 53) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(80, 5) Source(91, 5) + SourceIndex(0)
2 >Emitted(80, 12) Source(91, 12) + SourceIndex(0)
3 >Emitted(80, 13) Source(91, 13) + SourceIndex(0)
4 >Emitted(80, 16) Source(91, 16) + SourceIndex(0)
5 >Emitted(80, 17) Source(91, 17) + SourceIndex(0)
6 >Emitted(80, 32) Source(91, 32) + SourceIndex(0)
7 >Emitted(80, 33) Source(91, 33) + SourceIndex(0)
8 >Emitted(80, 34) Source(91, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(81, 1) Source(92, 1) + SourceIndex(0)
2 >Emitted(81, 2) Source(92, 2) + SourceIndex(0)
---
>>>for (let [...multiRobotAInfo] of [multiRobotA, multiRobotB]) {
1->
2 >^^^^^
3 >     ^^^^
4 >         ^
5 >          ^^^
6 >             ^^^^^^^^^^^^^^^
7 >                            ^
8 >                             ^^^^
9 >                                 ^
10>                                  ^^^^^^^^^^^
11>                                             ^^
12>                                               ^^^^^^^^^^^
13>                                                          ^
14>                                                           ^^
15>                                                             ^
1->
  >
2 >for (
3 >     let 
4 >         [
5 >          ...
6 >             multiRobotAInfo
7 >                            ]
8 >                              of 
9 >                                 [
10>                                  multiRobotA
11>                                             , 
12>                                               multiRobotB
13>                                                          ]
14>                                                           ) 
15>                                                             {
1->Emitted(82, 1) Source(93, 1) + SourceIndex(0)
2 >Emitted(82, 6) Source(93, 6) + SourceIndex(0)
3 >Emitted(82, 10) Source(93, 10) + SourceIndex(0)
4 >Emitted(82, 11) Source(93, 11) + SourceIndex(0)
5 >Emitted(82, 14) Source(93, 14) + SourceIndex(0)
6 >Emitted(82, 29) Source(93, 29) + SourceIndex(0)
7 >Emitted(82, 30) Source(93, 30) + SourceIndex(0)
8 >Emitted(82, 34) Source(93, 34) + SourceIndex(0)
9 >Emitted(82, 35) Source(93, 35) + SourceIndex(0)
10>Emitted(82, 46) Source(93, 46) + SourceIndex(0)
11>Emitted(82, 48) Source(93, 48) + SourceIndex(0)
12>Emitted(82, 59) Source(93, 59) + SourceIndex(0)
13>Emitted(82, 60) Source(93, 60) + SourceIndex(0)
14>Emitted(82, 62) Source(93, 62) + SourceIndex(0)
15>Emitted(82, 63) Source(93, 63) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(83, 5) Source(94, 5) + SourceIndex(0)
2 >Emitted(83, 12) Source(94, 12) + SourceIndex(0)
3 >Emitted(83, 13) Source(94, 13) + SourceIndex(0)
4 >Emitted(83, 16) Source(94, 16) + SourceIndex(0)
5 >Emitted(83, 17) Source(94, 17) + SourceIndex(0)
6 >Emitted(83, 32) Source(94, 32) + SourceIndex(0)
7 >Emitted(83, 33) Source(94, 33) + SourceIndex(0)
8 >Emitted(83, 34) Source(94, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(84, 1) Source(95, 1) + SourceIndex(0)
2 >Emitted(84, 2) Source(95, 2) + SourceIndex(0)
---
>>>//# sourceMappingURL=sourceMapValidationDestructuringForOfArrayBindingPattern.js.map