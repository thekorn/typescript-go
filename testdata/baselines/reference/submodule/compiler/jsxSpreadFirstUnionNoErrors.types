//// [tests/cases/compiler/jsxSpreadFirstUnionNoErrors.tsx] ////

=== jsxSpreadFirstUnionNoErrors.tsx ===
import React from "react";
>React : typeof __React

type InfoProps =
>InfoProps : InfoProps

| { status: "hidden" }
>status : "hidden"

| { status: "visible"; content: string };
>status : "visible"
>content : string

const Info = (props: InfoProps) =>
>Info : (props: InfoProps) => Element
>(props: InfoProps) =>props.status === "hidden"  ? <noscript />  : <div>{props.content}</div> : (props: InfoProps) => Element
>props : InfoProps

props.status === "hidden"
>props.status === "hidden"  ? <noscript />  : <div>{props.content}</div> : Element
>props.status === "hidden" : boolean
>props.status : "hidden" | "visible"
>props : InfoProps
>status : "hidden" | "visible"
>"hidden" : "hidden"

  ? <noscript />
><noscript /> : Element
>noscript : any

  : <div>{props.content}</div>;
><div>{props.content}</div> : Element
>div : any
>props.content : string
>props : { status: "visible"; content: string; }
>content : string
>div : any

const a = <Info status="hidden" />;
>a : Element
><Info status="hidden" /> : Element
>Info : (props: InfoProps) => Element
>status : "hidden"

const b = <Info status="visible" content="hello world" />;
>b : Element
><Info status="visible" content="hello world" /> : Element
>Info : (props: InfoProps) => Element
>status : "visible"
>content : string

declare const infoProps: InfoProps;
>infoProps : InfoProps

const c = <Info {...infoProps} />;
>c : Element
><Info {...infoProps} /> : Element
>Info : (props: InfoProps) => Element
>infoProps : InfoProps

