//// [tests/cases/compiler/errorsForCallAndAssignmentAreSimilar.ts] ////

=== errorsForCallAndAssignmentAreSimilar.ts ===
function minimalExample1() {
>minimalExample1 : () => void

    type Disc =
>Disc : Disc

        | { kind: "hddvd" }
>kind : "hddvd"

        | { kind: "bluray" }
>kind : "bluray"

    function foo(x: Disc[]) {
>foo : (x: Disc[]) => void
>x : Disc[]
    }

    foo([
>foo([        { kind: "bluray", },        { kind: "hdpvd", }    ]) : void
>foo : (x: Disc[]) => void
>[        { kind: "bluray", },        { kind: "hdpvd", }    ] : ({ kind: "bluray"; } | { kind: "hdpvd"; })[]

        { kind: "bluray", },
>{ kind: "bluray", } : { kind: "bluray"; }
>kind : "bluray"
>"bluray" : "bluray"

        { kind: "hdpvd", }
>{ kind: "hdpvd", } : { kind: "hdpvd"; }
>kind : "hdpvd"
>"hdpvd" : "hdpvd"

    ]);

    const ds: Disc[] = [
>ds : Disc[]
>[        { kind: "bluray", },        { kind: "hdpvd", }    ] : ({ kind: "bluray"; } | { kind: "hdpvd"; })[]

        { kind: "bluray", },
>{ kind: "bluray", } : { kind: "bluray"; }
>kind : "bluray"
>"bluray" : "bluray"

        { kind: "hdpvd", }
>{ kind: "hdpvd", } : { kind: "hdpvd"; }
>kind : "hdpvd"
>"hdpvd" : "hdpvd"

    ];
}
