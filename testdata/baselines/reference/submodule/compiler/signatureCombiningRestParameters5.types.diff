--- old.signatureCombiningRestParameters5.types
+++ new.signatureCombiningRestParameters5.types
@@= skipped -23, +23 lines =@@
 >true : true
 
 declare function test2<
->test2 : <A extends readonly unknown[], B extends readonly unknown[]>(c: (...args: A) => void, d: (...args: B) => void, e: (arg: typeof c | typeof d) => void) => void
+>test2 : <A extends readonly unknown[], B extends readonly unknown[]>(c: (...args: A) => void, d: (...args: B) => void, e: (arg: ((...args: A) => void) | ((...args: B) => void)) => void) => void
 
   A extends readonly unknown[],
   B extends readonly unknown[],
@@= skipped -14, +14 lines =@@
 >args : B
 
   e: (arg: typeof c | typeof d) => void,
->e : (arg: typeof c | typeof d) => void
+>e : (arg: ((...args: A) => void) | ((...args: B) => void)) => void
 >arg : ((...args: A) => void) | ((...args: B) => void)
 >c : (...args: A) => void
 >d : (...args: B) => void
@@= skipped -9, +9 lines =@@
 
 test2(
 >test2(  (a: number | boolean, b: string | number) => {},  (c: string | boolean, d: number | boolean) => {},  (cb) => {    cb(true, 42);    cb(true, [42]); // error  },) : void
->test2 : <A extends readonly unknown[], B extends readonly unknown[]>(c: (...args: A) => void, d: (...args: B) => void, e: (arg: typeof c | typeof d) => void) => void
+>test2 : <A extends readonly unknown[], B extends readonly unknown[]>(c: (...args: A) => void, d: (...args: B) => void, e: (arg: ((...args: A) => void) | ((...args: B) => void)) => void) => void
 
   (a: number | boolean, b: string | number) => {},
 >(a: number | boolean, b: string | number) => {} : (a: number | boolean, b: string | number) => void
