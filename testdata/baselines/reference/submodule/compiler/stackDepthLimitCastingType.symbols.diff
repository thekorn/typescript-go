--- old.stackDepthLimitCastingType.symbols
+++ new.stackDepthLimitCastingType.symbols
@@= skipped -12, +12 lines =@@
 >E : Symbol(E, Decl(index.d.ts, 2, 24))
 
         initialize(attributes?: T, options?: CombinedModelConstructorOptions<E, this>): void;
->initialize : Symbol(Model.initialize, Decl(index.d.ts, 2, 34))
+>initialize : Symbol(initialize, Decl(index.d.ts, 2, 34))
 >attributes : Symbol(attributes, Decl(index.d.ts, 3, 19))
 >T : Symbol(T, Decl(index.d.ts, 2, 16))
 >options : Symbol(options, Decl(index.d.ts, 3, 34))
@@= skipped -8, +8 lines =@@
 >E : Symbol(E, Decl(index.d.ts, 2, 24))
 
         fetch(options?: any): JQueryXHR;
->fetch : Symbol(Model.fetch, Decl(index.d.ts, 3, 93))
+>fetch : Symbol(fetch, Decl(index.d.ts, 3, 93))
 >options : Symbol(options, Decl(index.d.ts, 4, 14))
 >JQueryXHR : Symbol(JQueryXHR, Decl(index.d.ts, 0, 16))
     }
@@= skipped -11, +11 lines =@@
 >Model : Symbol(Model, Decl(index.d.ts, 1, 27))
 
         collection?: Collection<TModel>;
->collection : Symbol(ModelConstructorOptions.collection, Decl(index.d.ts, 6, 69))
+>collection : Symbol(collection, Decl(index.d.ts, 6, 69))
 >Collection : Symbol(Collection, Decl(index.d.ts, 8, 5))
 >TModel : Symbol(TModel, Decl(index.d.ts, 6, 38))
     }
@@= skipped -11, +11 lines =@@
 >Model : Symbol(Model, Decl(index.d.ts, 1, 27))
 
         without(...values: TModel[]): TModel[];
->without : Symbol(Collection.without, Decl(index.d.ts, 9, 52))
+>without : Symbol(without, Decl(index.d.ts, 9, 52))
 >values : Symbol(values, Decl(index.d.ts, 10, 16))
 >TModel : Symbol(TModel, Decl(index.d.ts, 9, 21))
 >TModel : Symbol(TModel, Decl(index.d.ts, 9, 21))
@@= skipped -30, +30 lines =@@
 >Backbone : Symbol(Backbone, Decl(index.d.ts, 0, 6))
 
 declare module "backbone" {
->"backbone" : Symbol(Backbone, Decl(index.d.ts, 0, 0), Decl(index.d.ts, 0, 37))
+>"backbone" : Symbol("node_modules/backbone/index", Decl(index.d.ts, 0, 0), Decl(index.d.ts, 0, 37))
 
     interface ModelWithCache extends Model {
 >ModelWithCache : Symbol(ModelWithCache, Decl(index.d.ts, 1, 27))
->Model : Symbol(Backbone.Model, Decl(index.d.ts, 1, 27))
+>Model : Symbol(Model, Decl(index.d.ts, 1, 27))
 
         fetch(options?: any): JQueryXHR;
->fetch : Symbol(ModelWithCache.fetch, Decl(index.d.ts, 2, 44))
+>fetch : Symbol(fetch, Decl(index.d.ts, 2, 44))
 >options : Symbol(options, Decl(index.d.ts, 3, 14))
 >JQueryXHR : Symbol(JQueryXHR, Decl(index.d.ts, 0, 16))
     }
@@= skipped -26, +26 lines =@@
 
 const hoge = new Backbone.Model() as Backbone.ModelWithCache;
 >hoge : Symbol(hoge, Decl(index.ts, 4, 5))
->Backbone.Model : Symbol(Backbone.Model, Decl(index.d.ts, 15, 8))
+>Backbone.Model : Symbol(Model, Decl(index.d.ts, 15, 8))
 >Backbone : Symbol(Backbone, Decl(index.ts, 0, 6))
->Model : Symbol(Backbone.Model, Decl(index.d.ts, 15, 8))
+>Model : Symbol(Model, Decl(index.d.ts, 15, 8))
 >Backbone : Symbol(Backbone, Decl(index.ts, 0, 6))
->ModelWithCache : Symbol(Backbone.ModelWithCache, Decl(index.d.ts, 1, 27))
+>ModelWithCache : Symbol(ModelWithCache, Decl(index.d.ts, 1, 27))
 
 hoge.fetch(null as any);
->hoge.fetch : Symbol(Backbone.ModelWithCache.fetch, Decl(index.d.ts, 2, 44))
+>hoge.fetch : Symbol(fetch, Decl(index.d.ts, 2, 44))
 >hoge : Symbol(hoge, Decl(index.ts, 4, 5))
->fetch : Symbol(Backbone.ModelWithCache.fetch, Decl(index.d.ts, 2, 44))
+>fetch : Symbol(fetch, Decl(index.d.ts, 2, 44))
 
