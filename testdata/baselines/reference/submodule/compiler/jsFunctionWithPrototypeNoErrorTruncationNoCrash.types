//// [tests/cases/compiler/jsFunctionWithPrototypeNoErrorTruncationNoCrash.ts] ////

=== index.js ===
function Color(obj) {
>Color : { (obj: any): void; prototype: { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }; }
>obj : any

    this.example = true
>this.example = true : true
>this.example : any
>this : any
>example : any
>true : true

};
Color.prototype = {
>Color.prototype = {	negate: function () {return this;},	lighten: function (ratio) {return this;},	darken: function (ratio) {return this;},	saturate: function (ratio) {return this;},	desaturate: function (ratio) {return this;},	whiten: function (ratio) {return this;},	blacken: function (ratio) {return this;},	greyscale: function () {return this;},	clearer: function (ratio) {return this;},	toJSON: function () {return this.rgb();},} : { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }
>Color.prototype : { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }
>Color : { (obj: any): void; prototype: { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }; }
>prototype : { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }
>{	negate: function () {return this;},	lighten: function (ratio) {return this;},	darken: function (ratio) {return this;},	saturate: function (ratio) {return this;},	desaturate: function (ratio) {return this;},	whiten: function (ratio) {return this;},	blacken: function (ratio) {return this;},	greyscale: function () {return this;},	clearer: function (ratio) {return this;},	toJSON: function () {return this.rgb();},} : { negate: () => any; lighten: (ratio: any) => any; darken: (ratio: any) => any; saturate: (ratio: any) => any; desaturate: (ratio: any) => any; whiten: (ratio: any) => any; blacken: (ratio: any) => any; greyscale: () => any; clearer: (ratio: any) => any; toJSON: () => any; }

	negate: function () {return this;},
>negate : () => any
>function () {return this;} : () => any
>this : any

	lighten: function (ratio) {return this;},
>lighten : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	darken: function (ratio) {return this;},
>darken : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	saturate: function (ratio) {return this;},
>saturate : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	desaturate: function (ratio) {return this;},
>desaturate : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	whiten: function (ratio) {return this;},
>whiten : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	blacken: function (ratio) {return this;},
>blacken : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	greyscale: function () {return this;},
>greyscale : () => any
>function () {return this;} : () => any
>this : any

	clearer: function (ratio) {return this;},
>clearer : (ratio: any) => any
>function (ratio) {return this;} : (ratio: any) => any
>ratio : any
>this : any

	toJSON: function () {return this.rgb();},
>toJSON : () => any
>function () {return this.rgb();} : () => any
>this.rgb() : any
>this.rgb : any
>this : any
>rgb : any

};
