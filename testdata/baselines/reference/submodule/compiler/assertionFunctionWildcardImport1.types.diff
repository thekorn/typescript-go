--- old.assertionFunctionWildcardImport1.types
+++ new.assertionFunctionWildcardImport1.types
@@= skipped -1, +1 lines =@@
 
 === src/core/_namespaces/ts.ts ===
 import * as Debug from "../debug";
->Debug : typeof Debug
+>Debug : typeof import("src/core/debug")
 
 export { Debug };
->Debug : typeof Debug
+>Debug : typeof import("src/core/debug")
 
 === src/core/debug.ts ===
 export declare function assert(expression: unknown): asserts expression;
@@= skipped -13, +13 lines =@@
 
 === src/core/foo.ts ===
 import * as ts from "./_namespaces/ts";
->ts : typeof ts
+>ts : typeof import("src/core/_namespaces/ts")
 
 import { Debug } from "./_namespaces/ts";
->Debug : typeof ts.Debug
+>Debug : typeof import("src/core/debug")
 
 ts.Debug.assert(true);
 >ts.Debug.assert(true) : void
 >ts.Debug.assert : (expression: unknown) => asserts expression
->ts.Debug : typeof ts.Debug
->ts : typeof ts
->Debug : typeof ts.Debug
+>ts.Debug : typeof import("src/core/debug")
+>ts : typeof import("src/core/_namespaces/ts")
+>Debug : typeof import("src/core/debug")
 >assert : (expression: unknown) => asserts expression
 >true : true
 
 Debug.assert(true);
 >Debug.assert(true) : void
 >Debug.assert : (expression: unknown) => asserts expression
->Debug : typeof ts.Debug
+>Debug : typeof import("src/core/debug")
 >assert : (expression: unknown) => asserts expression
 >true : true
 
@@= skipped -29, +29 lines =@@
 
 === src/other/bar.ts ===
 import * as ts from "./_namespaces/ts";
->ts : typeof ts
+>ts : typeof import("src/other/_namespaces/ts")
 
 import { Debug } from "./_namespaces/ts";
->Debug : typeof ts.Debug
+>Debug : typeof import("src/core/debug")
 
 ts.Debug.assert(true);
 >ts.Debug.assert(true) : void
 >ts.Debug.assert : (expression: unknown) => asserts expression
->ts.Debug : typeof ts.Debug
->ts : typeof ts
->Debug : typeof ts.Debug
+>ts.Debug : typeof import("src/core/debug")
+>ts : typeof import("src/other/_namespaces/ts")
+>Debug : typeof import("src/core/debug")
 >assert : (expression: unknown) => asserts expression
 >true : true
 
 Debug.assert(true);
 >Debug.assert(true) : void
 >Debug.assert : (expression: unknown) => asserts expression
->Debug : typeof ts.Debug
+>Debug : typeof import("src/core/debug")
 >assert : (expression: unknown) => asserts expression
 >true : true
 
