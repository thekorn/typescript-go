--- old.moduleAugmentationDoesNamespaceMergeOfReexport.symbols
+++ new.moduleAugmentationDoesNamespaceMergeOfReexport.symbols
@@= skipped -7, +7 lines =@@
 >Foo : Symbol(Foo, Decl(file.ts, 0, 23), Decl(augment.ts, 3, 27))
 
         x: number;
->x : Symbol(Foo.x, Decl(file.ts, 1, 26))
+>x : Symbol(x, Decl(file.ts, 1, 26))
     }
 }
 === reexport.ts ===
@@= skipped -11, +11 lines =@@
 >ns : Symbol(ns, Decl(augment.ts, 0, 6))
 
 declare module "./reexport" {
->"./reexport" : Symbol(ns, Decl(reexport.ts, 0, 0), Decl(augment.ts, 0, 33))
+>"./reexport" : Symbol("reexport", Decl(reexport.ts, 0, 0), Decl(augment.ts, 0, 33))
 
     export namespace Root {
 >Root : Symbol(Root, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
@@= skipped -9, +9 lines =@@
 >Foo : Symbol(Foo, Decl(file.ts, 0, 23), Decl(augment.ts, 3, 27))
 
             self: Foo;
->self : Symbol(Foo.self, Decl(augment.ts, 4, 30))
+>self : Symbol(self, Decl(augment.ts, 4, 30))
 >Foo : Symbol(Foo, Decl(file.ts, 0, 23), Decl(augment.ts, 3, 27))
         }
     }
@@= skipped -9, +9 lines =@@
 declare const f: ns.Root.Foo;
 >f : Symbol(f, Decl(augment.ts, 10, 13))
 >ns : Symbol(ns, Decl(augment.ts, 0, 6))
->Root : Symbol(ns.Root, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
->Foo : Symbol(ns.Root.Foo, Decl(file.ts, 0, 23), Decl(augment.ts, 3, 27))
+>Root : Symbol(Root, Decl(file.ts, 0, 0), Decl(augment.ts, 2, 29))
+>Foo : Symbol(Foo, Decl(file.ts, 0, 23), Decl(augment.ts, 3, 27))
 
 f.x;
->f.x : Symbol(ns.Root.Foo.x, Decl(file.ts, 1, 26))
+>f.x : Symbol(x, Decl(file.ts, 1, 26))
 >f : Symbol(f, Decl(augment.ts, 10, 13))
->x : Symbol(ns.Root.Foo.x, Decl(file.ts, 1, 26))
+>x : Symbol(x, Decl(file.ts, 1, 26))
 
 f.self;
->f.self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
+>f.self : Symbol(self, Decl(augment.ts, 4, 30))
 >f : Symbol(f, Decl(augment.ts, 10, 13))
->self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
+>self : Symbol(self, Decl(augment.ts, 4, 30))
 
 f.self.x;
->f.self.x : Symbol(ns.Root.Foo.x, Decl(file.ts, 1, 26))
->f.self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
+>f.self.x : Symbol(x, Decl(file.ts, 1, 26))
+>f.self : Symbol(self, Decl(augment.ts, 4, 30))
 >f : Symbol(f, Decl(augment.ts, 10, 13))
->self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
->x : Symbol(ns.Root.Foo.x, Decl(file.ts, 1, 26))
+>self : Symbol(self, Decl(augment.ts, 4, 30))
+>x : Symbol(x, Decl(file.ts, 1, 26))
 
 f.self.self;
->f.self.self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
->f.self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
+>f.self.self : Symbol(self, Decl(augment.ts, 4, 30))
+>f.self : Symbol(self, Decl(augment.ts, 4, 30))
 >f : Symbol(f, Decl(augment.ts, 10, 13))
->self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
->self : Symbol(ns.Root.Foo.self, Decl(augment.ts, 4, 30))
+>self : Symbol(self, Decl(augment.ts, 4, 30))
+>self : Symbol(self, Decl(augment.ts, 4, 30))
 
