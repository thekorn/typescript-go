--- old.recursiveLetConst.types
+++ new.recursiveLetConst.types
@@= skipped -53, +53 lines =@@
 >[] : []
 
 let z0 = () => z0;
->z0 : () => any
->() => z0 : () => any
->z0 : () => any
+>z0 : () => ???
+>() => z0 : () => ???
+>z0 : () => ???
 
 let z1 = function () { return z1; }
->z1 : () => any
->function () { return z1; } : () => any
->z1 : () => any
+>z1 : () => ???
+>function () { return z1; } : () => ???
+>z1 : () => ???
 
 let z2 = { f() { return z2;}}
->z2 : { f(): any; }
->{ f() { return z2;}} : { f(): { f(): any; }; }
->f : () => { f(): any; }
->z2 : { f(): any; }
+>z2 : { f: () => ???; }
+>{ f() { return z2;}} : { f: () => { f: ???; }; }
+>f : () => { f: ???; }
+>z2 : { f: () => ???; }
 
