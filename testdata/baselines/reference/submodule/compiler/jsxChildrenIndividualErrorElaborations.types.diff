--- old.jsxChildrenIndividualErrorElaborations.types
+++ new.jsxChildrenIndividualErrorElaborations.types
@@= skipped -11, +11 lines =@@
 }
 
 export function Blah(props: Props) {
->Blah : (props: Props) => JSX.Element
+>Blah : (props: Props) => Element
 >props : Props
 
   return <></>;
-><></> : JSX.Element
+><></> : Element
 }
 
 // Incompatible child.
 var a = <Blah>
->a : JSX.Element
-><Blah>  {x => x}</Blah> : JSX.Element
->Blah : (props: Props) => JSX.Element
+>a : Element
+><Blah>  {x => x}</Blah> : Element
+>Blah : (props: Props) => Element
 
   {x => x}
 >x => x : (x: number) => number
@@= skipped -19, +19 lines =@@
 >x : number
 
 </Blah>
->Blah : (props: Props) => JSX.Element
+>Blah : (props: Props) => Element
 
 // Blah components don't accept text as child elements
 var a = <Blah>
->a : JSX.Element
-><Blah>  Hello unexpected text!</Blah> : JSX.Element
->Blah : (props: Props) => JSX.Element
+>a : Element
+><Blah>  Hello unexpected text!</Blah> : Element
+>Blah : (props: Props) => Element
 
   Hello unexpected text!
 </Blah>
->Blah : (props: Props) => JSX.Element
+>Blah : (props: Props) => Element
 
 // Blah components don't accept multiple children.
 var a = <Blah>
->a : JSX.Element
-><Blah>  {x => "" + x}  {x => "" + x}</Blah> : JSX.Element
->Blah : (props: Props) => JSX.Element
+>a : Element
+><Blah>  {x => "" + x}  {x => "" + x}</Blah> : Element
+>Blah : (props: Props) => Element
 
   {x => "" + x}
 >x => "" + x : (x: number) => string
@@= skipped -33, +33 lines =@@
 >x : number
 
 </Blah>
->Blah : (props: Props) => JSX.Element
+>Blah : (props: Props) => Element
 
 interface PropsArr {
   children: ((x: number) => string)[];
@@= skipped -9, +9 lines =@@
 }
 
 export function Blah2(props: PropsArr) {
->Blah2 : (props: PropsArr) => JSX.Element
+>Blah2 : (props: PropsArr) => Element
 >props : PropsArr
 
   return <></>;
-><></> : JSX.Element
+><></> : Element
 }
 
 // Incompatible child.
 var a = <Blah2>
->a : JSX.Element
-><Blah2>  {x => x}</Blah2> : JSX.Element
->Blah2 : (props: PropsArr) => JSX.Element
+>a : Element
+><Blah2>  {x => x}</Blah2> : Element
+>Blah2 : (props: PropsArr) => Element
 
   {x => x}
 >x => x : (x: any) => any
@@= skipped -19, +19 lines =@@
 >x : any
 
 </Blah2>
->Blah2 : (props: PropsArr) => JSX.Element
+>Blah2 : (props: PropsArr) => Element
 
 // Blah2 components don't accept text as child elements
 var a = <Blah2>
->a : JSX.Element
-><Blah2>  Hello unexpected text!</Blah2> : JSX.Element
->Blah2 : (props: PropsArr) => JSX.Element
+>a : Element
+><Blah2>  Hello unexpected text!</Blah2> : Element
+>Blah2 : (props: PropsArr) => Element
 
   Hello unexpected text!
 </Blah2>
->Blah2 : (props: PropsArr) => JSX.Element
+>Blah2 : (props: PropsArr) => Element
 
 // Blah2 components don't accept multiple children of the wrong type.
 var a = <Blah2>
->a : JSX.Element
-><Blah2>  {x => x}  {x => x}</Blah2> : JSX.Element
->Blah2 : (props: PropsArr) => JSX.Element
+>a : Element
+><Blah2>  {x => x}  {x => x}</Blah2> : Element
+>Blah2 : (props: PropsArr) => Element
 
   {x => x}
 >x => x : (x: number) => number
@@= skipped -29, +29 lines =@@
 >x : number
 
 </Blah2>
->Blah2 : (props: PropsArr) => JSX.Element
+>Blah2 : (props: PropsArr) => Element
 
 type Cb = (x: number) => string;
 >Cb : Cb
@@= skipped -12, +12 lines =@@
 }
 
 export function Blah3(props: PropsMixed) {
->Blah3 : (props: PropsMixed) => JSX.Element
+>Blah3 : (props: PropsMixed) => Element
 >props : PropsMixed
 
   return <></>;
-><></> : JSX.Element
+><></> : Element
 }
 
 // Incompatible child.
 var a = <Blah3>
->a : JSX.Element
-><Blah3>  {x => x}</Blah3> : JSX.Element
->Blah3 : (props: PropsMixed) => JSX.Element
+>a : Element
+><Blah3>  {x => x}</Blah3> : Element
+>Blah3 : (props: PropsMixed) => Element
 
   {x => x}
 >x => x : (x: number) => number
@@= skipped -19, +19 lines =@@
 >x : number
 
 </Blah3>
->Blah3 : (props: PropsMixed) => JSX.Element
+>Blah3 : (props: PropsMixed) => Element
 
 // Blah3 components don't accept text as child elements
 var a = <Blah3>
->a : JSX.Element
-><Blah3>  Hello unexpected text!</Blah3> : JSX.Element
->Blah3 : (props: PropsMixed) => JSX.Element
+>a : Element
+><Blah3>  Hello unexpected text!</Blah3> : Element
+>Blah3 : (props: PropsMixed) => Element
 
   Hello unexpected text!
 </Blah3>
->Blah3 : (props: PropsMixed) => JSX.Element
+>Blah3 : (props: PropsMixed) => Element
 
 // Blah3 components don't accept multiple children of the wrong type.
 var a = <Blah3>
->a : JSX.Element
-><Blah3>  {x => x}  {x => x}</Blah3> : JSX.Element
->Blah3 : (props: PropsMixed) => JSX.Element
+>a : Element
+><Blah3>  {x => x}  {x => x}</Blah3> : Element
+>Blah3 : (props: PropsMixed) => Element
 
   {x => x}
 >x => x : (x: number) => number
@@= skipped -29, +29 lines =@@
 >x : number
 
 </Blah3>
->Blah3 : (props: PropsMixed) => JSX.Element
+>Blah3 : (props: PropsMixed) => Element
 
