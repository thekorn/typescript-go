//// [tests/cases/compiler/jsFileMethodOverloads.ts] ////

=== jsFileMethodOverloads.js ===
/**
 * @template T
 */
 class Example {
>Example : Example<T>

  /**
   * @param {T} value 
   */
  constructor(value) {
>value : T

    this.value = value;
>this.value = value : T
>this.value : any
>this : this
>value : any
>value : T
  }

  /**
   * @overload
   * @param {Example<number>} this
   * @returns {'number'}
   */
  /**
   * @overload
   * @param {Example<string>} this
   * @returns {'string'}
   */
  /**
   * @returns {string}
   */
  getTypeName() {
>getTypeName : () => string

    return typeof this.value;
>typeof this.value : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
>this.value : any
>this : this
>value : any
  }

  /**
   * @template U
   * @overload
   * @param {(y: T) => U} fn
   * @returns {U}
   */
  /**
   * @overload
   * @returns {T}
   */
  /**
   * @param {(y: T) => unknown} [fn]
   * @returns {unknown}
   */
  transform(fn) {
>transform : (fn?: (y: T) => unknown) => unknown
>fn : (y: T) => unknown

    return fn ? fn(this.value) : this.value;
>fn ? fn(this.value) : this.value : any
>fn : (y: T) => unknown
>fn(this.value) : unknown
>fn : (y: T) => unknown
>this.value : any
>this : this
>value : any
>this.value : any
>this : this
>value : any
  }
}

