--- old.typeGuardsOnClassProperty.types
+++ new.typeGuardsOnClassProperty.types
@@= skipped -59, +59 lines =@@
 }
 
 var o: {
->o : { prop1: number | string; prop2: boolean | string; }
+>o : { prop1: string | number; prop2: string | boolean; }
 
     prop1: number|string;
 >prop1 : string | number
@@= skipped -25, +25 lines =@@
 >typeof o.prop1 === "string" : boolean
 >typeof o.prop1 : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >o.prop1 : string | number
->o : { prop1: number | string; prop2: boolean | string; }
+>o : { prop1: string | number; prop2: string | boolean; }
 >prop1 : string | number
 >"string" : "string"
 >o.prop1.toLowerCase() : string
 >o.prop1.toLowerCase : () => string
 >o.prop1 : string
->o : { prop1: number | string; prop2: boolean | string; }
+>o : { prop1: string | number; prop2: string | boolean; }
 >prop1 : string
 >toLowerCase : () => string
 
 var prop1 = o.prop1;
 >prop1 : string | number
 >o.prop1 : string | number
->o : { prop1: number | string; prop2: boolean | string; }
+>o : { prop1: string | number; prop2: string | boolean; }
 >prop1 : string | number
 
 if (typeof prop1 === "string" && prop1.toLocaleLowerCase()) { }
