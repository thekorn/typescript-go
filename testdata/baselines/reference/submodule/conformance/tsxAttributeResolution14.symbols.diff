--- old.tsxAttributeResolution14.symbols
+++ new.tsxAttributeResolution14.symbols
@@= skipped -10, +10 lines =@@
 >IntrinsicElements : Symbol(IntrinsicElements, Decl(react.d.ts, 1, 22))
 
         div: any;
->div : Symbol(IntrinsicElements.div, Decl(react.d.ts, 2, 30))
+>div : Symbol(div, Decl(react.d.ts, 2, 30))
 	}
     interface ElementAttributesProperty { prop: any }
 >ElementAttributesProperty : Symbol(ElementAttributesProperty, Decl(react.d.ts, 4, 2))
->prop : Symbol(ElementAttributesProperty.prop, Decl(react.d.ts, 5, 41))
+>prop : Symbol(prop, Decl(react.d.ts, 5, 41))
 }
 
 === file.tsx ===
@@= skipped -12, +12 lines =@@
 >IProps : Symbol(IProps, Decl(file.tsx, 0, 0))
 
   primaryText: string,
->primaryText : Symbol(IProps.primaryText, Decl(file.tsx, 0, 18))
+>primaryText : Symbol(primaryText, Decl(file.tsx, 0, 18))
 
   [propName: string]: string | number
 >propName : Symbol(propName, Decl(file.tsx, 2, 3))
@@= skipped -12, +12 lines =@@
 >IProps : Symbol(IProps, Decl(file.tsx, 0, 0))
 
   return <div>props.primaryText</div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2, 30))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2, 30))
+>div : Symbol(div, Decl(react.d.ts, 2, 30))
+>div : Symbol(div, Decl(react.d.ts, 2, 30))
 }
 
 function VerticalNav() {
@@= skipped -9, +9 lines =@@
 
   return (
     <div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2, 30))
+>div : Symbol(div, Decl(react.d.ts, 2, 30))
 
       <VerticalNavMenuItem primaryText={2} />  // error
 >VerticalNavMenuItem : Symbol(VerticalNavMenuItem, Decl(file.tsx, 3, 1))
@@= skipped -17, +17 lines =@@
 >primaryText : Symbol(primaryText, Decl(file.tsx, 14, 49))
 
     </div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2, 30))
+>div : Symbol(div, Decl(react.d.ts, 2, 30))
 
   )
 } 
