//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsImportAliasExposedWithinNamespaceCjs.ts] ////

=== file2.js ===
const {myTypes} = require('./file.js');
>myTypes : Symbol(myTypes, Decl(file2.js, 0, 7))

/**
 * @namespace testFnTypes
 * @global
 * @type {Object<string,*>}
 */
const testFnTypes = {
>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 4))

    // SOME PROPS HERE
};

/** @typedef {boolean|myTypes.typeC} testFnTypes.input */

/**
 * @function testFn
 * @description A test function.
 * @param {testFnTypes.input} input - Input.
 * @returns {number|null} Result.
 */
function testFn(input) {
>testFn : Symbol(testFn, Decl(file2.js, 9, 2))
>input : Symbol(input, Decl(file2.js, 19, 16))

    if (typeof input === 'number') {
>input : Symbol(input, Decl(file2.js, 19, 16))

        return 2 * input;
>input : Symbol(input, Decl(file2.js, 19, 16))

    } else {
        return null;
    }
}

module.exports = {testFn, testFnTypes};
>testFn : Symbol(testFn, Decl(file2.js, 27, 18))
>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 27, 25))

