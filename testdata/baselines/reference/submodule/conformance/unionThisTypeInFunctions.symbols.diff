--- old.unionThisTypeInFunctions.symbols
+++ new.unionThisTypeInFunctions.symbols
@@= skipped -4, +4 lines =@@
 >Real : Symbol(Real, Decl(unionThisTypeInFunctions.ts, 0, 0))
 
     method(this: this, n: number): void;
->method : Symbol(Real.method, Decl(unionThisTypeInFunctions.ts, 0, 16))
+>method : Symbol(method, Decl(unionThisTypeInFunctions.ts, 0, 16))
 >this : Symbol(this, Decl(unionThisTypeInFunctions.ts, 1, 11))
 >n : Symbol(n, Decl(unionThisTypeInFunctions.ts, 1, 22))
 
     data: string;
->data : Symbol(Real.data, Decl(unionThisTypeInFunctions.ts, 1, 40))
+>data : Symbol(data, Decl(unionThisTypeInFunctions.ts, 1, 40))
 }
 interface Fake {
 >Fake : Symbol(Fake, Decl(unionThisTypeInFunctions.ts, 3, 1))
 
     method(this: this, n: number): void;
->method : Symbol(Fake.method, Decl(unionThisTypeInFunctions.ts, 4, 16))
+>method : Symbol(method, Decl(unionThisTypeInFunctions.ts, 4, 16))
 >this : Symbol(this, Decl(unionThisTypeInFunctions.ts, 5, 11))
 >n : Symbol(n, Decl(unionThisTypeInFunctions.ts, 5, 22))
 
     data: number;
->data : Symbol(Fake.data, Decl(unionThisTypeInFunctions.ts, 5, 40))
+>data : Symbol(data, Decl(unionThisTypeInFunctions.ts, 5, 40))
 }
 function test(r: Real | Fake) {
 >test : Symbol(test, Decl(unionThisTypeInFunctions.ts, 7, 1))
