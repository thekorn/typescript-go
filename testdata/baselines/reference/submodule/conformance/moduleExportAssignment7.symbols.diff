--- old.moduleExportAssignment7.symbols
+++ new.moduleExportAssignment7.symbols
@@= skipped -2, +2 lines =@@
 === mod.js ===
 class Thing  { x = 1 }
 >Thing : Symbol(Thing, Decl(mod.js, 0, 0))
->x : Symbol(Thing.x, Decl(mod.js, 0, 14))
+>x : Symbol(x, Decl(mod.js, 0, 14))
 
 class AnotherThing { y = 2  }
 >AnotherThing : Symbol(AnotherThing, Decl(mod.js, 0, 22))
->y : Symbol(AnotherThing.y, Decl(mod.js, 1, 20))
+>y : Symbol(y, Decl(mod.js, 1, 20))
 
 function foo() { return 3 }
 >foo : Symbol(foo, Decl(mod.js, 1, 29))
@@= skipped -14, +14 lines =@@
 
 /** @typedef {() => number} buz */
 module.exports = {
->module.exports : Symbol(module.exports, Decl(mod.js, 0, 0))
->module : Symbol(export=, Decl(mod.js, 3, 27))
->exports : Symbol(export=, Decl(mod.js, 3, 27))
-
     Thing,
 >Thing : Symbol(Thing, Decl(mod.js, 5, 18))
 
@@= skipped -44, +40 lines =@@
 >g : Symbol(g, Decl(main.js, 9, 34))
 
     return a.x + b.y + c() + d() + e() + f() + g.length
->a.x : Symbol(Thing.x, Decl(mod.js, 0, 14))
 >a : Symbol(a, Decl(main.js, 9, 17))
->x : Symbol(Thing.x, Decl(mod.js, 0, 14))
->b.y : Symbol(AnotherThing.y, Decl(mod.js, 1, 20))
 >b : Symbol(b, Decl(main.js, 9, 19))
->y : Symbol(AnotherThing.y, Decl(mod.js, 1, 20))
 >c : Symbol(c, Decl(main.js, 9, 22))
 >d : Symbol(d, Decl(main.js, 9, 25))
 >e : Symbol(e, Decl(main.js, 9, 28))
 >f : Symbol(f, Decl(main.js, 9, 31))
->g.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 >g : Symbol(g, Decl(main.js, 9, 34))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 }
 
 /**
@@= skipped -35, +29 lines =@@
 >g : Symbol(g, Decl(main.js, 22, 35))
 
     return a.length + b.length + c() + d() + e() + f() + g.length
->a.length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >a : Symbol(a, Decl(main.js, 22, 18))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
->b.length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >b : Symbol(b, Decl(main.js, 22, 20))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >c : Symbol(c, Decl(main.js, 22, 23))
 >d : Symbol(d, Decl(main.js, 22, 26))
 >e : Symbol(e, Decl(main.js, 22, 29))
 >f : Symbol(f, Decl(main.js, 22, 32))
->g.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 >g : Symbol(g, Decl(main.js, 22, 35))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 }
 
 === index.ts ===
@@= skipped -57, +51 lines =@@
 
     a: typeof import('./mod').Thing,
 >a : Symbol(a, Decl(index.ts, 12, 16))
->Thing : Symbol(Thing, Decl(mod.js, 5, 18))
 
     b: typeof import('./mod').AnotherThing,
 >b : Symbol(b, Decl(index.ts, 13, 36))
->AnotherThing : Symbol(AnotherThing, Decl(mod.js, 6, 10))
 
     c: typeof import('./mod').foo,
 >c : Symbol(c, Decl(index.ts, 14, 43))
->foo : Symbol(foo, Decl(mod.js, 7, 17))
 
     d: typeof import('./mod').qux,
 >d : Symbol(d, Decl(index.ts, 15, 34))
->qux : Symbol(qux, Decl(mod.js, 8, 8))
 
     e: typeof import('./mod').baz,
 >e : Symbol(e, Decl(index.ts, 16, 34))
->baz : Symbol(baz, Decl(mod.js, 9, 13))
 
     f: typeof import('./mod').buz,
 >f : Symbol(f, Decl(index.ts, 17, 34))
 
     g: typeof import('./mod').literal,
 >g : Symbol(g, Decl(index.ts, 18, 34))
->literal : Symbol(literal, Decl(mod.js, 10, 23))
 
 ) {
     return a.length + b.length + c() + d() + e() + f() + g.length
->a.length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >a : Symbol(a, Decl(index.ts, 12, 16))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
->b.length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >b : Symbol(b, Decl(index.ts, 13, 36))
->length : Symbol(Function.length, Decl(lib.es5.d.ts, --, --))
 >c : Symbol(c, Decl(index.ts, 14, 43))
 >d : Symbol(d, Decl(index.ts, 15, 34))
 >e : Symbol(e, Decl(index.ts, 16, 34))
 >f : Symbol(f, Decl(index.ts, 17, 34))
->g.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 >g : Symbol(g, Decl(index.ts, 18, 34))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
 }
 
