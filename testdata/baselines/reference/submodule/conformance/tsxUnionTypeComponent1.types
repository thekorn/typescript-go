//// [tests/cases/conformance/jsx/tsxUnionTypeComponent1.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof __React

interface ComponentProps {
    AnyComponent: React.StatelessComponent<any> | React.ComponentClass<any>;
>AnyComponent : ComponentClass<any> | StatelessComponent<any>
>React : any
>React : any
}

class MyComponent extends React.Component<ComponentProps, {}> {
>MyComponent : MyComponent
>React.Component : Component<ComponentProps, {}>
>React : typeof __React
>Component : typeof Component

    render() {
>render : () => Element

        const { AnyComponent } = this.props;
>AnyComponent : ComponentClass<any> | StatelessComponent<any>
>this.props : ComponentProps & { children?: ReactNode; }
>this : this
>props : ComponentProps & { children?: ReactNode; }

        return (<AnyComponent />);
>(<AnyComponent />) : Element
><AnyComponent /> : Element
>AnyComponent : ComponentClass<any> | StatelessComponent<any>
    }
}

// Stateless Component As Props
<MyComponent AnyComponent={() => <button>test</button>}/>
><MyComponent AnyComponent={() => <button>test</button>}/> : Element
>MyComponent : typeof MyComponent
>AnyComponent : () => Element
>() => <button>test</button> : () => Element
><button>test</button> : Element
>button : any
>button : any

// Component Class as Props
class MyButtonComponent extends React.Component<{},{}> {
>MyButtonComponent : MyButtonComponent
>React.Component : Component<{}, {}>
>React : typeof __React
>Component : typeof Component
}

<MyComponent AnyComponent={MyButtonComponent} />
><MyComponent AnyComponent={MyButtonComponent} /> : Element
>MyComponent : typeof MyComponent
>AnyComponent : typeof MyButtonComponent
>MyButtonComponent : typeof MyButtonComponent


