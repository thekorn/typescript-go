//// [tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsToLiteralTypeUnion.ts] ////

=== typeGuardNarrowsToLiteralTypeUnion.ts ===
declare function isFoo(value: string) : value is ("foo" | "bar");
>isFoo : (value: string) => value is "bar" | "foo"
>value : string

declare function doThis(value: "foo" | "bar"): void;
>doThis : (value: "bar" | "foo") => void
>value : "bar" | "foo"

declare function doThat(value: string) : void;
>doThat : (value: string) => void
>value : string

let value: string;
>value : string

if (isFoo(value)) {
>isFoo(value) : boolean
>isFoo : (value: string) => value is "bar" | "foo"
>value : string

    doThis(value);
>doThis(value) : void
>doThis : (value: "bar" | "foo") => void
>value : "bar" | "foo"

} else {
    doThat(value);
>doThat(value) : void
>doThat : (value: string) => void
>value : string
}


