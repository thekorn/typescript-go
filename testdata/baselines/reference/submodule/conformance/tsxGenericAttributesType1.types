//// [tests/cases/conformance/jsx/tsxGenericAttributesType1.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof __React

const decorator = function <T>(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {
>decorator : <T>(Component: StatelessComponent<T>) => StatelessComponent<T>
>function <T>(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {    return (props) => <Component {...props}></Component>} : <T>(Component: StatelessComponent<T>) => StatelessComponent<T>
>Component : StatelessComponent<T>
>React : any
>React : any

    return (props) => <Component {...props}></Component>
>(props) => <Component {...props}></Component> : (props: T & { children?: ReactNode; }) => any
>props : T & { children?: ReactNode; }
><Component {...props}></Component> : any
>Component : StatelessComponent<T>
>props : T & { children?: ReactNode; }
>Component : StatelessComponent<T>

};

const decorator2 = function <T extends { x: number }>(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {
>decorator2 : <T extends { x: number; }>(Component: StatelessComponent<T>) => StatelessComponent<T>
>function <T extends { x: number }>(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {    return (props) => <Component {...props} x={2} ></Component>} : <T extends { x: number; }>(Component: StatelessComponent<T>) => StatelessComponent<T>
>x : number
>Component : StatelessComponent<T>
>React : any
>React : any

    return (props) => <Component {...props} x={2} ></Component>
>(props) => <Component {...props} x={2} ></Component> : (props: T & { children?: ReactNode; }) => any
>props : T & { children?: ReactNode; }
><Component {...props} x={2} ></Component> : any
>Component : StatelessComponent<T>
>props : T & { children?: ReactNode; }
>x : any
>2 : 2
>Component : StatelessComponent<T>

};

const decorator3 = function <T extends { x: number }, U extends { x: number } >(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {
>decorator3 : <T extends { x: number; }, U extends { x: number; }>(Component: StatelessComponent<T>) => StatelessComponent<T>
>function <T extends { x: number }, U extends { x: number } >(Component: React.StatelessComponent<T>): React.StatelessComponent<T> {    return (props) => <Component x={2} {...props} ></Component>} : <T extends { x: number; }, U extends { x: number; }>(Component: StatelessComponent<T>) => StatelessComponent<T>
>x : number
>x : number
>Component : StatelessComponent<T>
>React : any
>React : any

    return (props) => <Component x={2} {...props} ></Component>
>(props) => <Component x={2} {...props} ></Component> : (props: T & { children?: ReactNode; }) => any
>props : T & { children?: ReactNode; }
><Component x={2} {...props} ></Component> : any
>Component : StatelessComponent<T>
>x : any
>2 : 2
>props : T & { children?: ReactNode; }
>Component : StatelessComponent<T>

};
