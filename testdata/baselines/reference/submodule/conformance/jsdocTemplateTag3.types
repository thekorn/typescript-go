//// [tests/cases/conformance/jsdoc/jsdocTemplateTag3.ts] ////

=== a.js ===
/**
 * @template {{ a: number, b: string }} T,U A Comment
 * @template {{ c: boolean }} V uh ... are comments even supported??
 * @template W
 * @template X That last one had no comment
 * @param {T} t
 * @param {U} u
 * @param {V} v
 * @param {W} w
 * @param {X} x
 * @return {W | X}
 */
function f(t, u, v, w, x) {
>f : (t: any, u: any, v: any, w: any, x: any) => any
>t : any
>u : any
>v : any
>w : any
>x : any

    if(t.a + t.b.length > u.a - u.b.length && v.c) {
>t.a + t.b.length > u.a - u.b.length && v.c : any
>t.a + t.b.length > u.a - u.b.length : boolean
>t.a + t.b.length : any
>t.a : any
>t : any
>a : any
>t.b.length : any
>t.b : any
>t : any
>b : any
>length : any
>u.a - u.b.length : number
>u.a : any
>u : any
>a : any
>u.b.length : any
>u.b : any
>u : any
>b : any
>length : any
>v.c : any
>v : any
>c : any

        return w;
>w : any
    }
    return x;
>x : any
}

f({ a: 12, b: 'hi', c: null }, undefined, { c: false, d: 12, b: undefined }, 101, 'nope');
>f({ a: 12, b: 'hi', c: null }, undefined, { c: false, d: 12, b: undefined }, 101, 'nope') : any
>f : (t: any, u: any, v: any, w: any, x: any) => any
>{ a: 12, b: 'hi', c: null } : { a: number; b: string; c: null; }
>a : number
>12 : 12
>b : string
>'hi' : "hi"
>c : null
>undefined : undefined
>{ c: false, d: 12, b: undefined } : { c: boolean; d: number; b: undefined; }
>c : boolean
>false : false
>d : number
>12 : 12
>b : undefined
>undefined : undefined
>101 : 101
>'nope' : "nope"

f({ a: 12  }, undefined, undefined, 101, 'nope');
>f({ a: 12  }, undefined, undefined, 101, 'nope') : any
>f : (t: any, u: any, v: any, w: any, x: any) => any
>{ a: 12  } : { a: number; }
>a : number
>12 : 12
>undefined : undefined
>undefined : undefined
>101 : 101
>'nope' : "nope"

/**
 * @template {NoLongerAllowed}
 * @template T preceding line's syntax is no longer allowed
 * @param {T} x
 */
function g(x) { }
>g : (x: any) => void
>x : any


