//// [tests/cases/conformance/jsx/jsxs/jsxJsxsCjsTransformNestedSelfClosingChild.tsx] ////

=== jsxJsxsCjsTransformNestedSelfClosingChild.tsx ===
/// <reference path="react16.d.ts" />
import type * as React from 'react';
>React : typeof React

console.log(
>console.log(  <div>    <div />  </div>) : void
>console.log : (...data: any[]) => void
>console : Console
>log : (...data: any[]) => void

  <div>
><div>    <div />  </div> : Element
>div : any

    <div />
><div /> : Element
>div : any

  </div>
>div : any

)

console.log(
>console.log(  <div>    <div />    <div />  </div>) : void
>console.log : (...data: any[]) => void
>console : Console
>log : (...data: any[]) => void

  <div>
><div>    <div />    <div />  </div> : Element
>div : any

    <div />
><div /> : Element
>div : any

    <div />
><div /> : Element
>div : any

  </div>
>div : any

)

console.log(
>console.log(  <div>    {[1, 2].map(i => <div key={i}>{i}</div>)}  </div>) : void
>console.log : (...data: any[]) => void
>console : Console
>log : (...data: any[]) => void

  <div>
><div>    {[1, 2].map(i => <div key={i}>{i}</div>)}  </div> : Element
>div : any

    {[1, 2].map(i => <div key={i}>{i}</div>)}
>[1, 2].map(i => <div key={i}>{i}</div>) : Element[]
>[1, 2].map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]
>[1, 2] : number[]
>1 : 1
>2 : 2
>map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]
>i => <div key={i}>{i}</div> : (i: number) => Element
>i : number
><div key={i}>{i}</div> : Element
>div : any
>key : number
>i : number
>i : number
>div : any

  </div>
>div : any

)
