--- old.privateNamesUnique-2.types
+++ new.privateNamesUnique-2.types
@@= skipped -7, +7 lines =@@
 >#x : any
 
     copy(other: import("./b").Foo) {
->copy : (other: import("./b").Foo) => void
->other : import("b").Foo
+>copy : (other: Foo) => void
+>other : Foo
 
         other.#x; // error
 >other.#x : any
->other : import("b").Foo
+>other : Foo
     }
 }
     
@@= skipped -19, +19 lines =@@
 
 === main.ts ===
 import { Foo as A } from "./a";
->Foo : typeof A
->A : typeof A
+>Foo : typeof Foo
+>A : typeof Foo
 
 import { Foo as B } from "./b";
->Foo : typeof B
->B : typeof B
+>Foo : typeof Foo
+>B : typeof Foo
 
 const a = new A();
->a : A
->new A() : A
->A : typeof A
+>a : Foo
+>new A() : Foo
+>A : typeof Foo
 
 const b = new B();
->b : B
->new B() : B
->B : typeof B
+>b : Foo
+>new B() : Foo
+>B : typeof Foo
 
 a.copy(b); // error
 >a.copy(b) : void
->a.copy : (other: import("b").Foo) => void
->a : A
->copy : (other: import("b").Foo) => void
->b : B
+>a.copy : (other: Foo) => void
+>a : Foo
+>copy : (other: Foo) => void
+>b : Foo
 
