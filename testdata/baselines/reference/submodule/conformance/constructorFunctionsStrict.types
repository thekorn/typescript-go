//// [tests/cases/conformance/salsa/constructorFunctionsStrict.ts] ////

=== a.js ===
/** @param {number} x */
function C(x) {
>C : (x: any) => void
>x : any

    this.x = x
>this.x = x : any
>this.x : any
>this : any
>x : any
>x : any
}
C.prototype.m = function() {
>C.prototype.m = function() {    this.y = 12} : () => void
>C.prototype.m : any
>C.prototype : any
>C : (x: any) => void
>prototype : any
>m : any
>function() {    this.y = 12} : () => void

    this.y = 12
>this.y = 12 : 12
>this.y : any
>this : any
>y : any
>12 : 12
}
var c = new C(1)
>c : any
>new C(1) : any
>C : (x: any) => void
>1 : 1

c.x = undefined // should error
>c.x = undefined : undefined
>c.x : any
>c : any
>x : any
>undefined : undefined

c.y = undefined // ok
>c.y = undefined : undefined
>c.y : any
>c : any
>y : any
>undefined : undefined

/** @param {number} x */
function A(x) {
>A : (x: any) => any
>x : any

    if (!(this instanceof A)) {
>!(this instanceof A) : boolean
>(this instanceof A) : boolean
>this instanceof A : boolean
>this : any
>A : (x: any) => any

        return new A(x)
>new A(x) : any
>A : (x: any) => any
>x : any
    }
    this.x = x
>this.x = x : any
>this.x : any
>this : any
>x : any
>x : any
}
var k = A(1)
>k : any
>A(1) : any
>A : (x: any) => any
>1 : 1

var j = new A(2)
>j : any
>new A(2) : any
>A : (x: any) => any
>2 : 2

k.x === j.x
>k.x === j.x : boolean
>k.x : any
>k : any
>x : any
>j.x : any
>j : any
>x : any

