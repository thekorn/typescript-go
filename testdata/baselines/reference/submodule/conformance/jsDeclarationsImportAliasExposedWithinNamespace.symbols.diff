--- old.jsDeclarationsImportAliasExposedWithinNamespace.symbols
+++ new.jsDeclarationsImportAliasExposedWithinNamespace.symbols
@@= skipped -6, +6 lines =@@
  * @type {Object<string,*>}
  */
 const myTypes = {
->myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>myTypes : Symbol(myTypes, Decl(file.js, 5, 5), Decl(file.js, 9, 4), Decl(file.js, 12, 3), Decl(file.js, 17, 4))
 
     // SOME PROPS HERE
 };
@@= skipped -16, +16 lines =@@
 /** @typedef {myTypes.typeB|Function} myTypes.typeC */
 
 export {myTypes};
->myTypes : Symbol(myTypes, Decl(file.js, 19, 8), Decl(file.js, 9, 50), Decl(file.js, 12, 12), Decl(file.js, 17, 38))
+>myTypes : Symbol(myTypes, Decl(file.js, 9, 4), Decl(file.js, 19, 8))
 
 === file2.js ===
 import {myTypes} from './file.js';
@@= skipped -12, +12 lines =@@
  * @type {Object<string,*>}
  */
 const testFnTypes = {
->testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 37))
+>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 7, 5), Decl(file2.js, 11, 4))
 
     // SOME PROPS HERE
 };
@@= skipped -30, +30 lines =@@
 
 export {testFn, testFnTypes};
 >testFn : Symbol(testFn, Decl(file2.js, 27, 8))
->testFnTypes : Symbol(testFnTypes, Decl(file2.js, 27, 15), Decl(file2.js, 11, 37))
+>testFnTypes : Symbol(testFnTypes, Decl(file2.js, 11, 4), Decl(file2.js, 27, 15))
 
