--- old.tsxStatelessFunctionComponentWithDefaultTypeParameter1.types
+++ new.tsxStatelessFunctionComponentWithDefaultTypeParameter1.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react')
->React : typeof React
+>React : typeof __React
 
 interface MyComponentProp {
     values: string;
@@= skipped -8, +8 lines =@@
 }
 
 function MyComponent<T = MyComponentProp>(attr: T) {
->MyComponent : <T = MyComponentProp>(attr: T) => JSX.Element
+>MyComponent : <T>(attr: T) => Element
 >attr : T
 
     return <div>attr.values</div>
-><div>attr.values</div> : JSX.Element
+><div>attr.values</div> : Element
 >div : any
 >div : any
 }
 
 // OK
 let i = <MyComponent values />;  // We infer type arguments here
->i : JSX.Element
-><MyComponent values /> : JSX.Element
->MyComponent : <T = MyComponentProp>(attr: T) => JSX.Element
+>i : Element
+><MyComponent values /> : Element
+>MyComponent : <T>(attr: T) => Element
 >values : true
 
 let i1 = <MyComponent values="Hello"/>;
->i1 : JSX.Element
-><MyComponent values="Hello"/> : JSX.Element
->MyComponent : <T = MyComponentProp>(attr: T) => JSX.Element
+>i1 : Element
+><MyComponent values="Hello"/> : Element
+>MyComponent : <T>(attr: T) => Element
 >values : string
 
