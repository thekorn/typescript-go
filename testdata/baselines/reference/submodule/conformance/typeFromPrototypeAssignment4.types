//// [tests/cases/conformance/salsa/typeFromPrototypeAssignment4.ts] ////

=== a.js ===
function Multimap4() {
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }

  this._map = {};
>this._map = {} : {}
>this._map : any
>this : any
>_map : any
>{} : {}

};

Multimap4["prototype"] = {
>Multimap4["prototype"] = {  /**   * @param {string} key   * @returns {number} the value ok   */  get(key) {    return this._map[key + ''];  }} : { get: (key: any) => any; }
>Multimap4["prototype"] : { get: (key: any) => any; }
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }
>"prototype" : "prototype"
>{  /**   * @param {string} key   * @returns {number} the value ok   */  get(key) {    return this._map[key + ''];  }} : { get: (key: any) => any; }

  /**
   * @param {string} key
   * @returns {number} the value ok
   */
  get(key) {
>get : (key: any) => any
>key : any

    return this._map[key + ''];
>this._map[key + ''] : any
>this._map : any
>this : any
>_map : any
>key + '' : string
>key : any
>'' : ""
  }
};

Multimap4["prototype"]["add-on"] = function() {};
>Multimap4["prototype"]["add-on"] = function() {} : () => void
>Multimap4["prototype"]["add-on"] : any
>Multimap4["prototype"] : { get: (key: any) => any; }
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }
>"prototype" : "prototype"
>"add-on" : "add-on"
>function() {} : () => void

Multimap4["prototype"]["addon"] = function() {};
>Multimap4["prototype"]["addon"] = function() {} : () => void
>Multimap4["prototype"]["addon"] : any
>Multimap4["prototype"] : { get: (key: any) => any; }
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }
>"prototype" : "prototype"
>"addon" : "addon"
>function() {} : () => void

Multimap4["prototype"]["__underscores__"] = function() {};
>Multimap4["prototype"]["__underscores__"] = function() {} : () => void
>Multimap4["prototype"]["__underscores__"] : any
>Multimap4["prototype"] : { get: (key: any) => any; }
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }
>"prototype" : "prototype"
>"__underscores__" : "__underscores__"
>function() {} : () => void

const map4 = new Multimap4();
>map4 : any
>new Multimap4() : any
>Multimap4 : { (): void; prototype: { get: (key: any) => any; }; }

map4.get("");
>map4.get("") : any
>map4.get : any
>map4 : any
>get : any
>"" : ""

map4["add-on"]();
>map4["add-on"]() : any
>map4["add-on"] : any
>map4 : any
>"add-on" : "add-on"

map4.addon();
>map4.addon() : any
>map4.addon : any
>map4 : any
>addon : any

map4.__underscores__();
>map4.__underscores__() : any
>map4.__underscores__ : any
>map4 : any
>__underscores__ : any

