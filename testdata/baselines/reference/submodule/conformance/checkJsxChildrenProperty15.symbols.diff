--- old.checkJsxChildrenProperty15.symbols
+++ new.checkJsxChildrenProperty15.symbols
@@= skipped -6, +6 lines =@@
 const Tag = (x: {}) => <div></div>;
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 >x : Symbol(x, Decl(file.tsx, 2, 13))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 
 // OK
 const k1 = <Tag />;
@@= skipped -18, +18 lines =@@
 >k3 : Symbol(k3, Decl(file.tsx, 9, 5))
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 >children : Symbol(children, Decl(file.tsx, 9, 15))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 
 const k4 = <Tag key="1"><div></div></Tag>;
 >k4 : Symbol(k4, Decl(file.tsx, 10, 5))
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 >key : Symbol(key, Decl(file.tsx, 10, 15))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 
 const k5 = <Tag key="1"><div></div><div></div></Tag>;
 >k5 : Symbol(k5, Decl(file.tsx, 11, 5))
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 >key : Symbol(key, Decl(file.tsx, 11, 15))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 >Tag : Symbol(Tag, Decl(file.tsx, 2, 5))
 
