--- old.objectLiteralErrors.types
+++ new.objectLiteralErrors.types
@@= skipped -82, +82 lines =@@
 >0 : 0
 
 var e11 = { 1.0: 0, '1': 0 };
->e11 : { 1: number; }
->{ 1.0: 0, '1': 0 } : { 1: number; }
+>e11 : { 1.0: number; }
+>{ 1.0: 0, '1': 0 } : { 1.0: number; }
 >1.0 : number
 >0 : 0
 >'1' : number
@@= skipped -40, +40 lines =@@
 >0 : 0
 
 var e15 = { "100": 0, 1e2: 0 };
->e15 : { 100: number; }
->{ "100": 0, 1e2: 0 } : { 100: number; }
+>e15 : { "100": number; }
+>{ "100": 0, 1e2: 0 } : { "100": number; }
 >"100" : number
 >0 : 0
 >1e2 : number
 >0 : 0
 
 var e16 = { 0x20: 0, 3.2e1: 0 };
->e16 : { 32: number; }
->{ 0x20: 0, 3.2e1: 0 } : { 32: number; }
+>e16 : { 0x20: number; }
+>{ 0x20: 0, 3.2e1: 0 } : { 0x20: number; }
 >0x20 : number
 >0 : 0
 >3.2e1 : number
@@= skipped -131, +131 lines =@@
 >0 : 0
 
 var f14 = { 0: 0, get 0x0() { return 0; } };
->f14 : { readonly 0: number; }
->{ 0: 0, get 0x0() { return 0; } } : { readonly 0: number; }
+>f14 : { readonly 0x0: number; }
+>{ 0: 0, get 0x0() { return 0; } } : { readonly 0x0: number; }
 >0 : number
 >0 : 0
 >0x0 : number
 >0 : 0
 
 var f14 = { 0: 0, get 0o0() { return 0; } };
->f14 : { readonly 0: number; }
->{ 0: 0, get 0o0() { return 0; } } : { readonly 0: number; }
+>f14 : { readonly 0x0: number; }
+>{ 0: 0, get 0o0() { return 0; } } : { readonly 0o0: number; }
 >0 : number
 >0 : 0
 >0o0 : number
 >0 : 0
 
 var f15 = { "100": 0, get 1e2() { return 0; } };
->f15 : { readonly 100: number; }
->{ "100": 0, get 1e2() { return 0; } } : { readonly 100: number; }
+>f15 : { readonly 1e2: number; }
+>{ "100": 0, get 1e2() { return 0; } } : { readonly 1e2: number; }
 >"100" : number
 >0 : 0
 >1e2 : number
 >0 : 0
 
 var f16 = { 0x20: 0, get 3.2e1() { return 0; } };
->f16 : { readonly 32: number; }
->{ 0x20: 0, get 3.2e1() { return 0; } } : { readonly 32: number; }
+>f16 : { readonly 3.2e1: number; }
+>{ 0x20: 0, get 3.2e1() { return 0; } } : { readonly 3.2e1: number; }
 >0x20 : number
 >0 : 0
 >3.2e1 : number
@@= skipped -43, +43 lines =@@
 
 // Get and set accessor with mismatched type annotations (only g2 is an error after #43662 implemented)
 var g1 = { get a(): number { return 4; }, set a(n: string) { } };
->g1 : { get a(): number; set a(n: string); }
->{ get a(): number { return 4; }, set a(n: string) { } } : { get a(): number; set a(n: string); }
+>g1 : { a: number; }
+>{ get a(): number { return 4; }, set a(n: string) { } } : { a: number; }
 >a : number
 >4 : 4
 >a : number
@@= skipped -16, +16 lines =@@
 >n : string
 
 var g3 = { get a(): number { return undefined; }, set a(n: string) { } };
->g3 : { get a(): number; set a(n: string); }
->{ get a(): number { return undefined; }, set a(n: string) { } } : { get a(): number; set a(n: string); }
+>g3 : { a: number; }
+>{ get a(): number { return undefined; }, set a(n: string) { } } : { a: number; }
 >a : number
 >undefined : undefined
 >a : number
