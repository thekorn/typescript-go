//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsTypedefAndLatebound.ts] ////

=== index.js ===
const LazySet = require("./LazySet");
>LazySet : any
>require("./LazySet") : any
>require : any
>"./LazySet" : "./LazySet"

/** @type {LazySet} */
const stringSet = undefined;
>stringSet : LazySet
>undefined : undefined

stringSet.addAll(stringSet);
>stringSet.addAll(stringSet) : any
>stringSet.addAll : any
>stringSet : LazySet
>addAll : any
>stringSet : LazySet


=== LazySet.js ===
// Comment out this JSDoc, and note that the errors index.js go away.
/**
 * @typedef {Object} SomeObject
 */
class LazySet {
>LazySet : LazySet

    /**
     * @param {LazySet} iterable
     */
    addAll(iterable) {}
>addAll : (iterable: LazySet) => void
>iterable : LazySet

    [Symbol.iterator]() {}
>[Symbol.iterator] : () => void
>Symbol.iterator : unique symbol
>Symbol : SymbolConstructor
>iterator : unique symbol
}

module.exports = LazySet;
>module.exports = LazySet : typeof LazySet
>module.exports : any
>module : any
>exports : any
>LazySet : typeof LazySet

