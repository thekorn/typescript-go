//// [tests/cases/conformance/jsx/checkJsxChildrenProperty6.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof __React

interface Prop {
    a: number,
>a : number

    b: string,
>b : string

    children: JSX.Element | JSX.Element[];
>children : Element[] | Element
>JSX : any
>JSX : any
}

class Button extends React.Component<any, any> {
>Button : Button
>React.Component : Component<any, any>
>React : typeof __React
>Component : typeof Component

    render() {
>render : () => Element

        return (<div>My Button</div>)
>(<div>My Button</div>) : Element
><div>My Button</div> : Element
>div : any
>div : any
    }
}

function AnotherButton(p: any) {
>AnotherButton : (p: any) => Element
>p : any

    return <h1>Just Another Button</h1>;
><h1>Just Another Button</h1> : Element
>h1 : any
>h1 : any
}

function Comp(p: Prop) {
>Comp : (p: Prop) => Element
>p : Prop

    return <div>{p.b}</div>;
><div>{p.b}</div> : Element
>div : any
>p.b : string
>p : Prop
>b : string
>div : any
}

// Ok
let k1 =
>k1 : Element

    <Comp a={10} b="hi">
><Comp a={10} b="hi">        <Button />        <AnotherButton />    </Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string

        <Button />
><Button /> : Element
>Button : typeof Button

        <AnotherButton />
><AnotherButton /> : Element
>AnotherButton : (p: any) => Element

    </Comp>;
>Comp : (p: Prop) => Element

let k2 =
>k2 : Element

    <Comp a={10} b="hi">
><Comp a={10} b="hi">                     <Button />        <AnotherButton />    </Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string
     
    
    
        <Button />
><Button /> : Element
>Button : typeof Button

        <AnotherButton />
><AnotherButton /> : Element
>AnotherButton : (p: any) => Element

    </Comp>;
>Comp : (p: Prop) => Element

let k3 = <Comp a={10} b="hi"><Button />  
>k3 : Element
><Comp a={10} b="hi"><Button />  <AnotherButton /></Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string
><Button /> : Element
>Button : typeof Button

<AnotherButton />
><AnotherButton /> : Element
>AnotherButton : (p: any) => Element

</Comp>;
>Comp : (p: Prop) => Element

let k4 = <Comp a={10} b="hi"><Button /></Comp>;
>k4 : Element
><Comp a={10} b="hi"><Button /></Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string
><Button /> : Element
>Button : typeof Button
>Comp : (p: Prop) => Element

