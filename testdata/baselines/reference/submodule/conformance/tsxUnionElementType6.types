//// [tests/cases/conformance/jsx/tsxUnionElementType6.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof __React

function EmptySFC1() {
>EmptySFC1 : () => any

    return <div>Hi</div>
><div>Hi</div> : any
>div : any
>div : any
}

function EmptySFC2() {
>EmptySFC2 : () => any

    return <div>Hello</div>
><div>Hello</div> : any
>div : any
>div : any
}

function SFC2(prop: { x: boolean }) {
>SFC2 : (prop: { x: boolean; }) => any
>prop : { x: boolean; }
>x : boolean

    return <h1>World</h1>;
><h1>World</h1> : any
>h1 : any
>h1 : any
}

var EmptySFCComp = EmptySFC1 || EmptySFC2;
>EmptySFCComp : () => any
>EmptySFC1 || EmptySFC2 : () => any
>EmptySFC1 : () => any
>EmptySFC2 : () => any

var SFC2AndEmptyComp = SFC2 || EmptySFC1;
>SFC2AndEmptyComp : (prop: { x: boolean; }) => any
>SFC2 || EmptySFC1 : (prop: { x: boolean; }) => any
>SFC2 : (prop: { x: boolean; }) => any
>EmptySFC1 : () => any

// Error
let a = <EmptySFCComp x />;
>a : any
><EmptySFCComp x /> : any
>EmptySFCComp : () => any
>x : any

let b = <SFC2AndEmptyComp x="hi" />;
>b : any
><SFC2AndEmptyComp x="hi" /> : any
>SFC2AndEmptyComp : (prop: { x: boolean; }) => any
>x : any

let c = <SFC2AndEmptyComp />;
>c : any
><SFC2AndEmptyComp /> : any
>SFC2AndEmptyComp : (prop: { x: boolean; }) => any

let d = <SFC2AndEmptyComp data-prop />;
>d : any
><SFC2AndEmptyComp data-prop /> : any
>SFC2AndEmptyComp : (prop: { x: boolean; }) => any
>data-prop : any


