--- old.jsxSpreadOverwritesAttributeStrict.types
+++ new.jsxSpreadOverwritesAttributeStrict.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : typeof __React
 
 interface Props {
     a: number;
@@= skipped -26, +26 lines =@@
 >1 : 1
 
 const Foo = (props: Props) => <div>{ props.a }</div>;
->Foo : (props: Props) => JSX.Element
->(props: Props) => <div>{ props.a }</div> : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
+>(props: Props) => <div>{ props.a }</div> : (props: Props) => Element
 >props : Props
-><div>{ props.a }</div> : JSX.Element
+><div>{ props.a }</div> : Element
 >div : any
 >props.a : number
 >props : Props
@@= skipped -12, +12 lines =@@
 
 // ok
 const a1 = <Foo {...props}></Foo>;
->a1 : JSX.Element
-><Foo {...props}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>a1 : Element
+><Foo {...props}></Foo> : Element
+>Foo : (props: Props) => Element
 >props : Props
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
 const a2 = <Foo d={1} {...props}></Foo>;
->a2 : JSX.Element
-><Foo d={1} {...props}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>a2 : Element
+><Foo d={1} {...props}></Foo> : Element
+>Foo : (props: Props) => Element
 >d : number
 >1 : 1
 >props : Props
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
 // error
 const b1 = <Foo a={1} {...props}></Foo>;
->b1 : JSX.Element
-><Foo a={1} {...props}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>b1 : Element
+><Foo a={1} {...props}></Foo> : Element
+>Foo : (props: Props) => Element
 >a : number
 >1 : 1
 >props : Props
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
 const b2 = <Foo a={1} b={2} {...props}></Foo>;
->b2 : JSX.Element
-><Foo a={1} b={2} {...props}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>b2 : Element
+><Foo a={1} b={2} {...props}></Foo> : Element
+>Foo : (props: Props) => Element
 >a : number
 >1 : 1
 >b : number
 >2 : 2
 >props : Props
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
 const b3 = <Foo a={1} d={1} {...props} {...{ d: 1 }}></Foo>;
->b3 : JSX.Element
-><Foo a={1} d={1} {...props} {...{ d: 1 }}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>b3 : Element
+><Foo a={1} d={1} {...props} {...{ d: 1 }}></Foo> : Element
+>Foo : (props: Props) => Element
 >a : number
 >1 : 1
 >d : number
@@= skipped -48, +48 lines =@@
 >{ d: 1 } : { d: number; }
 >d : number
 >1 : 1
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
 const b4 = <Foo a={1} d={1} {...props} {...{ a: 1, d: 1 }}></Foo>;
->b4 : JSX.Element
-><Foo a={1} d={1} {...props} {...{ a: 1, d: 1 }}></Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+>b4 : Element
+><Foo a={1} d={1} {...props} {...{ a: 1, d: 1 }}></Foo> : Element
+>Foo : (props: Props) => Element
 >a : number
 >1 : 1
 >d : number
@@= skipped -16, +16 lines =@@
 >1 : 1
 >d : number
 >1 : 1
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
