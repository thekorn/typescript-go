//// [tests/cases/conformance/jsx/unicodeEscapesInJsxtags.tsx] ////

=== file.tsx ===
import * as React from "react";
>React : Symbol(React, Decl(file.tsx, 0, 6))

declare global {
>global : Symbol((Missing), Decl(file.tsx, 0, 31))

    namespace JSX {
>JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1), Decl(file.tsx, 1, 16))

        interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(react.d.ts, 2368, 78), Decl(file.tsx, 2, 19))

            "a-b": any;
>"a-b" : Symbol("a-b", Decl(file.tsx, 3, 37))

            "a-c": any;
>"a-c" : Symbol("a-c", Decl(file.tsx, 4, 23))
        }
    }
}
const Compa = (x: {x: number}) => <div>{"" + x}</div>;
>Compa : Symbol(Compa, Decl(file.tsx, 9, 5))
>x : Symbol(x, Decl(file.tsx, 9, 15))
>x : Symbol(x, Decl(file.tsx, 9, 19))
>x : Symbol(x, Decl(file.tsx, 9, 15))

const x = { video: () => null }
>x : Symbol(x, Decl(file.tsx, 10, 5))
>video : Symbol(video, Decl(file.tsx, 10, 11))

// unicode escape sequence is not allowed in tag name or JSX attribute name.
// tag name:
; <\u0061></a>
; <\u0061-b></a-b>
; <a-\u0063></a-c>
; <Comp\u0061 x={12} />
>Comp\u0061 : Symbol(Compa, Decl(file.tsx, 9, 5))
>x : Symbol(x, Decl(file.tsx, 17, 13))

; <x.\u0076ideo />
>x.\u0076ideo : Symbol(video, Decl(file.tsx, 10, 11))
>x : Symbol(x, Decl(file.tsx, 10, 5))
>\u0076ideo : Symbol(video, Decl(file.tsx, 10, 11))

; <\u{0061}></a>
; <\u{0061}-b></a-b>
; <a-\u{0063}></a-c>
; <Comp\u{0061} x={12} />
>Comp\u{0061} : Symbol(Compa, Decl(file.tsx, 9, 5))
>x : Symbol(x, Decl(file.tsx, 22, 15))

// attribute name
;<video data-\u0076ideo />
>data-\u0076ideo : Symbol(data-\u0076ideo, Decl(file.tsx, 25, 7))

;<video \u0073rc="" />
>\u0073rc : Symbol(src, Decl(file.tsx, 26, 7))

