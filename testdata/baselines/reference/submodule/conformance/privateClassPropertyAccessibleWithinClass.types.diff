--- old.privateClassPropertyAccessibleWithinClass.types
+++ new.privateClassPropertyAccessibleWithinClass.types
@@= skipped -26, +26 lines =@@
 >x : string
 
     private foo() { return this.foo; }
->foo : () => any
->this.foo : () => any
+>foo : () => ???
+>this.foo : () => ???
 >this : this
->foo : () => any
+>foo : () => ???
 
     private static x: string;
 >x : string
@@= skipped -26, +26 lines =@@
 >x : string
 
     private static foo() { return this.foo; }
->foo : () => typeof C.foo
->this.foo : () => typeof C.foo
+>foo : () => ???
+>this.foo : () => ???
 >this : typeof C
->foo : () => typeof C.foo
+>foo : () => ???
 
     private static bar() { this.foo(); }
 >bar : () => void
->this.foo() : () => typeof C.foo
->this.foo : () => typeof C.foo
+>this.foo() : () => ???
+>this.foo : () => ???
 >this : typeof C
->foo : () => typeof C.foo
+>foo : () => ???
 }
 
 // added level of function nesting
