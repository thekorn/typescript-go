--- old.checkJsxChildrenProperty12.symbols
+++ new.checkJsxChildrenProperty12.symbols
@@= skipped -7, +7 lines =@@
 >ButtonProp : Symbol(ButtonProp, Decl(file.tsx, 0, 32))
 
     a: number,
->a : Symbol(ButtonProp.a, Decl(file.tsx, 2, 22))
+>a : Symbol(a, Decl(file.tsx, 2, 22))
 
     b: string,
->b : Symbol(ButtonProp.b, Decl(file.tsx, 3, 14))
+>b : Symbol(b, Decl(file.tsx, 3, 14))
 
     children: Button;
->children : Symbol(ButtonProp.children, Decl(file.tsx, 4, 14))
+>children : Symbol(children, Decl(file.tsx, 4, 14))
 >Button : Symbol(Button, Decl(file.tsx, 6, 1))
 }
 
 class Button extends React.Component<ButtonProp, any> {
 >Button : Symbol(Button, Decl(file.tsx, 6, 1))
->React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>React.Component : Symbol(Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
 >React : Symbol(React, Decl(file.tsx, 0, 0))
->Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>Component : Symbol(Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
 >ButtonProp : Symbol(ButtonProp, Decl(file.tsx, 0, 32))
 
     render() {
->render : Symbol(Button.render, Decl(file.tsx, 8, 55))
+>render : Symbol(render, Decl(file.tsx, 8, 55))
 
 		let condition: boolean;
 >condition : Symbol(condition, Decl(file.tsx, 10, 5))
@@= skipped -28, +28 lines =@@
 
         	return <InnerButton {...this.props} />
 >InnerButton : Symbol(InnerButton, Decl(file.tsx, 24, 1))
->this.props : Symbol(React.Component.props, Decl(react.d.ts, 167, 37))
+>this.props : Symbol(props, Decl(react.d.ts, 167, 37))
 >this : Symbol(Button, Decl(file.tsx, 6, 1))
->props : Symbol(React.Component.props, Decl(react.d.ts, 167, 37))
+>props : Symbol(props, Decl(react.d.ts, 167, 37))
 		}
 		else {
 			return (<InnerButton {...this.props} >
 >InnerButton : Symbol(InnerButton, Decl(file.tsx, 24, 1))
->this.props : Symbol(React.Component.props, Decl(react.d.ts, 167, 37))
+>this.props : Symbol(props, Decl(react.d.ts, 167, 37))
 >this : Symbol(Button, Decl(file.tsx, 6, 1))
->props : Symbol(React.Component.props, Decl(react.d.ts, 167, 37))
+>props : Symbol(props, Decl(react.d.ts, 167, 37))
 
 				<div>Hello World</div>
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 
 				</InnerButton>);
 >InnerButton : Symbol(InnerButton, Decl(file.tsx, 24, 1))
@@= skipped -25, +25 lines =@@
 >InnerButtonProp : Symbol(InnerButtonProp, Decl(file.tsx, 20, 1))
 
 	a: number
->a : Symbol(InnerButtonProp.a, Decl(file.tsx, 22, 27))
+>a : Symbol(a, Decl(file.tsx, 22, 27))
 }
 
 class InnerButton extends React.Component<InnerButtonProp, any> {
 >InnerButton : Symbol(InnerButton, Decl(file.tsx, 24, 1))
->React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>React.Component : Symbol(Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
 >React : Symbol(React, Decl(file.tsx, 0, 0))
->Component : Symbol(React.Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
+>Component : Symbol(Component, Decl(react.d.ts, 158, 55), Decl(react.d.ts, 161, 66))
 >InnerButtonProp : Symbol(InnerButtonProp, Decl(file.tsx, 20, 1))
 
 	render() {
->render : Symbol(InnerButton.render, Decl(file.tsx, 26, 65))
+>render : Symbol(render, Decl(file.tsx, 26, 65))
 
 		return (<button>Hello</button>);
->button : Symbol(JSX.IntrinsicElements.button, Decl(react.d.ts, 2386, 43))
->button : Symbol(JSX.IntrinsicElements.button, Decl(react.d.ts, 2386, 43))
+>button : Symbol(button, Decl(react.d.ts, 2386, 43))
+>button : Symbol(button, Decl(react.d.ts, 2386, 43))
 	}
 }
 
