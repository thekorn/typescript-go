--- old.inferTypes1.errors.txt
+++ new.inferTypes1.errors.txt
@@= skipped -0, +0 lines =@@
 inferTypes1.ts(36,23): error TS2344: Type 'string' does not satisfy the constraint '(...args: any) => any'.
 inferTypes1.ts(37,23): error TS2344: Type 'Function' does not satisfy the constraint '(...args: any) => any'.
   Type 'Function' provides no match for the signature '(...args: any): any'.
-inferTypes1.ts(43,25): error TS2344: Type 'string' does not satisfy the constraint 'abstract new (...args: any) => any'.
-inferTypes1.ts(44,25): error TS2344: Type 'Function' does not satisfy the constraint 'abstract new (...args: any) => any'.
+inferTypes1.ts(43,25): error TS2344: Type 'string' does not satisfy the constraint 'new (...args: any) => any'.
+inferTypes1.ts(44,25): error TS2344: Type 'Function' does not satisfy the constraint 'new (...args: any) => any'.
   Type 'Function' provides no match for the signature 'new (...args: any): any'.
 inferTypes1.ts(55,25): error TS2344: Type '(x: string, y: string) => number' does not satisfy the constraint '(x: any) => any'.
   Target signature provides too few arguments. Expected 2 or more, but got 1.
@@= skipped -68, +68 lines =@@
     type U12 = InstanceType<never>;  // never
     type U13 = InstanceType<string>;  // Error
                             ~~~~~~
-!!! error TS2344: Type 'string' does not satisfy the constraint 'abstract new (...args: any) => any'.
+!!! error TS2344: Type 'string' does not satisfy the constraint 'new (...args: any) => any'.
     type U14 = InstanceType<Function>;  // Error
                             ~~~~~~~~
-!!! error TS2344: Type 'Function' does not satisfy the constraint 'abstract new (...args: any) => any'.
+!!! error TS2344: Type 'Function' does not satisfy the constraint 'new (...args: any) => any'.
 !!! error TS2344:   Type 'Function' provides no match for the signature 'new (...args: any): any'.
     type U15 = InstanceType<typeof Abstract>;  // Abstract
     type U16<T extends any[]> = InstanceType<new (x: string, ...args: T) => T[]>;  // T[]
