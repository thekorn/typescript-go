//// [tests/cases/conformance/jsdoc/checkJsdocSatisfiesTag3.ts] ////

=== /a.js ===
/** @type {{ f(s: string): void } & Record<string, unknown> }} */
let obj = /** @satisfies {{ g(s: string): void } & Record<string, unknown>} */ ({
>obj : { f: (s: any) => void; g: (s: any) => void; }
>({    f(s) { }, // "incorrect" implicit any on 's'    g(s) { }}) : { f: (s: any) => void; g: (s: any) => void; }
>{    f(s) { }, // "incorrect" implicit any on 's'    g(s) { }} : { f: (s: any) => void; g: (s: any) => void; }

    f(s) { }, // "incorrect" implicit any on 's'
>f : (s: any) => void
>s : any

    g(s) { }
>g : (s: any) => void
>s : any

});

// This needs to not crash (outer node is not expression)
/** @satisfies {{ f(s: string): void }} */ ({ f(x) { } })
>({ f(x) { } }) : { f: (x: any) => void; }
>{ f(x) { } } : { f: (x: any) => void; }
>f : (x: any) => void
>x : any

