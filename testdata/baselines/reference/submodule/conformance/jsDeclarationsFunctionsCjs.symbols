//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsFunctionsCjs.ts] ////

=== index.js ===
module.exports.a = function a() {}
>a : Symbol(a, Decl(index.js, 0, 18))

module.exports.b = function b() {}
>b : Symbol(b, Decl(index.js, 2, 18))

module.exports.b.cat = "cat";

module.exports.c = function c() {}
>c : Symbol(c, Decl(index.js, 5, 18))

module.exports.c.Cls = class {}

/**
 * @param {number} a
 * @param {number} b
 * @return {string} 
 */
module.exports.d = function d(a, b) { return /** @type {*} */(null); }
>d : Symbol(d, Decl(index.js, 13, 18))
>a : Symbol(a, Decl(index.js, 13, 30))
>b : Symbol(b, Decl(index.js, 13, 32))

/**
 * @template T,U
 * @param {T} a
 * @param {U} b
 * @return {T & U} 
 */
module.exports.e = function e(a, b) { return /** @type {*} */(null); }
>e : Symbol(e, Decl(index.js, 21, 18))
>a : Symbol(a, Decl(index.js, 21, 30))
>b : Symbol(b, Decl(index.js, 21, 32))

/**
 * @template T
 * @param {T} a
 */
module.exports.f = function f(a) {
>f : Symbol(f, Decl(index.js, 27, 18))
>a : Symbol(a, Decl(index.js, 27, 30))

    return a;
>a : Symbol(a, Decl(index.js, 27, 30))
}
module.exports.f.self = module.exports.f;

/**
 * @param {{x: string}} a
 * @param {{y: typeof module.exports.b}} b
 */
function g(a, b) {
>g : Symbol(g, Decl(index.js, 30, 41))
>a : Symbol(a, Decl(index.js, 36, 11))
>b : Symbol(b, Decl(index.js, 36, 13))

    return a.x && b.y();
>a.x : Symbol(x, Decl(index.js, 33, 12))
>a : Symbol(a, Decl(index.js, 36, 11))
>x : Symbol(x, Decl(index.js, 33, 12))
>b.y : Symbol(y, Decl(index.js, 34, 12))
>b : Symbol(b, Decl(index.js, 36, 13))
>y : Symbol(y, Decl(index.js, 34, 12))
}

module.exports.g = g;
>g : Symbol(g, Decl(index.js, 30, 41))

/**
 * @param {{x: string}} a
 * @param {{y: typeof module.exports.b}} b
 */
function hh(a, b) {
>hh : Symbol(hh, Decl(index.js, 40, 21))
>a : Symbol(a, Decl(index.js, 46, 12))
>b : Symbol(b, Decl(index.js, 46, 14))

    return a.x && b.y();
>a.x : Symbol(x, Decl(index.js, 43, 12))
>a : Symbol(a, Decl(index.js, 46, 12))
>x : Symbol(x, Decl(index.js, 43, 12))
>b.y : Symbol(y, Decl(index.js, 44, 12))
>b : Symbol(b, Decl(index.js, 46, 14))
>y : Symbol(y, Decl(index.js, 44, 12))
}

module.exports.h = hh;
>hh : Symbol(hh, Decl(index.js, 40, 21))

module.exports.i = function i() {}
>i : Symbol(i, Decl(index.js, 52, 18))

module.exports.ii = module.exports.i;

// note that this last one doesn't make much sense in cjs, since exports aren't hoisted bindings
module.exports.jj = module.exports.j;
module.exports.j = function j() {}
>j : Symbol(j, Decl(index.js, 57, 18))

