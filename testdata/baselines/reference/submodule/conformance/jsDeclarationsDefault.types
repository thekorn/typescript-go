//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsDefault.ts] ////

=== index1.js ===

export default 12;

=== index2.js ===
export default function foo() {
>foo : () => ???

    return foo;
>foo : () => ???
}
export const x = foo;
>x : () => ???
>foo : () => ???

export { foo as bar };
>foo : () => ???
>bar : () => ???

=== index3.js ===
export default class Foo {
>Foo : default

    a = /** @type {Foo} */(null);
>a : any
>(null) : null

};
export const X = Foo;
>X : typeof default
>Foo : typeof default

export { Foo as Bar };
>Foo : typeof default
>Bar : typeof default

=== index4.js ===
import Fab from "./index3";
>Fab : typeof default

class Bar extends Fab {
>Bar : Bar
>Fab : default

    x = /** @type {Bar} */(null);
>x : any
>(null) : null
}
export default Bar;
>Bar : Bar

=== index5.js ===

// merge type alias and const (OK)
export default 12;
/**
 * @typedef {string | number} default
 */

=== index6.js ===
// merge type alias and function (OK)
export default function func() {};
>func : () => void

/**
 * @typedef {string | number} default
 */

