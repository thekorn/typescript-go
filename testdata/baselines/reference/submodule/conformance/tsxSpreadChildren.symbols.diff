--- old.tsxSpreadChildren.symbols
+++ new.tsxSpreadChildren.symbols
@@= skipped -20, +20 lines =@@
 >TodoProp : Symbol(TodoProp, Decl(tsxSpreadChildren.tsx, 6, 23))
 
     id: number;
->id : Symbol(TodoProp.id, Decl(tsxSpreadChildren.tsx, 8, 20))
+>id : Symbol(id, Decl(tsxSpreadChildren.tsx, 8, 20))
 
     todo: string;
->todo : Symbol(TodoProp.todo, Decl(tsxSpreadChildren.tsx, 9, 15))
+>todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 9, 15))
 }
 interface TodoListProps {
 >TodoListProps : Symbol(TodoListProps, Decl(tsxSpreadChildren.tsx, 11, 1))
 
     todos: TodoProp[];
->todos : Symbol(TodoListProps.todos, Decl(tsxSpreadChildren.tsx, 12, 25))
+>todos : Symbol(todos, Decl(tsxSpreadChildren.tsx, 12, 25))
 >TodoProp : Symbol(TodoProp, Decl(tsxSpreadChildren.tsx, 6, 23))
 }
 function Todo(prop: { key: number, todo: string }) {
@@= skipped -19, +19 lines =@@
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 15, 34))
 
     return <div>{prop.key.toString() + prop.todo}</div>;
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildren.tsx, 2, 30))
->prop.key.toString : Symbol(Number.toString, Decl(lib.es5.d.ts, --, --))
+>div : Symbol((Missing), Decl(tsxSpreadChildren.tsx, 2, 30))
+>prop.key.toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
 >prop.key : Symbol(key, Decl(tsxSpreadChildren.tsx, 15, 21))
 >prop : Symbol(prop, Decl(tsxSpreadChildren.tsx, 15, 14))
 >key : Symbol(key, Decl(tsxSpreadChildren.tsx, 15, 21))
->toString : Symbol(Number.toString, Decl(lib.es5.d.ts, --, --))
+>toString : Symbol(toString, Decl(lib.es5.d.ts, --, --))
 >prop.todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 15, 34))
 >prop : Symbol(prop, Decl(tsxSpreadChildren.tsx, 15, 14))
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 15, 34))
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildren.tsx, 2, 30))
+>div : Symbol((Missing), Decl(tsxSpreadChildren.tsx, 2, 30))
 }
 function TodoList({ todos }: TodoListProps) {
 >TodoList : Symbol(TodoList, Decl(tsxSpreadChildren.tsx, 17, 1))
@@= skipped -17, +17 lines =@@
 >TodoListProps : Symbol(TodoListProps, Decl(tsxSpreadChildren.tsx, 11, 1))
 
     return <div>
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildren.tsx, 2, 30))
+>div : Symbol((Missing), Decl(tsxSpreadChildren.tsx, 2, 30))
 
         {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}
->todos.map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --))
+>todos.map : Symbol(map, Decl(lib.es5.d.ts, --, --))
 >todos : Symbol(todos, Decl(tsxSpreadChildren.tsx, 18, 19))
->map : Symbol(Array.map, Decl(lib.es5.d.ts, --, --))
+>map : Symbol(map, Decl(lib.es5.d.ts, --, --))
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 20, 22))
 >Todo : Symbol(Todo, Decl(tsxSpreadChildren.tsx, 14, 1))
 >key : Symbol(key, Decl(tsxSpreadChildren.tsx, 20, 35))
->todo.id : Symbol(TodoProp.id, Decl(tsxSpreadChildren.tsx, 8, 20))
+>todo.id : Symbol(id, Decl(tsxSpreadChildren.tsx, 8, 20))
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 20, 22))
->id : Symbol(TodoProp.id, Decl(tsxSpreadChildren.tsx, 8, 20))
+>id : Symbol(id, Decl(tsxSpreadChildren.tsx, 8, 20))
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 20, 49))
->todo.todo : Symbol(TodoProp.todo, Decl(tsxSpreadChildren.tsx, 9, 15))
+>todo.todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 9, 15))
 >todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 20, 22))
->todo : Symbol(TodoProp.todo, Decl(tsxSpreadChildren.tsx, 9, 15))
+>todo : Symbol(todo, Decl(tsxSpreadChildren.tsx, 9, 15))
 
     </div>;
->div : Symbol(JSX.IntrinsicElements.__index, Decl(tsxSpreadChildren.tsx, 2, 30))
+>div : Symbol((Missing), Decl(tsxSpreadChildren.tsx, 2, 30))
 }
 let x: TodoListProps;
 >x : Symbol(x, Decl(tsxSpreadChildren.tsx, 23, 3))
