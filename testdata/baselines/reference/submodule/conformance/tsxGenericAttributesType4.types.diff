--- old.tsxGenericAttributesType4.types
+++ new.tsxGenericAttributesType4.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : typeof __React
 
 class B1<T extends { x: string }> extends React.Component<T, {}> {
 >B1 : B1<T>
 >x : string
->React.Component : React.Component<T, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : Component<T, {}>
+>React : typeof __React
+>Component : typeof Component
 
     render() {
->render : () => JSX.Element
+>render : () => Element
 
         return <div>hi</div>; 
-><div>hi</div> : JSX.Element
+><div>hi</div> : Element
 >div : any
 >div : any
     }
 }
 class B<U> extends React.Component<U, {}> {
 >B : B<U>
->React.Component : React.Component<U, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : Component<U, {}>
+>React : typeof __React
+>Component : typeof Component
 
     render() {
->render : () => JSX.Element
+>render : () => Element
 
         return <B1 {...this.props} x="hi" />;
-><B1 {...this.props} x="hi" /> : JSX.Element
+><B1 {...this.props} x="hi" /> : Element
 >B1 : typeof B1
->this.props : U & { children?: React.ReactNode; }
+>this.props : U & { children?: ReactNode; }
 >this : this
->props : U & { children?: React.ReactNode; }
+>props : U & { children?: ReactNode; }
 >x : string
     }
 }
