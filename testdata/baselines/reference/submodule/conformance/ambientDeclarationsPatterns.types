//// [tests/cases/conformance/ambient/ambientDeclarationsPatterns.ts] ////

=== user.ts ===
///<reference path="declarations.d.ts" />
import {foo, baz} from "foobarbaz";
>foo : any
>baz : any

foo(baz);
>foo(baz) : any
>foo : any
>baz : any

import {foos} from "foosball";
>foos : any

foo(foos);
>foo(foos) : any
>foo : any
>foos : any

// Works with relative file name
import fileText from "./file!text";
>fileText : any

foo(fileText);
>foo(fileText) : any
>foo : any
>fileText : any

=== declarations.d.ts ===
declare module "foo*baz" {
>"foo*baz" : typeof import("foo*baz")

    export function foo(s: string): void;
>foo : (s: string) => void
>s : string
}
// Augmentations still work
declare module "foo*baz" {
>"foo*baz" : typeof import("foo*baz")

    export const baz: string;
>baz : string
}

// Longest prefix wins
declare module "foos*" {
>"foos*" : typeof import("foos*")

    export const foos: string;
>foos : string
}

declare module "*!text" {
>"*!text" : typeof import("*!text")

    const x: string;
>x : string

    export default x;
>x : string
}

