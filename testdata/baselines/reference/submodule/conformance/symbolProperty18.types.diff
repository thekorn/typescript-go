--- old.symbolProperty18.types
+++ new.symbolProperty18.types
@@= skipped -1, +1 lines =@@
 
 === symbolProperty18.ts ===
 var i = {
->i : { [Symbol.iterator]: number; [Symbol.toStringTag](): string; [Symbol.toPrimitive]: boolean; }
->{    [Symbol.iterator]: 0,    [Symbol.toStringTag]() { return "" },    set [Symbol.toPrimitive](p: boolean) { }} : { [Symbol.iterator]: number; [Symbol.toStringTag](): string; [Symbol.toPrimitive]: boolean; }
+>i : { [Symbol.iterator]: number; [Symbol.toStringTag]: () => string; [Symbol.toPrimitive]: boolean; }
+>{    [Symbol.iterator]: 0,    [Symbol.toStringTag]() { return "" },    set [Symbol.toPrimitive](p: boolean) { }} : { [Symbol.iterator]: number; [Symbol.toStringTag]: () => string; [Symbol.toPrimitive]: boolean; }
 
     [Symbol.iterator]: 0,
 >[Symbol.iterator] : number
@@= skipped -28, +28 lines =@@
 var it = i[Symbol.iterator];
 >it : number
 >i[Symbol.iterator] : number
->i : { [Symbol.iterator]: number; [Symbol.toStringTag](): string; [Symbol.toPrimitive]: boolean; }
+>i : { [Symbol.iterator]: number; [Symbol.toStringTag]: () => string; [Symbol.toPrimitive]: boolean; }
 >Symbol.iterator : unique symbol
 >Symbol : SymbolConstructor
 >iterator : unique symbol
@@= skipped -9, +9 lines =@@
 >str : string
 >i[Symbol.toStringTag]() : string
 >i[Symbol.toStringTag] : () => string
->i : { [Symbol.iterator]: number; [Symbol.toStringTag](): string; [Symbol.toPrimitive]: boolean; }
+>i : { [Symbol.iterator]: number; [Symbol.toStringTag]: () => string; [Symbol.toPrimitive]: boolean; }
 >Symbol.toStringTag : unique symbol
 >Symbol : SymbolConstructor
 >toStringTag : unique symbol
@@= skipped -8, +8 lines =@@
 i[Symbol.toPrimitive] = false;
 >i[Symbol.toPrimitive] = false : false
 >i[Symbol.toPrimitive] : boolean
->i : { [Symbol.iterator]: number; [Symbol.toStringTag](): string; [Symbol.toPrimitive]: boolean; }
+>i : { [Symbol.iterator]: number; [Symbol.toStringTag]: () => string; [Symbol.toPrimitive]: boolean; }
 >Symbol.toPrimitive : unique symbol
 >Symbol : SymbolConstructor
 >toPrimitive : unique symbol
