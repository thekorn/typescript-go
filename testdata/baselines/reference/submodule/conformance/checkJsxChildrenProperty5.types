//// [tests/cases/conformance/jsx/checkJsxChildrenProperty5.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof __React

interface Prop {
    a: number,
>a : number

    b: string,
>b : string

    children: Button;
>children : Button
}

class Button extends React.Component<any, any> {
>Button : Button
>React.Component : Component<any, any>
>React : typeof __React
>Component : typeof Component

    render() {
>render : () => Element

        return (<div>My Button</div>)
>(<div>My Button</div>) : Element
><div>My Button</div> : Element
>div : any
>div : any
    }
}

function Comp(p: Prop) {
>Comp : (p: Prop) => Element
>p : Prop

    return <div>{p.b}</div>;
><div>{p.b}</div> : Element
>div : any
>p.b : string
>p : Prop
>b : string
>div : any
}

// Error: no children specified
let k = <Comp a={10} b="hi" />;
>k : Element
><Comp a={10} b="hi" /> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string

// Error: JSX.element is not the same as JSX.ElementClass
let k1 =
>k1 : Element

    <Comp a={10} b="hi">
><Comp a={10} b="hi">        <Button />    </Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string

        <Button />
><Button /> : Element
>Button : typeof Button

    </Comp>;
>Comp : (p: Prop) => Element

let k2 =
>k2 : Element

    <Comp a={10} b="hi">
><Comp a={10} b="hi">        {Button}    </Comp> : Element
>Comp : (p: Prop) => Element
>a : number
>10 : 10
>b : string

        {Button}
>Button : typeof Button

    </Comp>;
>Comp : (p: Prop) => Element

