--- old.typeSatisfaction_ensureInterfaceImpl.types
+++ new.typeSatisfaction_ensureInterfaceImpl.types
@@= skipped -10, +10 lines =@@
 };
 
 const car = {
->car : { start(): void; move(d: number): void; stop(): void; }
->{    start() { },    move(d) {        // d should be number    },    stop() { }} satisfies Movable & Record<string, unknown> : { start(): void; move(d: number): void; stop(): void; }
->{    start() { },    move(d) {        // d should be number    },    stop() { }} : { start(): void; move(d: number): void; stop(): void; }
+>car : { start: () => void; move: (d: number) => void; stop: () => void; }
+>{    start() { },    move(d) {        // d should be number    },    stop() { }} satisfies Movable & Record<string, unknown> : { start: () => void; move: (d: number) => void; stop: () => void; }
+>{    start() { },    move(d) {        // d should be number    },    stop() { }} : { start: () => void; move: (d: number) => void; stop: () => void; }
 
     start() { },
 >start : () => void
