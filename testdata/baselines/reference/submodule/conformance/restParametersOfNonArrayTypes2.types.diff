--- old.restParametersOfNonArrayTypes2.types
+++ new.restParametersOfNonArrayTypes2.types
@@= skipped -41, +41 lines =@@
 }
 
 var a: {
->a : { (...x: MyThing): any; foo(...x: MyThing): any; }
+>a : { (...x: MyThing): any; foo: (...x: MyThing) => any; }
 
     (...x: MyThing);
 >x : MyThing
@@= skipped -11, +11 lines =@@
 }
 
 var b = {
->b : { foo(...x: MyThing): void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
->{    foo(...x: MyThing) { },    a: function foo(...x: MyThing, ...y: MyThing) { },    b: (...x: MyThing) => { }} : { foo(...x: MyThing): void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
+>b : { foo: (...x: MyThing) => void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
+>{    foo(...x: MyThing) { },    a: function foo(...x: MyThing, ...y: MyThing) { },    b: (...x: MyThing) => { }} : { foo: (...x: MyThing) => void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
 
     foo(...x: MyThing) { },
 >foo : (...x: MyThing) => void
@@= skipped -58, +58 lines =@@
 }
 
 var a2: {
->a2 : { (...x: MyThing2<string>): any; foo(...x: MyThing2<string>): any; }
+>a2 : { (...x: MyThing2<string>): any; foo: (...x: MyThing2<string>) => any; }
 
     (...x: MyThing2<string>);
 >x : MyThing2<string>
@@= skipped -11, +11 lines =@@
 }
 
 var b2 = {
->b2 : { foo(...x: MyThing2<string>): void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
->{    foo(...x: MyThing2<string>) { },    a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },    b: (...x: MyThing2<string>) => { }} : { foo(...x: MyThing2<string>): void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
+>b2 : { foo: (...x: MyThing2<string>) => void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
+>{    foo(...x: MyThing2<string>) { },    a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },    b: (...x: MyThing2<string>) => { }} : { foo: (...x: MyThing2<string>) => void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
 
     foo(...x: MyThing2<string>) { },
 >foo : (...x: MyThing2<string>) => void
