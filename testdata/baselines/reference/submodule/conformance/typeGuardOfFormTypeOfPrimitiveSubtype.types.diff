--- old.typeGuardOfFormTypeOfPrimitiveSubtype.types
+++ new.typeGuardOfFormTypeOfPrimitiveSubtype.types
@@= skipped -4, +4 lines =@@
 >a : {}
 
 let b: {toString(): string};
->b : { toString(): string; }
+>b : { toString: () => string; }
 >toString : () => string
 
 if (typeof a === "number") {
@@= skipped -37, +37 lines =@@
 if (typeof b === "number") {
 >typeof b === "number" : boolean
 >typeof b : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
->b : { toString(): string; }
+>b : { toString: () => string; }
 >"number" : "number"
 
     let c: number = b;
@@= skipped -10, +10 lines =@@
 if (typeof b === "string") {
 >typeof b === "string" : boolean
 >typeof b : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
->b : { toString(): string; }
+>b : { toString: () => string; }
 >"string" : "string"
 
     let c: string = b;
@@= skipped -10, +10 lines =@@
 if (typeof b === "boolean") {
 >typeof b === "boolean" : boolean
 >typeof b : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
->b : { toString(): string; }
+>b : { toString: () => string; }
 >"boolean" : "boolean"
 
     let c: boolean = b;
