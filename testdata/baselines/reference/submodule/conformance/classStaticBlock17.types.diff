--- old.classStaticBlock17.types
+++ new.classStaticBlock17.types
@@= skipped -1, +1 lines =@@
 
 === classStaticBlock17.ts ===
 let friendA: { getX(o: A): number, setX(o: A, v: number): void };
->friendA : { getX(o: A): number; setX(o: A, v: number): void; }
+>friendA : { getX: (o: A) => number; setX: (o: A, v: number) => void; }
 >getX : (o: A) => number
 >o : A
 >setX : (o: A, v: number) => void
@@= skipped -33, +33 lines =@@
 
   static {
     friendA = {
->friendA = {      getX(obj) { return obj.#x },      setX(obj, value) { obj.#x = value }    } : { getX(obj: A): number; setX(obj: A, value: number): void; }
->friendA : { getX(o: A): number; setX(o: A, v: number): void; }
->{      getX(obj) { return obj.#x },      setX(obj, value) { obj.#x = value }    } : { getX(obj: A): number; setX(obj: A, value: number): void; }
+>friendA = {      getX(obj) { return obj.#x },      setX(obj, value) { obj.#x = value }    } : { getX: (obj: A) => number; setX: (obj: A, value: number) => void; }
+>friendA : { getX: (o: A) => number; setX: (o: A, v: number) => void; }
+>{      getX(obj) { return obj.#x },      setX(obj, value) { obj.#x = value }    } : { getX: (obj: A) => number; setX: (obj: A, value: number) => void; }
 
       getX(obj) { return obj.#x },
 >getX : (obj: A) => number
@@= skipped -33, +33 lines =@@
 >x : number
 >friendA.getX(a) : number
 >friendA.getX : (o: A) => number
->friendA : { getX(o: A): number; setX(o: A, v: number): void; }
+>friendA : { getX: (o: A) => number; setX: (o: A, v: number) => void; }
 >getX : (o: A) => number
 >a : A
 
     friendA.setX(a, x + 1); // ok
 >friendA.setX(a, x + 1) : void
 >friendA.setX : (o: A, v: number) => void
->friendA : { getX(o: A): number; setX(o: A, v: number): void; }
+>friendA : { getX: (o: A) => number; setX: (o: A, v: number) => void; }
 >setX : (o: A, v: number) => void
 >a : A
 >x + 1 : number
