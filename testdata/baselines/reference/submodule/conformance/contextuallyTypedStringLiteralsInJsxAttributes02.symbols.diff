--- old.contextuallyTypedStringLiteralsInJsxAttributes02.symbols
+++ new.contextuallyTypedStringLiteralsInJsxAttributes02.symbols
@@= skipped -7, +7 lines =@@
 >ClickableProps : Symbol(ClickableProps, Decl(file.tsx, 0, 31))
 
     children?: string;
->children : Symbol(ClickableProps.children, Decl(file.tsx, 2, 33))
+>children : Symbol(children, Decl(file.tsx, 2, 33))
 
     className?: string;
->className : Symbol(ClickableProps.className, Decl(file.tsx, 3, 22))
+>className : Symbol(className, Decl(file.tsx, 3, 22))
 }
 
 export interface ButtonProps extends ClickableProps {
@@= skipped -11, +11 lines =@@
 >ClickableProps : Symbol(ClickableProps, Decl(file.tsx, 0, 31))
 
     onClick: (k: "left" | "right") => void;
->onClick : Symbol(ButtonProps.onClick, Decl(file.tsx, 7, 53))
+>onClick : Symbol(onClick, Decl(file.tsx, 7, 53))
 >k : Symbol(k, Decl(file.tsx, 8, 14))
 }
 
@@= skipped -9, +9 lines =@@
 >ClickableProps : Symbol(ClickableProps, Decl(file.tsx, 0, 31))
 
     goTo: "home" | "contact";
->goTo : Symbol(LinkProps.goTo, Decl(file.tsx, 11, 51))
+>goTo : Symbol(goTo, Decl(file.tsx, 11, 51))
 }
 
 export function MainButton(buttonProps: ButtonProps): JSX.Element;
@@= skipped -8, +8 lines =@@
 >buttonProps : Symbol(buttonProps, Decl(file.tsx, 15, 27))
 >ButtonProps : Symbol(ButtonProps, Decl(file.tsx, 5, 1))
 >JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
->Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
+>Element : Symbol(Element, Decl(react.d.ts, 2356, 27))
 
 export function MainButton(linkProps: LinkProps): JSX.Element;
 >MainButton : Symbol(MainButton, Decl(file.tsx, 13, 1), Decl(file.tsx, 15, 66), Decl(file.tsx, 16, 62))
 >linkProps : Symbol(linkProps, Decl(file.tsx, 16, 27))
 >LinkProps : Symbol(LinkProps, Decl(file.tsx, 9, 1))
 >JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
->Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
+>Element : Symbol(Element, Decl(react.d.ts, 2356, 27))
 
 export function MainButton(props: ButtonProps | LinkProps): JSX.Element {
 >MainButton : Symbol(MainButton, Decl(file.tsx, 13, 1), Decl(file.tsx, 15, 66), Decl(file.tsx, 16, 62))
@@= skipped -15, +15 lines =@@
 >ButtonProps : Symbol(ButtonProps, Decl(file.tsx, 5, 1))
 >LinkProps : Symbol(LinkProps, Decl(file.tsx, 9, 1))
 >JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
->Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
+>Element : Symbol(Element, Decl(react.d.ts, 2356, 27))
 
     const linkProps = props as LinkProps;
 >linkProps : Symbol(linkProps, Decl(file.tsx, 18, 9))
@@= skipped -8, +8 lines =@@
 >LinkProps : Symbol(LinkProps, Decl(file.tsx, 9, 1))
 
     if(linkProps.goTo) {
->linkProps.goTo : Symbol(LinkProps.goTo, Decl(file.tsx, 11, 51))
+>linkProps.goTo : Symbol(goTo, Decl(file.tsx, 11, 51))
 >linkProps : Symbol(linkProps, Decl(file.tsx, 18, 9))
->goTo : Symbol(LinkProps.goTo, Decl(file.tsx, 11, 51))
+>goTo : Symbol(goTo, Decl(file.tsx, 11, 51))
 
         return this._buildMainLink(props);
 >props : Symbol(props, Decl(file.tsx, 17, 27))
@@= skipped -17, +17 lines =@@
 >MainButton : Symbol(MainButton, Decl(file.tsx, 13, 1), Decl(file.tsx, 15, 66), Decl(file.tsx, 16, 62))
 >onClick : Symbol(onClick, Decl(file.tsx, 26, 28))
 >k : Symbol(k, Decl(file.tsx, 26, 38))
->console.log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.d.ts, --, --))
 >console : Symbol(console, Decl(lib.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>log : Symbol(log, Decl(lib.d.ts, --, --))
 >k : Symbol(k, Decl(file.tsx, 26, 38))
 >extra : Symbol(extra, Decl(file.tsx, 26, 62))
 
@@= skipped -11, +11 lines =@@
 >MainButton : Symbol(MainButton, Decl(file.tsx, 13, 1), Decl(file.tsx, 15, 66), Decl(file.tsx, 16, 62))
 >onClick : Symbol(onClick, Decl(file.tsx, 27, 22))
 >k : Symbol(k, Decl(file.tsx, 27, 33))
->console.log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.d.ts, --, --))
 >console : Symbol(console, Decl(lib.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>log : Symbol(log, Decl(lib.d.ts, --, --))
 >k : Symbol(k, Decl(file.tsx, 27, 33))
 >extra : Symbol(extra, Decl(file.tsx, 27, 54))
 
@@= skipped -23, +23 lines =@@
 >buttonProps : Symbol(buttonProps, Decl(file.tsx, 31, 27))
 >ButtonProps : Symbol(ButtonProps, Decl(file.tsx, 5, 1))
 >JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
->Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
+>Element : Symbol(Element, Decl(react.d.ts, 2356, 27))
 >undefined : Symbol(undefined)
 
 const c1 = <NoOverload  {...{onClick: (k) => {console.log(k)}}} extra />;  // k has type any
@@= skipped -8, +8 lines =@@
 >NoOverload : Symbol(NoOverload, Decl(file.tsx, 29, 44))
 >onClick : Symbol(onClick, Decl(file.tsx, 32, 29))
 >k : Symbol(k, Decl(file.tsx, 32, 39))
->console.log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>console.log : Symbol(log, Decl(lib.d.ts, --, --))
 >console : Symbol(console, Decl(lib.d.ts, --, --))
->log : Symbol(Console.log, Decl(lib.d.ts, --, --))
+>log : Symbol(log, Decl(lib.d.ts, --, --))
 >k : Symbol(k, Decl(file.tsx, 32, 39))
 >extra : Symbol(extra, Decl(file.tsx, 32, 63))
 
@@= skipped -11, +11 lines =@@
 >linkProps : Symbol(linkProps, Decl(file.tsx, 34, 28))
 >LinkProps : Symbol(LinkProps, Decl(file.tsx, 9, 1))
 >JSX : Symbol(JSX, Decl(react.d.ts, 2353, 1))
->Element : Symbol(JSX.Element, Decl(react.d.ts, 2356, 27))
+>Element : Symbol(Element, Decl(react.d.ts, 2356, 27))
 >undefined : Symbol(undefined)
 
 const d1 = <NoOverload1 {...{goTo:"home"}} extra  />;  // goTo has type "home" | "contact"
