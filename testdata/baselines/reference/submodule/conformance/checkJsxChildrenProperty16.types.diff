--- old.checkJsxChildrenProperty16.types
+++ new.checkJsxChildrenProperty16.types
@@= skipped -28, +28 lines =@@
     };
 
 export declare function Foo(props: Props): JSX.Element;
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 >props : Props
 >JSX : any
 
 export const Test = () => {
->Test : () => JSX.Element
->() => {  return (    <>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </>  );} : () => JSX.Element
+>Test : () => Element
+>() => {  return (    <>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </>  );} : () => Element
 
   return (
->(    <>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </>  ) : JSX.Element
+>(    <>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </>  ) : Element
 
     <>
-><>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </> : JSX.Element
+><>      <Foo>{(value) => {}}</Foo>      <Foo renderNumber>{(value) => {}}</Foo>      <Foo children={(value) => {}} />      <Foo renderNumber children={(value) => {}} />    </> : Element
 
       <Foo>{(value) => {}}</Foo>
-><Foo>{(value) => {}}</Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
->(value) => {} : (value: string) => void
->value : string
->Foo : (props: Props) => JSX.Element
+><Foo>{(value) => {}}</Foo> : Element
+>Foo : (props: Props) => Element
+>(value) => {} : (value: any) => void
+>value : any
+>Foo : (props: Props) => Element
 
       <Foo renderNumber>{(value) => {}}</Foo>
-><Foo renderNumber>{(value) => {}}</Foo> : JSX.Element
->Foo : (props: Props) => JSX.Element
+><Foo renderNumber>{(value) => {}}</Foo> : Element
+>Foo : (props: Props) => Element
 >renderNumber : true
 >(value) => {} : (value: number) => void
 >value : number
->Foo : (props: Props) => JSX.Element
+>Foo : (props: Props) => Element
 
       <Foo children={(value) => {}} />
-><Foo children={(value) => {}} /> : JSX.Element
->Foo : (props: Props) => JSX.Element
+><Foo children={(value) => {}} /> : Element
+>Foo : (props: Props) => Element
 >children : (value: string) => void
 >(value) => {} : (value: string) => void
 >value : string
 
       <Foo renderNumber children={(value) => {}} />
-><Foo renderNumber children={(value) => {}} /> : JSX.Element
->Foo : (props: Props) => JSX.Element
+><Foo renderNumber children={(value) => {}} /> : Element
+>Foo : (props: Props) => Element
 >renderNumber : true
 >children : (value: number) => void
 >(value) => {} : (value: number) => void
