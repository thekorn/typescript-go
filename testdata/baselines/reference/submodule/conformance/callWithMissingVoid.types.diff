--- old.callWithMissingVoid.types
+++ new.callWithMissingVoid.types
@@= skipped -189, +189 lines =@@
 >4 : 4
 
 function c(x: number | void, y: void, z: void | string | number): void  {
->c : (x: number | void, y: void, z: void | string | number) => void
+>c : (x: void | number, y: void, z: void | string | number) => void
 >x : void | number
 >y : void
 >z : void | string | number
@@= skipped -9, +9 lines =@@
 
 c(3, void 0, void 0); // ok
 >c(3, void 0, void 0) : void
->c : (x: number | void, y: void, z: void | string | number) => void
+>c : (x: void | number, y: void, z: void | string | number) => void
 >3 : 3
 >void 0 : undefined
 >0 : 0
@@= skipped -9, +9 lines =@@
 
 c(3, void 0); // ok
 >c(3, void 0) : void
->c : (x: number | void, y: void, z: void | string | number) => void
+>c : (x: void | number, y: void, z: void | string | number) => void
 >3 : 3
 >void 0 : undefined
 >0 : 0
 
 c(3); // ok
 >c(3) : void
->c : (x: number | void, y: void, z: void | string | number) => void
+>c : (x: void | number, y: void, z: void | string | number) => void
 >3 : 3
 
 c(); // ok
 >c() : void
->c : (x: number | void, y: void, z: void | string | number) => void
+>c : (x: void | number, y: void, z: void | string | number) => void
 
 
 // Spread Parameters
@@= skipped -80, +80 lines =@@
 call((x: number | void, y: number | void) => 42) // ok
 >call((x: number | void, y: number | void) => 42) : void
 >call : <TS extends unknown[]>(handler: (...args: TS) => unknown, ...args: TS) => void
->(x: number | void, y: number | void) => 42 : (x: number | void, y: number | void) => number
+>(x: number | void, y: number | void) => 42 : (x: void | number, y: void | number) => number
 >x : void | number
 >y : void | number
 >42 : 42
@@= skipped -8, +8 lines =@@
 call((x: number | void, y: number | void) => 42, 4) // ok
 >call((x: number | void, y: number | void) => 42, 4) : void
 >call : <TS extends unknown[]>(handler: (...args: TS) => unknown, ...args: TS) => void
->(x: number | void, y: number | void) => 42 : (x: number | void, y: number | void) => number
+>(x: number | void, y: number | void) => 42 : (x: void | number, y: void | number) => number
 >x : void | number
 >y : void | number
 >42 : 42
@@= skipped -9, +9 lines =@@
 call((x: number | void, y: number | void) => 42, 4, 2) // ok
 >call((x: number | void, y: number | void) => 42, 4, 2) : void
 >call : <TS extends unknown[]>(handler: (...args: TS) => unknown, ...args: TS) => void
->(x: number | void, y: number | void) => 42 : (x: number | void, y: number | void) => number
+>(x: number | void, y: number | void) => 42 : (x: void | number, y: void | number) => number
 >x : void | number
 >y : void | number
 >42 : 42
