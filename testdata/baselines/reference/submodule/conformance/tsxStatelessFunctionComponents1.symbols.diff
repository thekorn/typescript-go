--- old.tsxStatelessFunctionComponents1.symbols
+++ new.tsxStatelessFunctionComponents1.symbols
@@= skipped -4, +4 lines =@@
 >EmptyPropSFC : Symbol(EmptyPropSFC, Decl(file.tsx, 0, 0))
 
     return <div> Default Greeting </div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 }
 
 function Greet(x: {name: string}) {
@@= skipped -10, +10 lines =@@
 >name : Symbol(name, Decl(file.tsx, 4, 19))
 
 	return <div>Hello, {x}</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 >x : Symbol(x, Decl(file.tsx, 4, 15))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 }
 function Meet({name = 'world'}) {
 >Meet : Symbol(Meet, Decl(file.tsx, 6, 1))
 >name : Symbol(name, Decl(file.tsx, 7, 15))
 
 	return <div>Hello, {name}</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 >name : Symbol(name, Decl(file.tsx, 7, 15))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 }
 function MeetAndGreet(k: {"prop-name": string}) {
 >MeetAndGreet : Symbol(MeetAndGreet, Decl(file.tsx, 9, 1))
@@= skipped -19, +19 lines =@@
 >"prop-name" : Symbol("prop-name", Decl(file.tsx, 10, 26))
 
 	return <div>Hi Hi</div>;
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
->div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
+>div : Symbol(div, Decl(react.d.ts, 2400, 45))
 }
 
 // OK
@@= skipped -14, +14 lines =@@
 >a1 : Symbol(a1, Decl(file.tsx, 16, 3))
 >Greet : Symbol(Greet, Decl(file.tsx, 2, 1))
 >name : Symbol(name, Decl(file.tsx, 16, 15))
->extra-prop : Symbol(extra-prop, Decl(file.tsx, 16, 28))
+>extra-prop : Symbol("extra-prop", Decl(file.tsx, 16, 28))
 
 // Error
 let b = <Greet naaame='world' />;
@@= skipped -16, +16 lines =@@
 let c1 = <Meet extra-prop/>;
 >c1 : Symbol(c1, Decl(file.tsx, 22, 3))
 >Meet : Symbol(Meet, Decl(file.tsx, 6, 1))
->extra-prop : Symbol(extra-prop, Decl(file.tsx, 22, 14))
+>extra-prop : Symbol("extra-prop", Decl(file.tsx, 22, 14))
 
 // OK
 let d = <Meet name='me' />;
@@= skipped -24, +24 lines =@@
 let g = <MeetAndGreet prop-name="Bob" />;
 >g : Symbol(g, Decl(file.tsx, 31, 3))
 >MeetAndGreet : Symbol(MeetAndGreet, Decl(file.tsx, 9, 1))
->prop-name : Symbol(prop-name, Decl(file.tsx, 31, 21))
+>prop-name : Symbol("prop-name", Decl(file.tsx, 31, 21))
 
 // Error
 let h = <MeetAndGreet extra-prop-name="World" />;
 >h : Symbol(h, Decl(file.tsx, 33, 3))
 >MeetAndGreet : Symbol(MeetAndGreet, Decl(file.tsx, 9, 1))
->extra-prop-name : Symbol(extra-prop-name, Decl(file.tsx, 33, 21))
+>extra-prop-name : Symbol("extra-prop-name", Decl(file.tsx, 33, 21))
 
 // Error
 let i = <EmptyPropSFC prop1 />
@@= skipped -50, +50 lines =@@
 let j2 = <EmptyPropSFC data-prop />
 >j2 : Symbol(j2, Decl(file.tsx, 50, 3))
 >EmptyPropSFC : Symbol(EmptyPropSFC, Decl(file.tsx, 0, 0))
->data-prop : Symbol(data-prop, Decl(file.tsx, 50, 22))
+>data-prop : Symbol("data-prop", Decl(file.tsx, 50, 22))
 
 let j3 = <EmptyPropSFC {...{}} />
 >j3 : Symbol(j3, Decl(file.tsx, 51, 3))
