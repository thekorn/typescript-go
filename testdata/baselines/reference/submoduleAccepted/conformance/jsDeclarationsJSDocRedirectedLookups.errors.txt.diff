--- old.jsDeclarationsJSDocRedirectedLookups.errors.txt
+++ new.jsDeclarationsJSDocRedirectedLookups.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+index.js(5,12): error TS2304: Cannot find name 'Void'.
+index.js(6,12): error TS2304: Cannot find name 'Undefined'.
+index.js(7,12): error TS2304: Cannot find name 'Null'.
+index.js(10,12): error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+index.js(11,12): error TS2552: Cannot find name 'array'. Did you mean 'Array'?
+index.js(12,12): error TS2552: Cannot find name 'promise'. Did you mean 'Promise'?
+index.js(13,12): error TS2315: Type 'Object' is not generic.
+index.js(30,12): error TS2749: 'event' refers to a value, but is being used as a type here. Did you mean 'typeof event'?
+
+
+==== index.js (8 errors) ====
+    // these are recognized as TS concepts by the checker
+    /** @type {String} */const a = "";
+    /** @type {Number} */const b = 0;
+    /** @type {Boolean} */const c = true;
+    /** @type {Void} */const d = undefined;
+               ~~~~
+!!! error TS2304: Cannot find name 'Void'.
+    /** @type {Undefined} */const e = undefined;
+               ~~~~~~~~~
+!!! error TS2304: Cannot find name 'Undefined'.
+    /** @type {Null} */const f = null;
+               ~~~~
+!!! error TS2304: Cannot find name 'Null'.
+    
+    /** @type {Function} */const g = () => void 0;
+    /** @type {function} */const h = () => void 0;
+               ~~~~~~~~
+!!! error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+!!! related TS2728 lib.es5.d.ts:--:--: 'Function' is declared here.
+    /** @type {array} */const i = [];
+               ~~~~~
+!!! error TS2552: Cannot find name 'array'. Did you mean 'Array'?
+!!! related TS2728 lib.es5.d.ts:--:--: 'Array' is declared here.
+    /** @type {promise} */const j = Promise.resolve(0);
+               ~~~~~~~
+!!! error TS2552: Cannot find name 'promise'. Did you mean 'Promise'?
+!!! related TS2728 lib.es2015.promise.d.ts:--:--: 'Promise' is declared here.
+    /** @type {Object<string, string>} */const k = {x: "x"};
+               ~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2315: Type 'Object' is not generic.
+    
+    
+    // these are not recognized as anything and should just be lookup failures
+    // ignore the errors to try to ensure they're emitted as `any` in declaration emit
+    // @ts-ignore
+    /** @type {class} */const l = true;
+    // @ts-ignore
+    /** @type {bool} */const m = true;
+    // @ts-ignore
+    /** @type {int} */const n = true;
+    // @ts-ignore
+    /** @type {float} */const o = true;
+    // @ts-ignore
+    /** @type {integer} */const p = true;
+    
+    // or, in the case of `event` likely erroneously refers to the type of the global Event object
+    /** @type {event} */const q = undefined;
+               ~~~~~
+!!! error TS2749: 'event' refers to a value, but is being used as a type here. Did you mean 'typeof event'?
