--- old.jsdocTemplateTag.types
+++ new.jsdocTemplateTag.types
@@= skipped -25, +25 lines =@@
  * @returns {function(): T}
  */
 function g(a) {
->g : <T>(a: T) => () => T
+>g : <T>(a: T) => function
 >a : T
 
     return () => a
@@= skipped -8, +8 lines =@@
 >a : T
 }
 let s = g('hi')()
->s : string
->g('hi')() : string
->g('hi') : () => string
->g : <T>(a: T) => () => T
+>s : any
+>g('hi')() : any
+>g('hi') : function
+>g : <T>(a: T) => function
 >'hi' : "hi"
 
 /**
  * @param {Array.<Object>} keyframes - Can't look up types on Element since it's a global in another file. (But it shouldn't crash).
  */
 Element.prototype.animate = function(keyframes) {};
->Element.prototype.animate = function(keyframes) {} : (keyframes: Array<any>) => void
->Element.prototype.animate : (keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeAnimationOptions) => Animation
+>Element.prototype.animate = function(keyframes) {} : (keyframes: Keyframe[] | PropertyIndexedKeyframes) => void
+>Element.prototype.animate : (keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation
 >Element.prototype : Element
 >Element : { new (): Element; prototype: Element; }
 >prototype : Element
->animate : (keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeAnimationOptions) => Animation
->function(keyframes) {} : (keyframes: Array<any>) => void
->keyframes : any[]
+>animate : (keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation
+>function(keyframes) {} : (keyframes: Keyframe[] | PropertyIndexedKeyframes) => void
+>keyframes : Keyframe[] | PropertyIndexedKeyframes
 
