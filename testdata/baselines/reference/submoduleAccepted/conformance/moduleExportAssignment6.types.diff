--- old.moduleExportAssignment6.types
+++ new.moduleExportAssignment6.types
@@= skipped -24, +24 lines =@@
     }
     /** @param {number} y */
     m(y) {
->m : (y: number) => number
+>m : (y: number) => any
 >y : number
 
         return this.x + y
->this.x + y : number
->this.x : number
+>this.x + y : any
+>this.x : any
 >this : this
->x : number
+>x : any
 >y : number
     }
 }
 function exec() {
->exec : () => number[]
+>exec : () => any
 
     const module = new C(12);
 >module : C
@@= skipped -21, +21 lines =@@
 >12 : 12
 
     return module.exports; // should be fine because `module` is defined locally
->module.exports : number[]
+>module.exports : any
 >module : C
->exports : number[]
+>exports : any
 }
 
 function tricky() {
->tricky : () => () => number[]
+>tricky : () => () => any
 
     // (a trickier variant of what webpack does)
     const module = new C(12);
@@= skipped -16, +16 lines =@@
 >12 : 12
 
     return () => {
->() => {        return module.exports;    } : () => number[]
+>() => {        return module.exports;    } : () => any
 
         return module.exports;
->module.exports : number[]
+>module.exports : any
 >module : C
->exports : number[]
+>exports : any
     }
 }
 
