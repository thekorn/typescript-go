--- old.checkJsdocTypeTag5.types
+++ new.checkJsdocTypeTag5.types
@@= skipped -3, +3 lines =@@
 // all 6 should error on return statement/expression
 /** @type {(x: number) => string} */
 function h(x) { return x }
->h : (x: number) => string
->x : number
->x : number
+>h : (x: any) => any
+>x : any
+>x : any
 
 /** @type {(x: number) => string} */
 var f = x => x
 >f : (x: number) => string
->x => x : (x: number) => string
+>x => x : (x: number) => number
 >x : number
 >x : number
 
 /** @type {(x: number) => string} */
 var g = function (x) { return x }
 >g : (x: number) => string
->function (x) { return x } : (x: number) => string
+>function (x) { return x } : (x: number) => number
 >x : number
 >x : number
 
 /** @type {{ (x: number): string }} */
 function i(x) { return x }
->i : (x: number) => string
->x : number
->x : number
+>i : (x: any) => any
+>x : any
+>x : any
 
 /** @type {{ (x: number): string }} */
 var j = x => x
 >j : (x: number) => string
->x => x : (x: number) => string
+>x => x : (x: number) => number
 >x : number
 >x : number
 
 /** @type {{ (x: number): string }} */
 var k = function (x) { return x }
 >k : (x: number) => string
->function (x) { return x } : (x: number) => string
+>function (x) { return x } : (x: number) => number
 >x : number
 >x : number
 
@@= skipped -42, +42 lines =@@
 /** @typedef {(x: 'hi' | 'bye') => 0 | 1 | 2} Argle */
 /** @type {Argle} */
 function blargle(s) {
->blargle : (x: "hi" | "bye") => 0 | 1 | 2
->s : "bye" | "hi"
+>blargle : (s: any) => number
+>s : any
 
     return 0;
 >0 : 0
@@= skipped -10, +10 lines =@@
 /** @type {0 | 1 | 2} - assignment should not error */
 var zeroonetwo = blargle('hi')
 >zeroonetwo : 0 | 1 | 2
->blargle('hi') : 0 | 1 | 2
->blargle : (x: "hi" | "bye") => 0 | 1 | 2
+>blargle('hi') : number
+>blargle : (s: any) => number
 >'hi' : "hi"
 
 /** @typedef {{(s: string): 0 | 1; (b: boolean): 2 | 3 }} Gioconda */
