--- old.assertionTypePredicates2.types
+++ new.assertionTypePredicates2.types
@@= skipped -13, +13 lines =@@
  * @returns { asserts a is B }
  */
 const foo = (a) => {
->foo : (a: A) => asserts a is B
->(a) => {    if (/** @type { B } */ (a).y !== 0) throw TypeError();    return undefined;} : (a: A) => asserts a is B
->a : A
+>foo : (a: { x: number; }) => asserts a is { x: number; } & { y: number; }
+>(a) => {    if (/** @type { B } */ (a).y !== 0) throw TypeError();    return undefined;} : (a: { x: number; }) => asserts a is { x: number; } & { y: number; }
+>a : { x: number; }
 
     if (/** @type { B } */ (a).y !== 0) throw TypeError();
 >(a).y !== 0 : boolean
 >(a).y : number
->(a) : B
->a : A
+>(a) : { x: number; } & { y: number; }
+>a : { x: number; } & { y: number; }
+>a : { x: number; }
 >y : number
 >0 : 0
 >TypeError() : TypeError
@@= skipped -25, +26 lines =@@
 
     /** @type { A } */
     const a = { x: 1 };
->a : A
+>a : { x: number; }
 >{ x: 1 } : { x: number; }
 >x : number
 >1 : 1
 
     foo(a);
 >foo(a) : void
->foo : (a: A) => asserts a is B
->a : A
+>foo : (a: { x: number; }) => asserts a is { x: number; } & { y: number; }
+>a : { x: number; }
 
 };
 
