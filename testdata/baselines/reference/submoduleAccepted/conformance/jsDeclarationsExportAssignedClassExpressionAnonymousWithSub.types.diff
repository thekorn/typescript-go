--- old.jsDeclarationsExportAssignedClassExpressionAnonymousWithSub.types
+++ new.jsDeclarationsExportAssignedClassExpressionAnonymousWithSub.types
@@= skipped -1, +1 lines =@@
 
 === index.js ===
 module.exports = class {
->module.exports = class {    /**     * @param {number} p     */    constructor(p) {        this.t = 12 + p;    }} : typeof import("index")
->module.exports : typeof import("index")
->module : { exports: typeof import("index"); }
->exports : typeof import("index")
->class {    /**     * @param {number} p     */    constructor(p) {        this.t = 12 + p;    }} : typeof import("index")
+>module.exports = class {    /**     * @param {number} p     */    constructor(p) {        this.t = 12 + p;    }} : typeof exports
+>module.exports : any
+>module : any
+>exports : any
+>class {    /**     * @param {number} p     */    constructor(p) {        this.t = 12 + p;    }} : typeof exports
 
     /**
      * @param {number} p
@@= skipped -24, +24 lines =@@
 }
 module.exports.Sub = class {
 >module.exports.Sub = class {    constructor() {        this.instance = new module.exports(10);    }} : typeof Sub
->module.exports.Sub : typeof Sub
->module.exports : typeof import("index")
->module : { exports: typeof import("index"); }
->exports : typeof import("index")
->Sub : typeof Sub
+>module.exports.Sub : any
+>module.exports : any
+>module : any
+>exports : any
+>Sub : any
 >class {    constructor() {        this.instance = new module.exports(10);    }} : typeof Sub
 
     constructor() {
         this.instance = new module.exports(10);
->this.instance = new module.exports(10) : import("index")
+>this.instance = new module.exports(10) : any
 >this.instance : any
 >this : this
 >instance : any
->new module.exports(10) : import("index")
->module.exports : typeof import("index")
->module : { exports: typeof import("index"); }
->exports : typeof import("index")
+>new module.exports(10) : any
+>module.exports : any
+>module : any
+>exports : any
 >10 : 10
     }
 }
