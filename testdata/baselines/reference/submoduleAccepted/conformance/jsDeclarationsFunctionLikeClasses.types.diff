--- old.jsDeclarationsFunctionLikeClasses.types
+++ new.jsDeclarationsFunctionLikeClasses.types
@@= skipped -5, +5 lines =@@
  * @param {number} y
  */
 export function Point(x, y) {
->Point : typeof Point
+>Point : (x: number, y: number) => any
 >x : number
 >y : number
 
@@= skipped -8, +8 lines =@@
 >!(this instanceof Point) : boolean
 >(this instanceof Point) : boolean
 >this instanceof Point : boolean
->this : this
->Point : typeof Point
+>this : any
+>Point : (x: number, y: number) => any
 
         return new Point(x, y);
->new Point(x, y) : Point
->Point : typeof Point
+>new Point(x, y) : any
+>Point : (x: number, y: number) => any
 >x : number
 >y : number
     }
     this.x = x;
 >this.x = x : number
 >this.x : any
->this : this
+>this : any
 >x : any
 >x : number
 
     this.y = y;
 >this.y = y : number
 >this.y : any
->this : this
+>this : any
 >y : any
 >y : number
 }
 
 === referencer.js ===
 import {Point} from "./source";
->Point : typeof Point
+>Point : (x: number, y: number) => any
 
 /**
  * @param {Point} p
@@= skipped -42, +42 lines =@@
 >sqrt : (x: number) => number
 >p.x ** 2 + p.y ** 2 : number
 >p.x ** 2 : number
->p.x : number
+>p.x : any
 >p : Point
->x : number
+>x : any
 >2 : 2
 >p.y ** 2 : number
->p.y : number
+>p.y : any
 >p : Point
->y : number
+>y : any
 >2 : 2
 }
 
