--- old.templateInsideCallback.types
+++ new.templateInsideCallback.types
@@= skipped -17, +17 lines =@@
  * @type {Call<T>}
  */
 const identity = x => x;
->identity : any
+>identity : Call<T>
 >x => x : <T>(x: any) => any
 >x : any
 >x : any
@@= skipped -34, +34 lines =@@
  * @returns {unknown[]}
  */
 function flatMap(array, iterable = identity) {
->flatMap : { <U>(): any; (): any; }
+>flatMap : (array: unknown[], iterable?: (x: unknown) => unknown) => unknown[]
 >array : unknown[]
 >iterable : (x: unknown) => unknown
->identity : any
+>identity : Call<T>
 
   /** @type {unknown[]} */
   const result = [];
@@= skipped -29, +29 lines =@@
 >push : (...items: unknown[]) => number
 >.../** @type {unknown[]} */(iterable(array[i])) : unknown
 >(iterable(array[i])) : unknown[]
+>iterable(array[i]) : unknown[]
 >iterable(array[i]) : unknown
 >iterable : (x: unknown) => unknown
 >array[i] : unknown
