--- old.jsdocPrefixPostfixParsing.types
+++ new.jsdocPrefixPostfixParsing.types
@@= skipped -18, +18 lines =@@
  * @param {[number, number?]} m - [number, (number | undefined)?]
  */
 function f(x, y, z, a, b, c, e, f, g, h, i, j, k, l, m) {
->f : (x: number[], y: number[], z: (number[]), a: any, b: number[] | null, c: (number[]) | null, e: (number | null)[], f: (number | null)[], g: (number | null)[], h: any, i: number[][], j: (number[] | null)[], k: any, l: number extends number ? true : false, m: [number, number?]) => void
+>f : (x: number[], y: number[], z: number[], a: any, b: number[] | null, c: number[] | null, e: (number | null)[], f: (number | null)[], g: (number | null)[], h: any, i: number[][], j: (number[] | null)[], k: any, l: true, m: [number, (number | undefined)?]) => void
 >x : number[]
 >y : number[]
 >z : number[]
 >a : any
 >b : number[] | null
 >c : number[] | null
->e : number | null | undefined
->f : number | null | undefined
->g : number | null | undefined
+>e : (number | null)[]
+>f : (number | null)[]
+>g : (number | null)[]
 >h : any
->i : number[] | undefined
->j : number[] | null | undefined
+>i : number[][]
+>j : (number[] | null)[]
 >k : any
 >l : true
 >m : [number, (number | undefined)?]
