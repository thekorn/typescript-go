--- old.jsdocArrayObjectPromiseNoImplicitAny.errors.txt
+++ new.jsdocArrayObjectPromiseNoImplicitAny.errors.txt
@@= skipped -0, +0 lines =@@
-jsdocArrayObjectPromiseNoImplicitAny.js(1,12): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
-jsdocArrayObjectPromiseNoImplicitAny.js(8,12): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
-jsdocArrayObjectPromiseNoImplicitAny.js(9,13): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
+jsdocArrayObjectPromiseNoImplicitAny.js(1,12): error TS2314: Generic type 'T[]' requires 1 type argument(s).
+jsdocArrayObjectPromiseNoImplicitAny.js(8,12): error TS2314: Generic type 'T[]' requires 1 type argument(s).
+jsdocArrayObjectPromiseNoImplicitAny.js(9,13): error TS2314: Generic type 'T[]' requires 1 type argument(s).
 jsdocArrayObjectPromiseNoImplicitAny.js(15,12): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
 jsdocArrayObjectPromiseNoImplicitAny.js(22,12): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
 jsdocArrayObjectPromiseNoImplicitAny.js(23,13): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
 jsdocArrayObjectPromiseNoImplicitAny.js(30,21): error TS2322: Type 'number' is not assignable to type '() => Object'.
+jsdocArrayObjectPromiseNoImplicitAny.js(32,12): error TS2315: Type 'Object' is not generic.
 
 
-==== jsdocArrayObjectPromiseNoImplicitAny.js (7 errors) ====
+==== jsdocArrayObjectPromiseNoImplicitAny.js (8 errors) ====
     /** @type {Array} */
                ~~~~~
-!!! error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
+!!! error TS2314: Generic type 'T[]' requires 1 type argument(s).
     var notAnyArray = [5];
     
     /** @type {Array<number>} */
@@= skipped -18, +19 lines =@@
     /**
      * @param {Array} arr
                ~~~~~
-!!! error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
+!!! error TS2314: Generic type 'T[]' requires 1 type argument(s).
      * @return {Array}
                 ~~~~~
-!!! error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
+!!! error TS2314: Generic type 'T[]' requires 1 type argument(s).
      */
     function returnNotAnyArray(arr) {
       return arr;
@@= skipped -35, +35 lines =@@
 !!! error TS2322: Type 'number' is not assignable to type '() => Object'.
     
     /** @type {Object<string, number>} */
+               ~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS2315: Type 'Object' is not generic.
     var paramedObject = {valueOf: 1};
     
     /**
